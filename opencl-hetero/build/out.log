*************************************************************
*************************************************************
2D shallow water heterogenuous opencl model $
-------------------------------------------------------------
*************************************************************
*************************************************************
*** HOST Run ***
*************************************************************
Host arrays initialized.
-------------------------------------------------------------
Host: starting time loop for host run
j = 0, k = 0, eta =  10.000000
j = 0, k = 1, eta =  10.000000
j = 0, k = 2, eta =  10.000000
j = 0, k = 3, eta =  10.000000
j = 0, k = 4, eta =  10.000000
j = 0, k = 5, eta =  10.000000
j = 0, k = 6, eta =  10.000000
j = 0, k = 7, eta =  10.000000
j = 1, k = 0, eta =  10.000000
j = 1, k = 1, eta =  -0.000000
j = 1, k = 2, eta =  -0.000000
j = 1, k = 3, eta =  -0.000000
j = 1, k = 4, eta =  -0.000000
j = 1, k = 5, eta =  -0.000000
j = 1, k = 6, eta =  -0.000000
j = 1, k = 7, eta =  10.000000
j = 2, k = 0, eta =  10.000000
j = 2, k = 1, eta =  -0.000000
j = 2, k = 2, eta =  -0.000000
j = 2, k = 3, eta =  -0.000000
j = 2, k = 4, eta =  -0.000000
j = 2, k = 5, eta =  -0.000000
j = 2, k = 6, eta =  -0.000000
j = 2, k = 7, eta =  10.000000
j = 3, k = 0, eta =  10.000000
j = 3, k = 1, eta =  -0.000000
j = 3, k = 2, eta =  -0.000000
j = 3, k = 3, eta =  1.000000
j = 3, k = 4, eta =  -0.000000
j = 3, k = 5, eta =  -0.000000
j = 3, k = 6, eta =  -0.000000
j = 3, k = 7, eta =  10.000000
j = 4, k = 0, eta =  10.000000
j = 4, k = 1, eta =  -0.000000
j = 4, k = 2, eta =  -0.000000
j = 4, k = 3, eta =  -0.000000
j = 4, k = 4, eta =  -0.000000
j = 4, k = 5, eta =  -0.000000
j = 4, k = 6, eta =  -0.000000
j = 4, k = 7, eta =  10.000000
j = 5, k = 0, eta =  10.000000
j = 5, k = 1, eta =  -0.000000
j = 5, k = 2, eta =  -0.000000
j = 5, k = 3, eta =  -0.000000
j = 5, k = 4, eta =  -0.000000
j = 5, k = 5, eta =  -0.000000
j = 5, k = 6, eta =  -0.000000
j = 5, k = 7, eta =  10.000000
j = 6, k = 0, eta =  10.000000
j = 6, k = 1, eta =  -0.000000
j = 6, k = 2, eta =  -0.000000
j = 6, k = 3, eta =  -0.000000
j = 6, k = 4, eta =  -0.000000
j = 6, k = 5, eta =  -0.000000
j = 6, k = 6, eta =  -0.000000
j = 6, k = 7, eta =  10.000000
j = 7, k = 0, eta =  10.000000
j = 7, k = 1, eta =  10.000000
j = 7, k = 2, eta =  10.000000
j = 7, k = 3, eta =  10.000000
j = 7, k = 4, eta =  10.000000
j = 7, k = 5, eta =  10.000000
j = 7, k = 6, eta =  10.000000
j = 7, k = 7, eta =  10.000000
Host: host execution complete.
*************************************************************
OCL: *** OpenCL Run ***
*************************************************************
Host arrays initialized.
-------------------------------------------------------------
c = 14.007141, lambda = 0.099045
This system uses 4 bytes per array element.
-------------------------------------------------------------
Array dimensions	= 8 x 8 (elements)
Array size		= 64 (elements)
Memory per array	= 0.0 MiB (= 0.0 GiB).
Total memory required	= 0.0 MiB (= 0.0 GiB).
Each kernel will be executed 1 times.
Bandwidth based on best, worst, and average times (excluding the first iteration)
will be reported, along with relative standard deviation.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 0 microseconds.
   (= 0 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
*************************************************************
Experimental Setup 
-------------------------------------------------------------
TARGET      = 0 [AOCL, SDACCEL, GPU, CPU] 
VECTOR_SIZE = 1                           
ROWS        = 8                           
SIZE        = 64                           
WORKITEMS   = 0 [SINGLEWI, NDRANGE]       
NTOT        = 1                           
NTIMES      = 1                           
WORD        = 1 [INT, FLOAT, DOUBLE]      
USECHANNELS = 1                           
-------------------------------------------------------------
*************************************************************
OpenCL Setup 
-------------------------------------------------------------
Number of platforms:	1
CL_PLATFORM_VENDOR:	Altera Corporation
CL_PLATFORM_NAME:	Altera SDK for OpenCL
CL_PLATFORM_VERSION:	OpenCL 1.0 Altera SDK for OpenCL, Version 15.1
-------------------------------------------------------------
Device details
-------------------------------------------------------------
NUMBER OF DEVICES:	1
TARGET = AOCL
DEVICE ID:		-375856048
CL_DEVICE_NAME:	EmulatorDevice : Emulated Device
CL_DEVICE_VENDOR:	Altera Corporation
CL_DEVICE_VENDOR_ID:	4466
CL_DEVICE_VERSION:	OpenCL 1.0 Altera SDK for OpenCL, Version 15.1
CL_DRIVER_VERSION:	15.1
CL_DEVICE_ADDRESS_BITS:	64
CL_DEVICE_AVAILABLE:	1
CL_DEVICE_ENDIAN_LITTLE:	1
CL_DEVICE_GLOBAL_MEM_CACHE_SIZE:	32768
CL_DEVICE_GLOBAL_MEM_CACHELINE_SIZE:	0
CL_DEVICE_GLOBAL_MEM_SIZE:	0
CL_DEVICE_IMAGE_SUPPORT:	1
CL_DEVICE_LOCAL_MEM_SIZE:	16384
CL_DEVICE_MAX_CLOCK_FREQUENCY:	1000
CL_DEVICE_MAX_COMPUTE_UNITS:	1
CL_DEVICE_MAX_CONSTANT_ARGS:	8
CL_DEVICE_MAX_CONSTANT_BUFFER_SIZE:	-2147483648
CL_DEVICE_MAX_WORK_ITEM_DIMENSIONS:	3
CL_DEVICE_MEM_BASE_ADDR_ALIGN:	8192
CL_DEVICE_MIN_DATA_TYPE_ALIGN_SIZE:	1024
CL_DEVICE_PREFERRED_VECTOR_WIDTH_CHAR:	4
CL_DEVICE_PREFERRED_VECTOR_WIDTH_SHORT:	2
CL_DEVICE_PREFERRED_VECTOR_WIDTH_INT:	1
CL_DEVICE_PREFERRED_VECTOR_WIDTH_LONG:	1
CL_DEVICE_PREFERRED_VECTOR_WIDTH_FLOAT:	1
CL_DEVICE_PREFERRED_VECTOR_WIDTH_DOUBLE:	0
-------------------------------------------------------------
Context creation:	OK
Command Queue creation # 0:	OK
-------------------------------------------------------------
Command Queue creation # 1:	OK
-------------------------------------------------------------
Command Queue creation # 2:	OK
-------------------------------------------------------------
Command Queue creation # 3:	OK
-------------------------------------------------------------
Command Queue creation # 4:	OK
-------------------------------------------------------------
Command Queue creation # 5:	OK
-------------------------------------------------------------
OCLH: loading ../build-aocl/build-current/run-cpu_emu.aocx
OCLH: Program built
OCLH: Kernel created # 0
OCLH: Kernel created # 1
OCLH: Kernel created # 2
OCLH: Kernel created # 3
OCLH: Kernel created # 4
OCLH: Kernel created # 5
OCLH: Created a buffer of size 64 bytes in device memory
OCLH: Created a buffer of size 64 bytes in device memory
OCLH: Created a buffer of size 64 bytes in device memory
OCLH: Created a buffer of size 64 bytes in device memory
OCLH: Created a buffer of size 64 bytes in device memory
OCLH: Created a buffer of size 64 bytes in device memory
OCLH: Created a buffer of size 64 bytes in device memory
OCLH: Created a buffer of size 64 bytes in device memory
OCLH: Created a buffer of size 64 bytes in device memory
*************************************************************
Application Run # 1
Host arrays initialized.
-------------------------------------------------------------
Global size = 1 
Local Size = localSize[0]
Starting time loop 
K_MEM-RD-ATTEMPT-WRITE: index = 0
K_MEM-RD-ATTEMPT-SUCCESS: index = 0
K_MEM-RD-ATTEMPT-WRITE: index = 1
K_MEM-RD-ATTEMPT-SUCCESS: index = 1
K_MEM-RD-ATTEMPT-WRITE: index = 2
K_MEM-RD-ATTEMPT-SUCCESS: index = 2
K_MEM-RD-ATTEMPT-WRITE: index = 3
K_MEM-RD-ATTEMPT-SUCCESS: index = 3
K_MEM-RD-ATTEMPT-WRITE: index = 4
K_MEM-RD-ATTEMPT-SUCCESS: index = 4
K_MEM-RD-ATTEMPT-WRITE: index = 5
K_MEM-RD-ATTEMPT-SUCCESS: index = 5
K_MEM-RD-ATTEMPT-WRITE: index = 6
K_MEM-RD-ATTEMPT-SUCCESS: index = 6
K_MEM-RD-ATTEMPT-WRITE: index = 7
K_MEM-RD-ATTEMPT-SUCCESS: index = 7
K_MEM-RD-ATTEMPT-WRITE: index = 8
K_MEM-RD-ATTEMPT-SUCCESS: index = 8
K_MEM-RD-ATTEMPT-WRITE: index = 9
K_MEM-RD-ATTEMPT-SUCCESS: index = 9
K_MEM-RD-ATTEMPT-WRITE: index = 10
K_MEM-RD-ATTEMPT-SUCCESS: index = 10
K_MEM-RD-ATTEMPT-WRITE: index = 11
K_MEM-RD-ATTEMPT-SUCCESS: index = 11
K_MEM-RD-ATTEMPT-WRITE: index = 12
K_MEM-RD-ATTEMPT-SUCCESS: index = 12
K_MEM-RD-ATTEMPT-WRITE: index = 13
K_MEM-RD-ATTEMPT-SUCCESS: index = 13
K_MEM-RD-ATTEMPT-WRITE: index = 14
K_MEM-RD-ATTEMPT-SUCCESS: index = 14
K_MEM-RD-ATTEMPT-WRITE: index = 15
K_MEM-RD-ATTEMPT-SUCCESS: index = 15
K_MEM-RD-ATTEMPT-WRITE: index = 16
K_MEM-RD-ATTEMPT-SUCCESS: index = 16
K_MEM-RD-ATTEMPT-WRITE: index = 17
K_MEM-RD-ATTEMPT-SUCCESS: index = 17
K_MEM-RD-ATTEMPT-WRITE: index = 18
K_MEM-RD-ATTEMPT-SUCCESS: index = 18
K_MEM-RD-ATTEMPT-WRITE: index = 19
K_MEM-RD-ATTEMPT-SUCCESS: index = 19
K_MEM-RD-ATTEMPT-WRITE: index = 20
K_MEM-RD-ATTEMPT-SUCCESS: index = 20
K_MEM-RD-ATTEMPT-WRITE: index = 21
K_MEM-RD-ATTEMPT-SUCCESS: index = 21
K_MEM-RD-ATTEMPT-WRITE: index = 22
K_MEM-RD-ATTEMPT-SUCCESS: index = 22
K_MEM-RD-ATTEMPT-WRITE: index = 23
K_MEM-RD-ATTEMPT-SUCCESS: index = 23
K_MEM-RD-ATTEMPT-WRITE: index = 24
K_MEM-RD-ATTEMPT-SUCCESS: index = 24
K_MEM-RD-ATTEMPT-WRITE: index = 25
K_MEM-RD-ATTEMPT-SUCCESS: index = 25
K_MEM-RD-ATTEMPT-WRITE: index = 26
K_MEM-RD-ATTEMPT-SUCCESS: index = 26
K_MEM-RD-ATTEMPT-WRITE: index = 27
K_MEM-RD-ATTEMPT-SUCCESS: index = 27
K_MEM-RD-ATTEMPT-WRITE: index = 28
K_MEM-RD-ATTEMPT-SUCCESS: index = 28
K_MEM-RD-ATTEMPT-WRITE: index = 29
K_MEM-RD-ATTEMPT-SUCCESS: index = 29
K_MEM-RD-ATTEMPT-WRITE: index = 30
K_MEM-RD-ATTEMPT-SUCCESS: index = 30
K_MEM-RD-ATTEMPT-WRITE: index = 31
K_MEM-RD-ATTEMPT-SUCCESS: index = 31
K_MEM-RD-ATTEMPT-WRITE: index = 32
K_MEM-RD-ATTEMPT-SUCCESS: index = 32
K_MEM-RD-ATTEMPT-WRITE: index = 33
K_MEM-RD-ATTEMPT-SUCCESS: index = 33
K_MEM-RD-ATTEMPT-WRITE: index = 34
K_MEM-RD-ATTEMPT-SUCCESS: index = 34
K_MEM-RD-ATTEMPT-WRITE: index = 35
K_MEM-RD-ATTEMPT-SUCCESS: index = 35
K_MEM-RD-ATTEMPT-WRITE: index = 36
K_MEM-RD-ATTEMPT-SUCCESS: index = 36
K_MEM-RD-ATTEMPT-WRITE: index = 37
K_MEM-RD-ATTEMPT-SUCCESS: index = 37
K_MEM-RD-ATTEMPT-WRITE: index = 38
K_MEM-RD-ATTEMPT-SUCCESS: index = 38
K_MEM-RD-ATTEMPT-WRITE: index = 39
K_MEM-RD-ATTEMPT-SUCCESS: index = 39
K_MEM-RD-ATTEMPT-WRITE: index = 40
K_MEM-RD-ATTEMPT-SUCCESS: index = 40
K_MEM-RD-ATTEMPT-WRITE: index = 41
K_MEM-RD-ATTEMPT-SUCCESS: index = 41
K_MEM-RD-ATTEMPT-WRITE: index = 42
K_MEM-RD-ATTEMPT-SUCCESS: index = 42
K_MEM-RD-ATTEMPT-WRITE: index = 43
K_MEM-RD-ATTEMPT-SUCCESS: index = 43
K_MEM-RD-ATTEMPT-WRITE: index = 44
K_MEM-RD-ATTEMPT-SUCCESS: index = 44
K_MEM-RD-ATTEMPT-WRITE: index = 45
K_MEM-RD-ATTEMPT-SUCCESS: index = 45
K_MEM-RD-ATTEMPT-WRITE: index = 46
K_MEM-RD-ATTEMPT-SUCCESS: index = 46
K_MEM-RD-ATTEMPT-WRITE: index = 47
K_MEM-RD-ATTEMPT-SUCCESS: index = 47
K_MEM-RD-ATTEMPT-WRITE: index = 48
K_MEM-RD-ATTEMPT-SUCCESS: index = 48
K_MEM-RD-ATTEMPT-WRITE: index = 49
K_MEM-RD-ATTEMPT-SUCCESS: index = 49
K_MEM-RD-ATTEMPT-WRITE: index = 50
K_MEM-RD-ATTEMPT-SUCCESS: index = 50
K_MEM-RD-ATTEMPT-WRITE: index = 51
K_MEM-RD-ATTEMPT-SUCCESS: index = 51
K_MEM-RD-ATTEMPT-WRITE: index = 52
K_MEM-RD-ATTEMPT-SUCCESS: index = 52
K_MEM-RD-ATTEMPT-WRITE: index = 53
K_MEM-RD-ATTEMPT-SUCCESS: index = 53
K_MEM-RD-ATTEMPT-WRITE: index = 54
K_MEM-RD-ATTEMPT-SUCCESS: index = 54
K_MEM-RD-ATTEMPT-WRITE: index = 55
K_MEM-RD-ATTEMPT-SUCCESS: index = 55
K_MEM-RD-ATTEMPT-WRITE: index = 56
K_MEM-RD-ATTEMPT-SUCCESS: index = 56
K_MEM-RD-ATTEMPT-WRITE: index = 57
K_MEM-RD-ATTEMPT-SUCCESS: index = 57
K_MEM-RD-ATTEMPT-WRITE: index = 58
K_MEM-RD-ATTEMPT-SUCCESS: index = 58
K_MEM-RD-ATTEMPT-WRITE: index = 59
K_MEM-RD-ATTEMPT-SUCCESS: index = 59
K_MEM-RD-ATTEMPT-WRITE: index = 60
K_MEM-RD-ATTEMPT-SUCCESS: index = 60
K_MEM-RD-ATTEMPT-WRITE: index = 61
K_MEM-RD-ATTEMPT-SUCCESS: index = 61
K_MEM-RD-ATTEMPT-WRITE: index = 62
K_MEM-RD-ATTEMPT-SUCCESS: index = 62
K_MEM-RD-ATTEMPT-WRITE: index = 63
K_MEM-RD-ATTEMPT-SUCCESS: index = 63
K_DYN1-READ-ATTEMPT-BUFFER: count = 0, buffindex = 0, compindex = -8; j = -1, k = 0; Attempting to READ to channels
K_DYN1-READ-SUCCESS-BUFFER: count = 0, buffindex = 0, compindex = -8; j = -1, k = 0; !!READ channels succeeded!!
K_DYN1-READ-ATTEMPT-BUFFER: count = 1, buffindex = 1, compindex = -7; j = 0, k = -7; Attempting to READ to channels
K_DYN1-READ-SUCCESS-BUFFER: count = 1, buffindex = 1, compindex = -7; j = 0, k = -7; !!READ channels succeeded!!
K_DYN1-READ-ATTEMPT-BUFFER: count = 2, buffindex = 2, compindex = -6; j = 0, k = -6; Attempting to READ to channels
K_DYN1-READ-SUCCESS-BUFFER: count = 2, buffindex = 2, compindex = -6; j = 0, k = -6; !!READ channels succeeded!!
K_DYN1-READ-ATTEMPT-BUFFER: count = 3, buffindex = 3, compindex = -5; j = 0, k = -5; Attempting to READ to channels
K_DYN1-READ-SUCCESS-BUFFER: count = 3, buffindex = 3, compindex = -5; j = 0, k = -5; !!READ channels succeeded!!
K_DYN1-READ-ATTEMPT-BUFFER: count = 4, buffindex = 4, compindex = -4; j = 0, k = -4; Attempting to READ to channels
K_DYN1-READ-SUCCESS-BUFFER: count = 4, buffindex = 4, compindex = -4; j = 0, k = -4; !!READ channels succeeded!!
K_DYN1-READ-ATTEMPT-BUFFER: count = 5, buffindex = 5, compindex = -3; j = 0, k = -3; Attempting to READ to channels
K_DYN1-READ-SUCCESS-BUFFER: count = 5, buffindex = 5, compindex = -3; j = 0, k = -3; !!READ channels succeeded!!
K_DYN1-READ-ATTEMPT-BUFFER: count = 6, buffindex = 6, compindex = -2; j = 0, k = -2; Attempting to READ to channels
K_DYN1-READ-SUCCESS-BUFFER: count = 6, buffindex = 6, compindex = -2; j = 0, k = -2; !!READ channels succeeded!!
K_DYN1-READ-ATTEMPT-BUFFER: count = 7, buffindex = 7, compindex = -1; j = 0, k = -1; Attempting to READ to channels
K_DYN1-READ-SUCCESS-BUFFER: count = 7, buffindex = 7, compindex = -1; j = 0, k = -1; !!READ channels succeeded!!
K_DYN1-READ-ATTEMPT-BUFFER: count = 8, buffindex = 8, compindex = 0; j = 0, k = 0; Attempting to READ to channels
K_DYN1-READ-SUCCESS-BUFFER: count = 8, buffindex = 8, compindex = 0; j = 0, k = 0; !!READ channels succeeded!!
K_DYN1-WRITE-ATTEMPT: count = 8, buffindex = 8, compindex = 0; j = 0, k = 0; Attempting to READ to channels
K_DYN1-WRITE_SUCCESS: count = 8, buffindex = 8, compindex = 0; j = 0, k = 0; Attempting to READ to channels
K_DYN1-READ-ATTEMPT-BUFFER: count = 9, buffindex = 9, compindex = 1; j = 0, k = 1; Attempting to READ to channels
K_DYN1-READ-SUCCESS-BUFFER: count = 9, buffindex = 9, compindex = 1; j = 0, k = 1; !!READ channels succeeded!!
K_DYN1-WRITE-ATTEMPT: count = 9, buffindex = 9, compindex = 1; j = 0, k = 1; Attempting to READ to channels
K_DYN1-WRITE_SUCCESS: count = 9, buffindex = 9, compindex = 1; j = 0, k = 1; Attempting to READ to channels
K_DYN1-READ-ATTEMPT-BUFFER: count = 10, buffindex = 10, compindex = 2; j = 0, k = 2; Attempting to READ to channels
K_DYN1-READ-SUCCESS-BUFFER: count = 10, buffindex = 10, compindex = 2; j = 0, k = 2; !!READ channels succeeded!!
K_DYN1-WRITE-ATTEMPT: count = 10, buffindex = 10, compindex = 2; j = 0, k = 2; Attempting to READ to channels
K_DYN1-WRITE_SUCCESS: count = 10, buffindex = 10, compindex = 2; j = 0, k = 2; Attempting to READ to channels
K_DYN1-READ-ATTEMPT-BUFFER: count = 11, buffindex = 11, compindex = 3; j = 0, k = 3; Attempting to READ to channels
K_DYN1-READ-SUCCESS-BUFFER: count = 11, buffindex = 11, compindex = 3; j = 0, k = 3; !!READ channels succeeded!!
K_DYN1-WRITE-ATTEMPT: count = 11, buffindex = 11, compindex = 3; j = 0, k = 3; Attempting to READ to channels
K_DYN1-WRITE_SUCCESS: count = 11, buffindex = 11, compindex = 3; j = 0, k = 3; Attempting to READ to channels
K_DYN1-READ-ATTEMPT-BUFFER: count = 12, buffindex = 12, compindex = 4; j = 0, k = 4; Attempting to READ to channels
K_DYN1-READ-SUCCESS-BUFFER: count = 12, buffindex = 12, compindex = 4; j = 0, k = 4; !!READ channels succeeded!!
K_DYN1-WRITE-ATTEMPT: count = 12, buffindex = 12, compindex = 4; j = 0, k = 4; Attempting to READ to channels
K_DYN1-WRITE_SUCCESS: count = 12, buffindex = 12, compindex = 4; j = 0, k = 4; Attempting to READ to channels
K_DYN1-READ-ATTEMPT-BUFFER: count = 13, buffindex = 13, compindex = 5; j = 0, k = 5; Attempting to READ to channels
K_DYN1-READ-SUCCESS-BUFFER: count = 13, buffindex = 13, compindex = 5; j = 0, k = 5; !!READ channels succeeded!!
K_DYN1-WRITE-ATTEMPT: count = 13, buffindex = 13, compindex = 5; j = 0, k = 5; Attempting to READ to channels
K_DYN1-WRITE_SUCCESS: count = 13, buffindex = 13, compindex = 5; j = 0, k = 5; Attempting to READ to channels
K_DYN1-READ-ATTEMPT-BUFFER: count = 14, buffindex = 14, compindex = 6; j = 0, k = 6; Attempting to READ to channels
K_DYN1-READ-SUCCESS-BUFFER: count = 14, buffindex = 14, compindex = 6; j = 0, k = 6; !!READ channels succeeded!!
K_DYN1-WRITE-ATTEMPT: count = 14, buffindex = 14, compindex = 6; j = 0, k = 6; Attempting to READ to channels
K_DYN1-WRITE_SUCCESS: count = 14, buffindex = 14, compindex = 6; j = 0, k = 6; Attempting to READ to channels
K_DYN1-READ-ATTEMPT-BUFFER: count = 15, buffindex = 15, compindex = 7; j = 0, k = 7; Attempting to READ to channels
K_DYN1-READ-SUCCESS-BUFFER: count = 1092616192, buffindex = 15, compindex = 7; j = 0, k = 7; !!READ channels succeeded!!
K_DYN1-WRITE-ATTEMPT: count = 1092616192, buffindex = 15, compindex = 7; j = 0, k = 7; Attempting to READ to channels
K_DYN1-WRITE_SUCCESS: count = 1092616192, buffindex = 15, compindex = 7; j = 0, k = 7; Attempting to READ to channels
K_DYN2-LOOPTOP: count_dyn2 = 0, arrsize = 64, nloop = 72, buffindex = 0, compindex = -8; j = -1, k = 0; 
K_DYN2-READ-ATTEMPT-BUFFER: count_dyn2 = 0, buffindex = 0, compindex = -8; j = -1, k = 0; Attempting to READ to channels
K_DYN2-READ-SUCCESS-BUFFER: count_dyn2 = 0, buffindex = 0, compindex = -8; j = -1, k = 0; !!READ channels succeeded!!
K_DYN2-ENDOFLOOP: nloop = 72, count_dyn2 = 0, compindex = -8; j = -1, k = 0; 
----------------------------------------------------------------------------
K_DYN2-LOOPTOP: count_dyn2 = 1, arrsize = 64, nloop = 72, buffindex = 1, compindex = -7; j = 0, k = -7; 
K_DYN2-READ-ATTEMPT-BUFFER: count_dyn2 = 1, buffindex = 1, compindex = -7; j = 0, k = -7; Attempting to READ to channels
K_DYN2-READ-SUCCESS-BUFFER: count_dyn2 = 1, buffindex = 1, compindex = -7; j = 0, k = -7; !!READ channels succeeded!!
K_DYN2-ENDOFLOOP: nloop = 72, count_dyn2 = 1, compindex = -7; j = 0, k = -7; 
----------------------------------------------------------------------------
K_DYN2-LOOPTOP: count_dyn2 = 2, arrsize = 64, nloop = 72, buffindex = 2, compindex = -6; j = 0, k = -6; 
K_DYN2-READ-ATTEMPT-BUFFER: count_dyn2 = 2, buffindex = 2, compindex = -6; j = 0, k = -6; Attempting to READ to channels
K_DYN2-READ-SUCCESS-BUFFER: count_dyn2 = 2, buffindex = 2, compindex = -6; j = 0, k = -6; !!READ channels succeeded!!
K_DYN2-ENDOFLOOP: nloop = 72, count_dyn2 = 2, compindex = -6; j = 0, k = -6; 
----------------------------------------------------------------------------
K_DYN2-LOOPTOP: count_dyn2 = 3, arrsize = 64, nloop = 72, buffindex = 3, compindex = -5; j = 0, k = -5; 
K_DYN2-READ-ATTEMPT-BUFFER: count_dyn2 = 3, buffindex = 3, compindex = -5; j = 0, k = -5; Attempting to READ to channels
K_DYN2-READ-SUCCESS-BUFFER: count_dyn2 = 3, buffindex = 3, compindex = -5; j = 0, k = -5; !!READ channels succeeded!!
K_DYN2-ENDOFLOOP: nloop = 72, count_dyn2 = 3, compindex = -5; j = 0, k = -5; 
----------------------------------------------------------------------------
K_DYN2-LOOPTOP: count_dyn2 = 4, arrsize = 64, nloop = 72, buffindex = 4, compindex = -4; j = 0, k = -4; 
K_DYN2-READ-ATTEMPT-BUFFER: count_dyn2 = 4, buffindex = 4, compindex = -4; j = 0, k = -4; Attempting to READ to channels
K_DYN2-READ-SUCCESS-BUFFER: count_dyn2 = 4, buffindex = 4, compindex = -4; j = 0, k = -4; !!READ channels succeeded!!
K_DYN2-ENDOFLOOP: nloop = 72, count_dyn2 = 4, compindex = -4; j = 0, k = -4; 
----------------------------------------------------------------------------
K_DYN2-LOOPTOP: count_dyn2 = 5, arrsize = 64, nloop = 72, buffindex = 5, compindex = -3; j = 0, k = -3; 
K_DYN2-READ-ATTEMPT-BUFFER: count_dyn2 = 5, buffindex = 5, compindex = -3; j = 0, k = -3; Attempting to READ to channels
K_DYN2-READ-SUCCESS-BUFFER: count_dyn2 = 5, buffindex = 5, compindex = -3; j = 0, k = -3; !!READ channels succeeded!!
K_DYN2-ENDOFLOOP: nloop = 72, count_dyn2 = 5, compindex 