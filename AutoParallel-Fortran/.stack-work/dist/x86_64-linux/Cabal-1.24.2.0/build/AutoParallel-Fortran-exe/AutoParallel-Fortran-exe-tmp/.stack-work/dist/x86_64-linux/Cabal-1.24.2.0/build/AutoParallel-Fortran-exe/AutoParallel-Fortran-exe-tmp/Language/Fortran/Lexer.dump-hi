
==================== FINAL INTERFACE ====================
2018-12-03 15:54:56.952281 UTC

interface main@main:Language.Fortran.Lexer 8002
  interface hash: 19dbcbfb0df9820bb70a6c85f8202dc5
  ABI hash: f613354a984aa6dac547f2bc54a4bd0b
  export-list hash: 7be79c9d2bbbd80e7a9388d2acaffaa9
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: e12445faa792eacdff0ba8d2e5f54d95
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.Fortran.Lexer.alexScan
  Language.Fortran.Lexer.alexScanTokens
  Language.Fortran.Lexer.lexer
  Language.Fortran.Lexer.lexer'
  Language.Fortran.Lexer.AlexReturn{Language.Fortran.Lexer.AlexEOF Language.Fortran.Lexer.AlexError Language.Fortran.Lexer.AlexSkip Language.Fortran.Lexer.AlexToken}
  Language.Fortran.Lexer.Token{Language.Fortran.Lexer.Arrow Language.Fortran.Lexer.Bang Language.Fortran.Lexer.BinConst Language.Fortran.Lexer.Colon Language.Fortran.Lexer.ColonColon Language.Fortran.Lexer.Comma Language.Fortran.Lexer.ContLine Language.Fortran.Lexer.ContLineAlt Language.Fortran.Lexer.ContLineNoNewLine Language.Fortran.Lexer.ContLineWithComment Language.Fortran.Lexer.DataEditDest Language.Fortran.Lexer.Dollar Language.Fortran.Lexer.FalseConst Language.Fortran.Lexer.Hash Language.Fortran.Lexer.HexConst Language.Fortran.Lexer.ID Language.Fortran.Lexer.Key Language.Fortran.Lexer.LArrCon Language.Fortran.Lexer.LBrace Language.Fortran.Lexer.LParen Language.Fortran.Lexer.LitConst Language.Fortran.Lexer.MArrow Language.Fortran.Lexer.NewLine Language.Fortran.Lexer.Num Language.Fortran.Lexer.OctConst Language.Fortran.Lexer.OpAND Language.Fortran.Lexer.OpAdd Language.Fortran.Lexer.OpConcat Language.Fortran.Lexer.OpDiv Language.Fortran.Lexer.OpEQ Language.Fortran.Lexer.OpEQV Language.Fortran.Lexer.OpEquals Language.Fortran.Lexer.OpGE Language.Fortran.Lexer.OpGT Language.Fortran.Lexer.OpLE Language.Fortran.Lexer.OpLG Language.Fortran.Lexer.OpLT Language.Fortran.Lexer.OpMul Language.Fortran.Lexer.OpNE Language.Fortran.Lexer.OpNEQV Language.Fortran.Lexer.OpNOT Language.Fortran.Lexer.OpOR Language.Fortran.Lexer.OpPower Language.Fortran.Lexer.OpSub Language.Fortran.Lexer.OpXOR Language.Fortran.Lexer.Percent Language.Fortran.Lexer.Period Language.Fortran.Lexer.RArrCon Language.Fortran.Lexer.RBrace Language.Fortran.Lexer.RParen Language.Fortran.Lexer.RealConst Language.Fortran.Lexer.SemiColon Language.Fortran.Lexer.SingleQuote Language.Fortran.Lexer.StopParamStart Language.Fortran.Lexer.StrConst Language.Fortran.Lexer.Text Language.Fortran.Lexer.TokEOF Language.Fortran.Lexer.TrueConst}
module dependencies: Language.Fortran
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      ghc-prim-0.5.0.0
                      haskell-src-1.0.2.0@haskell-src-1.0.2.0-3zoaErItXGVA1GHC7t3Glx
                      integer-gmp-1.0.0.1 syb-0.6@syb-0.6-IcoSwlPi2Nx4zSqMmorFPS
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         syb-0.6@syb-0.6-IcoSwlPi2Nx4zSqMmorFPS:Data.Generics.Instances
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:GHC.Exts
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  array-0.5.1.1@array-0.5.1.1:Data.Array 01310623526f8acc73d1bb69e9d9530a
import  -/  array-0.5.1.1@array-0.5.1.1:Data.Array.Base a1a813de21dd195f39f7a053a2142a3f
import  -/  base-4.9.1.0:Data.Bits d707ac81dd0124c7a7fb3234df2c8548
import  -/  base-4.9.1.0:Data.Char 01433d23661edb6e5ef1536ef1e6774c
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Word 77f42e01d0fb6b071f1ea2176d87fa6c
import  -/  base-4.9.1.0:Debug.Trace a9edf3aec504f4423d8ba829ab373a25
import  -/  base-4.9.1.0:GHC.Arr dbae05e7a9c0aba55cc706ecf0406507
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.Exts 26da1d42716da321d2d8df514b70012a
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:GHC.Unicode a175ecf20bf1272d9ae31337e7da43ab
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  haskell-src-1.0.2.0@haskell-src-1.0.2.0-3zoaErItXGVA1GHC7t3Glx:Language.Haskell.ParseMonad bdbb0cac69d886388e444d3bdf3e70a0
import  -/  Language.Fortran c957d8f93581b3ce2cc521df25110d11
  exports: cb4e2f808f933bd0493dcd95204741d0
addDependentFile "/usr/lib/ghc/include/ghcversion.h"
addDependentFile "/usr/include/stdc-predef.h"
addDependentFile "language-fortran/src/Language/Fortran/Lexer.x"
addDependentFile "/home/james/.stack/programs/x86_64-linux/ghc-8.0.2/lib/ghc-8.0.2/include/ghcconfig.h"
addDependentFile "/home/james/.stack/programs/x86_64-linux/ghc-8.0.2/lib/ghc-8.0.2/include/ghcplatform.h"
addDependentFile "/home/james/.stack/programs/x86_64-linux/ghc-8.0.2/lib/ghc-8.0.2/include/ghcautoconf.h"
addDependentFile "/home/james/.stack/programs/x86_64-linux/ghc-8.0.2/lib/ghc-8.0.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.24.2.0/build/autogen/cabal_macros.h"
2636ca8b24e242956e714d390f4a13ec
  $fEqToken :: GHC.Classes.Eq Language.Fortran.Lexer.Token
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Language.Fortran.Lexer.Token
                  Language.Fortran.Lexer.$fEqToken_$c==
                  Language.Fortran.Lexer.$fEqToken_$c/= -}
2636ca8b24e242956e714d390f4a13ec
  $fEqToken_$c/= ::
    Language.Fortran.Lexer.Token
    -> Language.Fortran.Lexer.Token -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Language.Fortran.Lexer.Token)
                   (b :: Language.Fortran.Lexer.Token) ->
                 case Language.Fortran.Lexer.$fEqToken_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
2636ca8b24e242956e714d390f4a13ec
  $fEqToken_$c== ::
    Language.Fortran.Lexer.Token
    -> Language.Fortran.Lexer.Token -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Language.Fortran.Lexer.Token)
                   (ds1 :: Language.Fortran.Lexer.Token) ->
                 case ds of wild {
                   DEFAULT
                   -> GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==#
                           (GHC.Prim.dataToTag# @ Language.Fortran.Lexer.Token wild)
                           (GHC.Prim.dataToTag# @ Language.Fortran.Lexer.Token ds1))
                   Language.Fortran.Lexer.Key a1
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag#
                                  @ Language.Fortran.Lexer.Token
                                  wild1 of wild2 {
                             DEFAULT -> GHC.Types.False 0# -> GHC.Types.True }
                        Language.Fortran.Lexer.Key b1 -> GHC.Base.eqString a1 b1 }
                   Language.Fortran.Lexer.LitConst a1 a2
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag#
                                  @ Language.Fortran.Lexer.Token
                                  wild1 of wild2 {
                             DEFAULT -> GHC.Types.False 1# -> GHC.Types.True }
                        Language.Fortran.Lexer.LitConst b1 b2
                        -> case a1 of wild2 { GHC.Types.C# x ->
                           case b1 of wild3 { GHC.Types.C# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.eqChar# x y) of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> GHC.Base.eqString a2 b2 } } } }
                   Language.Fortran.Lexer.BinConst a1
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag#
                                  @ Language.Fortran.Lexer.Token
                                  wild1 of wild2 {
                             DEFAULT -> GHC.Types.False 21# -> GHC.Types.True }
                        Language.Fortran.Lexer.BinConst b1 -> GHC.Base.eqString a1 b1 }
                   Language.Fortran.Lexer.OctConst a1
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag#
                                  @ Language.Fortran.Lexer.Token
                                  wild1 of wild2 {
                             DEFAULT -> GHC.Types.False 22# -> GHC.Types.True }
                        Language.Fortran.Lexer.OctConst b1 -> GHC.Base.eqString a1 b1 }
                   Language.Fortran.Lexer.HexConst a1
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag#
                                  @ Language.Fortran.Lexer.Token
                                  wild1 of wild2 {
                             DEFAULT -> GHC.Types.False 23# -> GHC.Types.True }
                        Language.Fortran.Lexer.HexConst b1 -> GHC.Base.eqString a1 b1 }
                   Language.Fortran.Lexer.ID a1
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag#
                                  @ Language.Fortran.Lexer.Token
                                  wild1 of wild2 {
                             DEFAULT -> GHC.Types.False 24# -> GHC.Types.True }
                        Language.Fortran.Lexer.ID b1 -> GHC.Base.eqString a1 b1 }
                   Language.Fortran.Lexer.Num a1
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag#
                                  @ Language.Fortran.Lexer.Token
                                  wild1 of wild2 {
                             DEFAULT -> GHC.Types.False 25# -> GHC.Types.True }
                        Language.Fortran.Lexer.Num b1 -> GHC.Base.eqString a1 b1 }
                   Language.Fortran.Lexer.RealConst a1
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag#
                                  @ Language.Fortran.Lexer.Token
                                  wild1 of wild2 {
                             DEFAULT -> GHC.Types.False 34# -> GHC.Types.True }
                        Language.Fortran.Lexer.RealConst b1 -> GHC.Base.eqString a1 b1 }
                   Language.Fortran.Lexer.StrConst a1
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag#
                                  @ Language.Fortran.Lexer.Token
                                  wild1 of wild2 {
                             DEFAULT -> GHC.Types.False 37# -> GHC.Types.True }
                        Language.Fortran.Lexer.StrConst b1 -> GHC.Base.eqString a1 b1 }
                   Language.Fortran.Lexer.DataEditDest a1
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag#
                                  @ Language.Fortran.Lexer.Token
                                  wild1 of wild2 {
                             DEFAULT -> GHC.Types.False 42# -> GHC.Types.True }
                        Language.Fortran.Lexer.DataEditDest b1 -> GHC.Base.eqString a1 b1 }
                   Language.Fortran.Lexer.Text a1
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag#
                                  @ Language.Fortran.Lexer.Token
                                  wild1 of wild2 {
                             DEFAULT -> GHC.Types.False 53# -> GHC.Types.True }
                        Language.Fortran.Lexer.Text b1 -> GHC.Base.eqString a1 b1 } }) -}
2636ca8b24e242956e714d390f4a13ec
  $fShowToken :: GHC.Show.Show Language.Fortran.Lexer.Token
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Language.Fortran.Lexer.Token
                  Language.Fortran.Lexer.$fShowToken_$cshowsPrec
                  Language.Fortran.Lexer.$fShowToken_$cshow
                  Language.Fortran.Lexer.$fShowToken_$cshowList -}
2636ca8b24e242956e714d390f4a13ec
  $fShowToken1 :: Language.Fortran.Lexer.Token -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Language.Fortran.Lexer.$fShowToken_$cshowsPrec
                   Language.Fortran.Lexer.$fShowToken2) -}
009deb9a3b24e0af094efd8e8bdc569f
  $fShowToken2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
2636ca8b24e242956e714d390f4a13ec
  $fShowToken_$cshow ::
    Language.Fortran.Lexer.Token -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
2636ca8b24e242956e714d390f4a13ec
  $fShowToken_$cshowList ::
    [Language.Fortran.Lexer.Token] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Language.Fortran.Lexer.Token
                   Language.Fortran.Lexer.$fShowToken1) -}
2636ca8b24e242956e714d390f4a13ec
  $fShowToken_$cshowsPrec ::
    GHC.Types.Int -> Language.Fortran.Lexer.Token -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
922332ae35f5353710de7f9075f4bedd
  $tc'AlexA# :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3678224877439771925##
                   3343844650467265105##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'AlexA#1) -}
1746a47095849dd4fd800d0d9748e541
  $tc'AlexA#1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexA#"#) -}
5e93fa7d026ebe3c7ee5bfb1a898aaad
  $tc'AlexAcc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17591958022747695482##
                   11015621196418751086##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'AlexAcc1) -}
c759f72d988fe41a9c0a600545a3850e
  $tc'AlexAcc1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexAcc"#) -}
608ab81ba6617ff8f3e5f9f57c34b8f4
  $tc'AlexAccNone :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10353143299779004275##
                   12298490566171022427##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'AlexAccNone1) -}
fa02a8f0007e903f4583445152405e4e
  $tc'AlexAccNone1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexAccNone"#) -}
d87fa1f531cca8f300cf067320bb06cd
  $tc'AlexAccPred :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8046181104690352600##
                   6438736171968598774##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'AlexAccPred1) -}
98a9148cc6cafa8befec3a87e2590751
  $tc'AlexAccPred1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexAccPred"#) -}
e1c6ff448446ad8a30fa88baf6c521a5
  $tc'AlexAccSkip :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7233381461268425493##
                   9078057836221064455##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'AlexAccSkip1) -}
02d6b94cc95ed34534973496e4ebff3f
  $tc'AlexAccSkip1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexAccSkip"#) -}
e1d4040632895a1b0edd84c7d93d75fa
  $tc'AlexAccSkipPred :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8901804610586729102##
                   11950726662067173063##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'AlexAccSkipPred1) -}
eaa11b93f16930b83d16fee35f6c4e8f
  $tc'AlexAccSkipPred1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexAccSkipPred"#) -}
b70a021500e4a95f96957a341940624a
  $tc'AlexEOF :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18229164332433836929##
                   3432051006790019760##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'AlexEOF1) -}
909e31ce1b1fca1ffcb0e7ae1ba75433
  $tc'AlexEOF1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexEOF"#) -}
f07dd1066c9ca4e3e74ac586ad6ed37e
  $tc'AlexError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14275917530133006575##
                   6382220045877792988##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'AlexError1) -}
cd551cb12fb176c1f9473385340005e0
  $tc'AlexError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexError"#) -}
c0e4a6a648af617d8dba7fcaa5605d1d
  $tc'AlexLastAcc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   609351739579564696##
                   13779531344135699024##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'AlexLastAcc1) -}
ae701d11d7a1e27c03271ffa1b41b330
  $tc'AlexLastAcc1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexLastAcc"#) -}
266bec6cc8d2ce7151380c4de40f1ffe
  $tc'AlexLastSkip :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12982422826781998735##
                   3148573650676721204##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'AlexLastSkip1) -}
b6e9d206d44c0c6547b26070c9ab0519
  $tc'AlexLastSkip1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexLastSkip"#) -}
53517af6940ff74d73d9d934d0ba3288
  $tc'AlexNone :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6699428173864228589##
                   1776150787500661932##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'AlexNone1) -}
21bc1e16d8237eaaba547d07e240beab
  $tc'AlexNone1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexNone"#) -}
afac5b8aa4c76645e58f028fdc23de8a
  $tc'AlexSkip :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   489620404980459608##
                   5790175811297570484##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'AlexSkip1) -}
f91cc2d3dee16a9dcd54e8c1a0bfa7cf
  $tc'AlexSkip1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexSkip"#) -}
02f58f2acdf5b0ef9a4327908070dd20
  $tc'AlexToken :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7828617921505851781##
                   17010094623054088314##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'AlexToken1) -}
edc321572b090c0da5f7edf570f2af82
  $tc'AlexToken1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexToken"#) -}
fbd41f94e6b3ac68b63f7252356065f6
  $tc'Arrow :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17415654116810005217##
                   4289559250902662958##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'Arrow1) -}
5da7a31bc4885388bc6db854ca881cbc
  $tc'Arrow1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Arrow"#) -}
7dfe1340a99f05cfe14ba5daf5a1172d
  $tc'Bang :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10074585050712552082##
                   5614066867078500776##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'Bang1) -}
de7aaab49861f360a76f8bbb690816d9
  $tc'Bang1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Bang"#) -}
4f22143a6cf4cdb79a036c4486d7d376
  $tc'BinConst :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13275768570432697663##
                   10907149838586172245##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'BinConst1) -}
9128fdf34e9c1ac2dd68ca5392b8268b
  $tc'BinConst1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'BinConst"#) -}
1cdb1066525e20b533da5c07768d73a5
  $tc'Colon :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17638306428587280608##
                   6416614680793222088##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'Colon1) -}
89696819f592f19901d0edbe78086b14
  $tc'Colon1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Colon"#) -}
a120353c3cb355794e9632e3363df6ac
  $tc'ColonColon :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9605615553030332514##
                   3503080904486980362##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'ColonColon1) -}
b518e315075ceadf18ace3e0897c725d
  $tc'ColonColon1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ColonColon"#) -}
d89cab5414a28f7c1540ff2b3f84948b
  $tc'Comma :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7049755450634941510##
                   13251710577388733669##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'Comma1) -}
98f48eaeb532556ad0305097efd7642f
  $tc'Comma1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Comma"#) -}
6e3648e041ddf1a8b31be7f8f8a9902a
  $tc'ContLine :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6373712871029939327##
                   16562865155175224750##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'ContLine1) -}
2197a6350b93a72499c50afc0c4f9be5
  $tc'ContLine1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ContLine"#) -}
3b7170287dcc1c3b4af98fe4cf7c6121
  $tc'ContLineAlt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17488898151725070645##
                   1419881772715619144##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'ContLineAlt1) -}
ccbe0c22e4402858e9979a9ff24e514f
  $tc'ContLineAlt1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ContLineAlt"#) -}
056e17f70b1c42cc2479d4c5ded78bf1
  $tc'ContLineNoNewLine :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11065496189107435171##
                   16060464668144779226##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'ContLineNoNewLine1) -}
137ed737f4a0586be52d059d344344ea
  $tc'ContLineNoNewLine1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ContLineNoNewLine"#) -}
5352702485f757a549318947c92ca76c
  $tc'ContLineWithComment :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   360177641829418552##
                   466360777291511754##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'ContLineWithComment1) -}
addcdaafdefae6755cf1a959851b0040
  $tc'ContLineWithComment1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ContLineWithComment"#) -}
e71e2555d7924abde973404a1ce9ff01
  $tc'DataEditDest :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15932638483202946208##
                   5774511329641359320##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'DataEditDest1) -}
9cde4af0ef4097f98ca129f5620d7a1e
  $tc'DataEditDest1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'DataEditDest"#) -}
b600621836d9a847019678726412ff58
  $tc'Dollar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10573332840274718438##
                   11213615939918313696##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'Dollar1) -}
18109ec8954722a8f5f353d72533c728
  $tc'Dollar1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Dollar"#) -}
53c4b082b98595bc952ee81e500ba71c
  $tc'FalseConst :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1096607066742959629##
                   4591063027621809291##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'FalseConst1) -}
f58fe5b0c8acaed61fd76205b6d369aa
  $tc'FalseConst1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FalseConst"#) -}
b2b581a892023fc09cb2ae341a1e5099
  $tc'Hash :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3245427997780186043##
                   11308109143374269291##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'Hash1) -}
07d687c8374157e22a06ccf4896285d0
  $tc'Hash1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Hash"#) -}
6d98ba2af8db179cfb2ff8ae889995b0
  $tc'HexConst :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1413481228463290952##
                   11616558115435582086##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'HexConst1) -}
58825c3910008ea75395e877588cc0f0
  $tc'HexConst1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'HexConst"#) -}
ad8a8106814b4dcdc3d07e37b27e44ba
  $tc'ID :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   65178289842916388##
                   12519239183865859651##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'ID1) -}
aba5788133a7ce7628ee501a1f951f2a
  $tc'ID1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ID"#) -}
896d4ee3637b5fa001e7ffdf8d69b9f8
  $tc'Key :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11141015826607564640##
                   12768414854802638176##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'Key1) -}
ec00d1a2363464920d97bf2db4404f24
  $tc'Key1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Key"#) -}
a101adbec5f609fc0ecb73e30201b798
  $tc'LArrCon :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6572822649869810829##
                   3406659736141150990##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'LArrCon1) -}
af618d540ddd47db86cecffe9d2182b2
  $tc'LArrCon1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LArrCon"#) -}
2b0bdcfccead1725849d21f474ca3bc6
  $tc'LBrace :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17123852935899221964##
                   13283389416082642323##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'LBrace1) -}
ca6d083fd615904252c167331426d552
  $tc'LBrace1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LBrace"#) -}
341562f610b2a6c0e7e919772c67954a
  $tc'LParen :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15412450586295011598##
                   12747924829980549389##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'LParen1) -}
fccc1dcdf38b4e07e217e1fa2f6afce3
  $tc'LParen1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LParen"#) -}
9f36b0e4493f8de57795b208a4baf7e3
  $tc'LitConst :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5790594251408839427##
                   11939432840216300452##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'LitConst1) -}
1ecad696be6753efe3d184adeec95e3a
  $tc'LitConst1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LitConst"#) -}
6e4e5e934043f01f74ff685d8ef6dc1d
  $tc'MArrow :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7194618493718071829##
                   14329783069079248965##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'MArrow1) -}
3d01d871c123b67937642713eaa37154
  $tc'MArrow1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MArrow"#) -}
bc930aabf0212314695935125bd315e2
  $tc'NewLine :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6546058753643903079##
                   16536826711497776652##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'NewLine1) -}
61a81198d0db94778befee25260ab5a7
  $tc'NewLine1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NewLine"#) -}
6bbdc55dafd6393492cef485334ca80a
  $tc'Num :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5496813032085853692##
                   5900358535165705960##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'Num1) -}
19a37394b3a0388ffc74bc2cba51510a
  $tc'Num1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Num"#) -}
f5eb047b6f647cedaa48f0e19aa03309
  $tc'OctConst :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17695483663057279679##
                   17935623124222260044##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OctConst1) -}
a305885f9358de968e30c261c79196fa
  $tc'OctConst1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OctConst"#) -}
43b0c25f84d28cbf7b08fc13e42a8653
  $tc'OpAND :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10737894181324963088##
                   16073613198534303946##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpAND1) -}
a087985b150b95f2a60e8870e03f3c70
  $tc'OpAND1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpAND"#) -}
ce8aa33a43adfee2673df336e13022a6
  $tc'OpAdd :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2759401788319963291##
                   13695191126437977257##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpAdd1) -}
a3a2e8c480824a9abd4b6139b2c81543
  $tc'OpAdd1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpAdd"#) -}
af7be2ff0fffb36c75ae210597fa1d60
  $tc'OpConcat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18309877410887745648##
                   14997094482441702730##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpConcat1) -}
866ac656c6c764cdfffd717f1e620097
  $tc'OpConcat1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpConcat"#) -}
0b20ebda3a64e5b339e886fb51f62885
  $tc'OpDiv :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13994763100137014636##
                   7283088675323217457##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpDiv1) -}
a094fb7fafebf4eedb3889dda7dea901
  $tc'OpDiv1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpDiv"#) -}
34069bbc9d46523f6483d0b4d3cae05a
  $tc'OpEQ :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7518937063836756931##
                   2685688527704616381##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpEQ1) -}
572dfe32b43ef6041375e3c481adb89b
  $tc'OpEQ1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpEQ"#) -}
f63e36e7387bd7068cb659bbbef7e57f
  $tc'OpEQV :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14809368137240462326##
                   419640301739721858##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpEQV1) -}
028aab2433416471c48ead7bd32e3d93
  $tc'OpEQV1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpEQV"#) -}
9377c35bd61dafa3d78713c48f4ead60
  $tc'OpEquals :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   564347780553577206##
                   10066147756553310559##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpEquals1) -}
07ee8d2b261de9afb57f4f68c55db818
  $tc'OpEquals1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpEquals"#) -}
b4a744517ba91187b379b417c1b52e39
  $tc'OpGE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2318062687818075574##
                   7167826656399317922##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpGE1) -}
c106a25f95276684c737dee37579becc
  $tc'OpGE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpGE"#) -}
3032f29cddb66e72e7ab744af2f760bd
  $tc'OpGT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1867856702054279261##
                   16614907469284514838##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpGT1) -}
750ee696c45eed10f30fae80f03ea45a
  $tc'OpGT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpGT"#) -}
b0b3dc5d16f852d57db82e8f15fd9d0c
  $tc'OpLE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7883367260132517102##
                   15286500943150943556##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpLE1) -}
e2cb8da411e1f0c5b375d57ad456623d
  $tc'OpLE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpLE"#) -}
00b42bccb40e3664ee8a3b2bf6aecb65
  $tc'OpLG :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1347033785917126046##
                   15527843607350226894##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpLG1) -}
e800b4a98f8b5ec0459ce092594e6c63
  $tc'OpLG1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpLG"#) -}
7ce0dccfe64fdb9e597720dd57e46eb3
  $tc'OpLT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7336687128175939827##
                   10402221957469878540##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpLT1) -}
ef0e7f8a5e6c55caa964c2014da38b33
  $tc'OpLT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpLT"#) -}
8e0ad91bcc6bb13ec790342a43c00a5d
  $tc'OpMul :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6332395707164276964##
                   15713974977624636702##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpMul1) -}
e29f1ca3cf1bee9aa7826737503eba8e
  $tc'OpMul1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpMul"#) -}
9c68b30dcf51f4af6820725bcc3b5c9f
  $tc'OpNE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16672216318670900917##
                   11459985105640423677##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpNE1) -}
508a156ee48dc6a292d6e25364637426
  $tc'OpNE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpNE"#) -}
339633f8d0e7a07cab114894b43b6bb9
  $tc'OpNEQV :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10543955362979820531##
                   17144567302093304914##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpNEQV1) -}
35df06d37950ba11c5a18b05f9f978a1
  $tc'OpNEQV1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpNEQV"#) -}
56ebbae11b8b5eb140b5623e0650bd3f
  $tc'OpNOT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7876419876491312485##
                   17040782552027510410##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpNOT1) -}
96f88b9fe92e49a1fc36e5891645eaa5
  $tc'OpNOT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpNOT"#) -}
aeaa907b9ea4bac53f60fd63efed4516
  $tc'OpOR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14130763878354512752##
                   10220783437812053919##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpOR1) -}
897981c9c31657c4e38f473dbfc124cb
  $tc'OpOR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpOR"#) -}
5cf8628a81aabc94def18d759dec65e2
  $tc'OpPower :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15257791448479276154##
                   5762510510743817775##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpPower1) -}
81f62fec873139aaecf022fb1160f06f
  $tc'OpPower1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpPower"#) -}
f808eb668c262d72ff5328a169b7a970
  $tc'OpSub :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6396774639670987099##
                   13857672611373543280##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpSub1) -}
92caa60516ed19fca2d38af5238c4e37
  $tc'OpSub1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpSub"#) -}
d131422ae8ed17667a966a27284f3918
  $tc'OpXOR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12730628730663437334##
                   7845158950331754630##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'OpXOR1) -}
67dcd23dcc8e44314246d065b1399a83
  $tc'OpXOR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OpXOR"#) -}
c7274f7879ac0461ae9acaf980eb46a8
  $tc'Percent :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11826850261725816834##
                   3596250510641230578##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'Percent1) -}
5820314e5c1952da4c63d46afb1017ad
  $tc'Percent1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Percent"#) -}
ee9e9058ee276daeb00a7e2092161f3c
  $tc'Period :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14388397378294809797##
                   10617312654561138991##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'Period1) -}
667aeac1dd4edb087838ac8c182c600c
  $tc'Period1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Period"#) -}
81423562beaba55ff5d215f7638bd578
  $tc'RArrCon :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8588394099041016345##
                   3430594082152832286##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'RArrCon1) -}
30df28c970054c5a2b8176a92a8e33d6
  $tc'RArrCon1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'RArrCon"#) -}
4804c3ec910c2adbe01c85b33c580493
  $tc'RBrace :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8187536592790689193##
                   17728913876561083508##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'RBrace1) -}
5808bc4d03166d7f4fe43bc8e43a6575
  $tc'RBrace1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'RBrace"#) -}
4247ba83c6ad90bcf0e8b41672e6ff71
  $tc'RParen :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12361154394199772055##
                   4878118694545426425##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'RParen1) -}
2a5273ece4227326d62a92e2f20518bc
  $tc'RParen1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'RParen"#) -}
6f9ecc5b900bb39d9198db4a5e11683b
  $tc'RealConst :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16171033092735695864##
                   12668880045909602278##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'RealConst1) -}
eab15385143b998f70b6fa11278824d9
  $tc'RealConst1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'RealConst"#) -}
209d0ae30fc326c70d2ba1edb6a39c08
  $tc'SemiColon :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1504527941773940303##
                   9356815962430555466##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'SemiColon1) -}
4a974945425577c7d56fbbca94afd8ae
  $tc'SemiColon1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'SemiColon"#) -}
6c0793bc59c3cd4b724f54c0e3237f77
  $tc'SingleQuote :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10556147309614201571##
                   9675526283528748850##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'SingleQuote1) -}
fffd21d78bfc1685c74b6a22103e3a53
  $tc'SingleQuote1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'SingleQuote"#) -}
2f264915c8eacafa2e0290793e6abb2f
  $tc'StopParamStart :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3142739580502709250##
                   13242147727350607381##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'StopParamStart1) -}
d39a588e91b75952132d1b6cc4c1f58b
  $tc'StopParamStart1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'StopParamStart"#) -}
1b7a7440cdf3f31fa730853f871cf83a
  $tc'StrConst :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13705606878302862060##
                   8776549300662349688##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'StrConst1) -}
f63cecc33b3beb6abd6631f83a4c50c9
  $tc'StrConst1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'StrConst"#) -}
486b93b12c277f347fb42566025f2ae8
  $tc'Text :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10656934501082779438##
                   9851537949411940707##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'Text1) -}
69a6d915be43dff7baec3d053ca74c76
  $tc'Text1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Text"#) -}
88c3042de7b93449ce721e68409b892b
  $tc'TokEOF :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14299614941464959300##
                   13708442096033174413##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'TokEOF1) -}
fd25d90d3f28f4cdcc67055282450eb2
  $tc'TokEOF1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TokEOF"#) -}
5905d8fce145797423779b336fd6f894
  $tc'TrueConst :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16007774237342741549##
                   13468755531673879101##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tc'TrueConst1) -}
666b569a219a13b98336280c4150b4dc
  $tc'TrueConst1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TrueConst"#) -}
8f0b3d11b3aeea8643c23e9ba86ae1c3
  $tcAlexAcc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4104034248741586213##
                   10600986053421465664##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tcAlexAcc1) -}
75f06779679bbe7deb885499d573a7af
  $tcAlexAcc1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "AlexAcc"#) -}
d049210a59d300d0f6a7a07032af0b57
  $tcAlexAddr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5697530489048800586##
                   8053605318498792938##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tcAlexAddr1) -}
bc9cd396f1a53c70030b66fde392211f
  $tcAlexAddr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "AlexAddr"#) -}
b22f5f715d63d55cce59bbba54bc4495
  $tcAlexLastAcc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13457880236370567219##
                   16764014095634984335##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tcAlexLastAcc1) -}
a83bd61ab684bcf05de3c0de04dc9f25
  $tcAlexLastAcc1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "AlexLastAcc"#) -}
a36757bfc4d5d8f8836d39cb7ac8590e
  $tcAlexReturn :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16668511571735303344##
                   7526974601939496776##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tcAlexReturn1) -}
1f3f0285fe9aae27f52f1c0b954dedbd
  $tcAlexReturn1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "AlexReturn"#) -}
5f37122241847e1219eca04752029490
  $tcToken :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5321157670810753200##
                   1271835806104855357##
                   Language.Fortran.Lexer.$trModule
                   Language.Fortran.Lexer.$tcToken1) -}
b612ece037b06ab5ad35f281266f77ac
  $tcToken1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Token"#) -}
b88b6387bd6cf906b14191a36c0c2bfa
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.Fortran.Lexer.$trModule2
                   Language.Fortran.Lexer.$trModule1) -}
a7ddcc0208c1d3e78fe11d1e0a895248
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Language.Fortran.Lexer"#) -}
c3aa5e37d38e29dd6306b2264cc70a72
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
d2d4251408b6234e97a6db220a1f09bd
  $walexGetByte ::
    GHC.Types.Char
    -> [Language.Fortran.Lexer.Byte]
    -> GHC.Base.String
    -> GHC.Base.Maybe
         (Language.Fortran.Lexer.Byte, Language.Fortran.Lexer.AlexInput)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><S,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Char)
                   (ww1 :: [Language.Fortran.Lexer.Byte])
                   (ww2 :: GHC.Base.String) ->
                 case ww1 of wild {
                   []
                   -> case ww2 of wild1 {
                        []
                        -> GHC.Base.Nothing
                             @ (Language.Fortran.Lexer.Byte, Language.Fortran.Lexer.AlexInput)
                        : c s
                        -> case c of wild2 { GHC.Types.C# c# ->
                           let {
                             x :: GHC.Prim.Int# = GHC.Prim.ord# c#
                           } in
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=# x 127#) of wild3 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<=# x 2047#) of wild4 {
                                  GHC.Types.False
                                  -> case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<=# x 65535#) of wild5 {
                                       GHC.Types.False
                                       -> GHC.Base.Just
                                            @ (GHC.Word.Word8,
                                               (GHC.Types.Char, [GHC.Word.Word8], [GHC.Types.Char]))
                                            (GHC.Word.W8#
                                               (GHC.Prim.narrow8Word#
                                                  (GHC.Prim.int2Word#
                                                     (GHC.Prim.+#
                                                        240#
                                                        (GHC.Prim.uncheckedIShiftRA# x 18#)))),
                                             (wild2,
                                              GHC.Types.:
                                                @ GHC.Word.Word8
                                                (GHC.Word.W8#
                                                   (GHC.Prim.narrow8Word#
                                                      (GHC.Prim.int2Word#
                                                         (GHC.Prim.+#
                                                            128#
                                                            (GHC.Prim.andI#
                                                               (GHC.Prim.uncheckedIShiftRA# x 12#)
                                                               63#)))))
                                                (GHC.Types.:
                                                   @ GHC.Word.Word8
                                                   (GHC.Word.W8#
                                                      (GHC.Prim.narrow8Word#
                                                         (GHC.Prim.int2Word#
                                                            (GHC.Prim.+#
                                                               128#
                                                               (GHC.Prim.andI#
                                                                  (GHC.Prim.uncheckedIShiftRA# x 6#)
                                                                  63#)))))
                                                   (GHC.Types.:
                                                      @ GHC.Word.Word8
                                                      (GHC.Word.W8#
                                                         (GHC.Prim.narrow8Word#
                                                            (GHC.Prim.int2Word#
                                                               (GHC.Prim.+#
                                                                  128#
                                                                  (GHC.Prim.andI# x 63#)))))
                                                      (GHC.Types.[] @ GHC.Word.Word8))),
                                              s))
                                       GHC.Types.True
                                       -> GHC.Base.Just
                                            @ (GHC.Word.Word8,
                                               (GHC.Types.Char, [GHC.Word.Word8], [GHC.Types.Char]))
                                            (GHC.Word.W8#
                                               (GHC.Prim.narrow8Word#
                                                  (GHC.Prim.int2Word#
                                                     (GHC.Prim.+#
                                                        224#
                                                        (GHC.Prim.uncheckedIShiftRA# x 12#)))),
                                             (wild2,
                                              GHC.Types.:
                                                @ GHC.Word.Word8
                                                (GHC.Word.W8#
                                                   (GHC.Prim.narrow8Word#
                                                      (GHC.Prim.int2Word#
                                                         (GHC.Prim.+#
                                                            128#
                                                            (GHC.Prim.andI#
                                                               (GHC.Prim.uncheckedIShiftRA# x 6#)
                                                               63#)))))
                                                (GHC.Types.:
                                                   @ GHC.Word.Word8
                                                   (GHC.Word.W8#
                                                      (GHC.Prim.narrow8Word#
                                                         (GHC.Prim.int2Word#
                                                            (GHC.Prim.+#
                                                               128#
                                                               (GHC.Prim.andI# x 63#)))))
                                                   (GHC.Types.[] @ GHC.Word.Word8)),
                                              s)) }
                                  GHC.Types.True
                                  -> GHC.Base.Just
                                       @ (GHC.Word.Word8,
                                          (GHC.Types.Char, [GHC.Word.Word8], [GHC.Types.Char]))
                                       (GHC.Word.W8#
                                          (GHC.Prim.narrow8Word#
                                             (GHC.Prim.int2Word#
                                                (GHC.Prim.+#
                                                   192#
                                                   (GHC.Prim.uncheckedIShiftRA# x 6#)))),
                                        (wild2,
                                         GHC.Types.:
                                           @ GHC.Word.Word8
                                           (GHC.Word.W8#
                                              (GHC.Prim.narrow8Word#
                                                 (GHC.Prim.int2Word#
                                                    (GHC.Prim.+# 128# (GHC.Prim.andI# x 63#)))))
                                           (GHC.Types.[] @ GHC.Word.Word8),
                                         s)) }
                             GHC.Types.True
                             -> GHC.Base.Just
                                  @ (GHC.Word.Word8,
                                     (GHC.Types.Char, [GHC.Word.Word8], [GHC.Types.Char]))
                                  (GHC.Word.W8# (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# x)),
                                   (wild2, GHC.Types.[] @ GHC.Word.Word8, s)) } } }
                   : b bs
                   -> GHC.Base.Just
                        @ (Language.Fortran.Lexer.Byte,
                           (GHC.Types.Char, [Language.Fortran.Lexer.Byte], GHC.Base.String))
                        (b, (ww, bs, ww2)) }) -}
276a406506c9d8932bf1545078c7f996
  $walexScan ::
    GHC.Types.Char
    -> [Language.Fortran.Lexer.Byte]
    -> GHC.Base.String
    -> GHC.Prim.Int#
    -> Language.Fortran.Lexer.AlexReturn
         (GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- Arity: 4, Strictness: <L,U><S,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Char)
                   (ww1 :: [Language.Fortran.Lexer.Byte])
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Language.Fortran.Lexer.$walex_scan_tkn
                        Language.Fortran.Lexer.alexScan565
                        (ww, ww1, ww2)
                        0#
                        ww
                        ww1
                        ww2
                        ww3
                        Language.Fortran.Lexer.AlexNone of ww4 { (#,#) ww5 ww6 ->
                 case ww5 of wild {
                   Language.Fortran.Lexer.AlexNone
                   -> case Language.Fortran.Lexer.$walexGetByte ww ww1 ww2 of wild1 {
                        GHC.Base.Nothing
                        -> Language.Fortran.Lexer.AlexEOF
                             @ (GHC.Base.String -> Language.Fortran.Lexer.Token)
                        GHC.Base.Just ds
                        -> Language.Fortran.Lexer.$WAlexError
                             @ (GHC.Base.String -> Language.Fortran.Lexer.Token)
                             ww6 }
                   Language.Fortran.Lexer.AlexLastAcc dt input__''' dt1
                   -> Language.Fortran.Lexer.AlexToken
                        @ (GHC.Base.String -> Language.Fortran.Lexer.Token)
                        input__'''
                        dt1
                        (case Language.Fortran.Lexer.alex_actions of wild1 { GHC.Arr.Array l u dt2 ds ->
                         case l of wild2 { GHC.Types.I# m ->
                         case u of wild3 { GHC.Types.I# n ->
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.<=# m dt) of wild4 {
                           GHC.Types.False
                           -> case Language.Fortran.Lexer.alexScan1 wild3 wild2 dt
                              ret_ty (GHC.Base.String -> Language.Fortran.Lexer.Token)
                              of {}
                           GHC.Types.True
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.<=# dt n) of wild5 {
                                GHC.Types.False
                                -> case Language.Fortran.Lexer.alexScan1 wild3 wild2 dt
                                   ret_ty (GHC.Base.String -> Language.Fortran.Lexer.Token)
                                   of {}
                                GHC.Types.True
                                -> case GHC.Prim.indexArray#
                                          @ (GHC.Base.String -> Language.Fortran.Lexer.Token)
                                          ds
                                          (GHC.Prim.-# dt m) of ds4 { Unit# ipv ->
                                   ipv } } } } } })
                   Language.Fortran.Lexer.AlexLastSkip input__'' dt
                   -> Language.Fortran.Lexer.AlexSkip
                        @ (GHC.Base.String -> Language.Fortran.Lexer.Token)
                        input__''
                        dt } }) -}
0663c55d1f6df0a30003c8c348226f26
  $walex_scan_tkn ::
    GHC.Prim.Any
    -> Language.Fortran.Lexer.AlexInput
    -> GHC.Prim.Int#
    -> GHC.Types.Char
    -> [Language.Fortran.Lexer.Byte]
    -> GHC.Base.String
    -> GHC.Prim.Int#
    -> Language.Fortran.Lexer.AlexLastAcc
    -> (# Language.Fortran.Lexer.AlexLastAcc,
          (GHC.Types.Char, [Language.Fortran.Lexer.Byte], GHC.Base.String) #)
  {- Arity: 8, Strictness: <L,U><L,U><L,U><L,U><S,U><L,U><S,U><L,U>,
     Inline: [0] -}
a04f90c6875ed57f44f9881467843ae9
  $wgo ::
    GHC.Types.Char
    -> [Language.Fortran.Lexer.Byte]
    -> GHC.Base.String
    -> [Language.Fortran.Lexer.Token]
  {- Arity: 3, Strictness: <L,U><S,U><L,U>, Inline: [0] -}
23893787f4d33a896bd43ef9f2625d91
  $wunsafeDrop :: GHC.Prim.Int# -> [a1] -> [a1]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,1*U>,
     Inline: [0] -}
e544d60aa623240b744280c79d2a3127
  data AlexAcc user
    = AlexAccNone
    | AlexAcc GHC.Types.Int
    | AlexAccSkip
    | AlexAccPred GHC.Types.Int
                  (Language.Fortran.Lexer.AlexAccPred user)
                  (Language.Fortran.Lexer.AlexAcc user)
    | AlexAccSkipPred (Language.Fortran.Lexer.AlexAccPred user)
                      (Language.Fortran.Lexer.AlexAcc user)
0a8fd63ee86afabc5199bcf854af8001
  type AlexAccPred user =
    user
    -> Language.Fortran.Lexer.AlexInput
    -> GHC.Types.Int
    -> Language.Fortran.Lexer.AlexInput
    -> GHC.Types.Bool
652f7046cc26c7308a70869f3c40288d
  data AlexAddr = AlexA# GHC.Prim.Addr#
878fd7b662c501edcd64fded4a986376
  type AlexInput =
    (GHC.Types.Char, [Language.Fortran.Lexer.Byte], GHC.Base.String)
d7f2cca2c1f4a6d629d5c95a0b8650f7
  data AlexLastAcc
    = AlexNone
    | AlexLastAcc {-# UNPACK #-}GHC.Types.Int
                  !Language.Fortran.Lexer.AlexInput
                  {-# UNPACK #-}GHC.Types.Int
    | AlexLastSkip !Language.Fortran.Lexer.AlexInput
                   {-# UNPACK #-}GHC.Types.Int
2ab53888cad4dd0954b0a1d8c2ffa360
  data AlexReturn a
    = AlexEOF
    | AlexError !Language.Fortran.Lexer.AlexInput
    | AlexSkip !Language.Fortran.Lexer.AlexInput
               {-# UNPACK #-}GHC.Types.Int
    | AlexToken !Language.Fortran.Lexer.AlexInput
                {-# UNPACK #-}GHC.Types.Int
                a
ea92cefc39fcb4aec17628c3d359e2ba
  type Byte = GHC.Word.Word8
2636ca8b24e242956e714d390f4a13ec
  data Token
    = Key GHC.Base.String
    | LitConst GHC.Types.Char GHC.Base.String
    | OpPower
    | OpMul
    | OpDiv
    | OpAdd
    | OpSub
    | OpConcat
    | OpEQ
    | OpNE
    | OpLT
    | OpLE
    | OpGT
    | OpGE
    | OpLG
    | OpNOT
    | OpAND
    | OpOR
    | OpXOR
    | OpEQV
    | OpNEQV
    | BinConst GHC.Base.String
    | OctConst GHC.Base.String
    | HexConst GHC.Base.String
    | ID GHC.Base.String
    | Num GHC.Base.String
    | Comma
    | Bang
    | Percent
    | LParen
    | RParen
    | LArrCon
    | RArrCon
    | OpEquals
    | RealConst GHC.Base.String
    | StopParamStart
    | SingleQuote
    | StrConst GHC.Base.String
    | Period
    | Colon
    | ColonColon
    | SemiColon
    | DataEditDest GHC.Base.String
    | Arrow
    | MArrow
    | TrueConst
    | FalseConst
    | Dollar
    | Hash
    | LBrace
    | RBrace
    | NewLine
    | TokEOF
    | Text GHC.Base.String
    | ContLine
    | ContLineAlt
    | ContLineWithComment
    | ContLineNoNewLine
6437627caec70ada1c208c4b1740908f
  alexScan ::
    Language.Fortran.Lexer.AlexInput
    -> GHC.Types.Int
    -> Language.Fortran.Lexer.AlexReturn
         (GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- Arity: 2, Strictness: <S(LSL),U(U,U,U)><S(S),1*U(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Language.Fortran.Lexer.AlexInput) (w1 :: GHC.Types.Int) ->
                 case w of ww { (,,) ww1 ww2 ww3 ->
                 case w1 of ww4 { GHC.Types.I# ww5 ->
                 Language.Fortran.Lexer.$walexScan ww1 ww2 ww3 ww5 } }) -}
e61dec4f6870b86ce7169afe0a235e01
  alexScan1 ::
    GHC.Types.Int -> GHC.Types.Int -> GHC.Prim.Int# -> GHC.Types.Int
  {- Arity: 3, Strictness: <L,U><L,U><L,U>x -}
802450de0346caf61c3fdf371abd3dab
  alexScan10 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan540
                   Language.Fortran.Lexer.alexScan11) -}
cb4e7a39efad23c944401a90ca5d5442
  alexScan100 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan133
                   Language.Fortran.Lexer.alexScan101) -}
4af18218d4fade0fa14f5a6af9192d79
  alexScan101 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan131
                   Language.Fortran.Lexer.alexScan102) -}
eccff60a6ef4fa50ed1a2fa333d2d6ed
  alexScan102 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan129
                   Language.Fortran.Lexer.alexScan103) -}
912dbc04c6f48232bdc03b4cb9ea8b0b
  alexScan103 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan127
                   Language.Fortran.Lexer.alexScan104) -}
281e9dc9fa527aa69576fd1061c1f365
  alexScan104 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan125
                   Language.Fortran.Lexer.alexScan105) -}
286fe067e9443a33133eed6fe92b680b
  alexScan105 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan123
                   Language.Fortran.Lexer.alexScan106) -}
b2a6fa3dbaf333d56c6a9ec3f3e013ca
  alexScan106 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan121
                   Language.Fortran.Lexer.alexScan107) -}
48bfc0dc65286e85c30311963717642a
  alexScan107 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan119
                   Language.Fortran.Lexer.alexScan108) -}
2c115ffae2440d034ef8b419a8a601d1
  alexScan108 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan117
                   Language.Fortran.Lexer.alexScan109) -}
743df3121e34210baf98361f119245bb
  alexScan109 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan115
                   Language.Fortran.Lexer.alexScan110) -}
007c391f2cd59de32a5ed521cea6d20c
  alexScan11 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan537
                   Language.Fortran.Lexer.alexScan12) -}
5ee4f96069829ec1b68d1dce83797279
  alexScan110 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan111
                   (GHC.Types.[]
                      @ (GHC.Types.Int,
                         GHC.Base.String -> Language.Fortran.Lexer.Token))) -}
c5ac05694f7a872f410a9d4782122fa1
  alexScan111 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.$fShowToken2,
                  Language.Fortran.Lexer.alexScan112)) -}
d74054425da0c53e88351dbec90abc16
  alexScan112 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.alexScan113) -}
536ee04ba12de8b8b88ef221b2a7df65
  alexScan113 :: Language.Fortran.Lexer.Token
  {- Strictness: m1,
     Unfolding: (Language.Fortran.Lexer.Key
                   Language.Fortran.Lexer.alexScan114) -}
e5429d76f78c333758eedf2228eb6951
  alexScan114 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "goto"#) -}
089b6e6aa51df56c5a85386467fdcc87
  alexScan115 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan116,
                  Language.Fortran.Lexer.alexScan112)) -}
01a5e90ebce4e642b1b9217c61cfb0aa
  alexScan116 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1#) -}
8bba3ac1dd06722452351ddb8c5f33f8
  alexScan117 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan118,
                  Language.Fortran.Lexer.Num)) -}
518cfe5ee63164d992fbb47a3c6fef93
  alexScan118 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 2#) -}
9c9396e9d494563ea4dbd664a83aa423
  alexScan119 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan120,
                  Language.Fortran.Lexer.HexConst)) -}
fe8bd0ee75b9ff24e94e4cce61c23813
  alexScan12 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan534
                   Language.Fortran.Lexer.alexScan13) -}
edc49d12560f9881178d66e53b50a968
  alexScan120 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 3#) -}
91f87dd042b0012ddedd49f72a72f61e
  alexScan121 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan122,
                  Language.Fortran.Lexer.OctConst)) -}
2c2f6c41bdec71daa21495016c9ad7e5
  alexScan122 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4#) -}
0c7cff6a0751b158e5d9951dd607527c
  alexScan123 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan124,
                  Language.Fortran.Lexer.BinConst)) -}
dfb7914135d4e0362d19f2b0a8bf1b7b
  alexScan124 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
1c3b98f013fb93ad9d28a3cbd9c29e3a
  alexScan125 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan126,
                  Language.Fortran.Lexer.HexConst)) -}
b10b3272607cd1d9f254d5a60f29abd1
  alexScan126 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 6#) -}
7ff5bcbfa2fbaa846c4547ca02ed34f1
  alexScan127 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan128,
                  Language.Fortran.Lexer.OctConst)) -}
c3c60e6b6448748250041c0469616848
  alexScan128 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 7#) -}
ae59cb158eb14de9f3ed0a42e6569e9d
  alexScan129 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan130,
                  Language.Fortran.Lexer.BinConst)) -}
e4a2947503d4cef02dacc1e7ea1964b0
  alexScan13 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan531
                   Language.Fortran.Lexer.alexScan14) -}
8e5c284c6153651f1cef3f71f6ac99ec
  alexScan130 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 8#) -}
7f3305a6fd7f28111bea10b1c9d17529
  alexScan131 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan132,
                  Language.Fortran.Lexer.Num)) -}
689c5378b53e08bddc7ccbe512d784d0
  alexScan132 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 9#) -}
029304d6b79f91983445646b203c2ea9
  alexScan133 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan134,
                  Language.Fortran.Lexer.Num)) -}
ceda1104ceb9f7c512a909378f8c536d
  alexScan134 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 10#) -}
12211f18b2267d2720b2f77e2b0e4c4d
  alexScan135 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan136,
                  Language.Fortran.Lexer.Num)) -}
647ade04b3a2388da60aff84901a1c4e
  alexScan136 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 11#) -}
ca6c8a2b03f0e34e8d4e3c91a191ef97
  alexScan137 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan138,
                  Language.Fortran.Lexer.Num)) -}
1361a89fd958a39e09ee5815d6e41012
  alexScan138 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 12#) -}
a8fa9421ad60ed3c0676879256d9e0c9
  alexScan139 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan140,
                  Language.Fortran.Lexer.DataEditDest)) -}
fad9bfe04fe946934521574dbe2e25a6
  alexScan14 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan528
                   Language.Fortran.Lexer.alexScan15) -}
11f6e0453212935a42469fefc9c8d14f
  alexScan140 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 13#) -}
afa318e388bcfa9ad918c1074bd25675
  alexScan141 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan142,
                  Language.Fortran.Lexer.DataEditDest)) -}
858a9c5cbfe42a158213b267bfc57f6c
  alexScan142 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 14#) -}
8150c57f1a36d0f06687f72b1345df79
  alexScan143 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan144,
                  Language.Fortran.Lexer.DataEditDest)) -}
7b443d344e782bd9f997f02d8d4109d9
  alexScan144 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 15#) -}
20966db41a3430bec12aba27688abf5c
  alexScan145 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan146,
                  Language.Fortran.Lexer.DataEditDest)) -}
c3e36e75f3c790d8e73f4e582a75ef57
  alexScan146 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 16#) -}
f71737b921b733499872504d79c5f485
  alexScan147 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan148,
                  Language.Fortran.Lexer.DataEditDest)) -}
145a4c8086b7990a9d09b9d2f693aea6
  alexScan148 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 17#) -}
bbc282fbb3714ca3af0b59aaf1f5a488
  alexScan149 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan150,
                  Language.Fortran.Lexer.DataEditDest)) -}
25c74f99356e65621846ebe869dae8f8
  alexScan15 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan525
                   Language.Fortran.Lexer.alexScan16) -}
2b330f4af9bdbf455b3e29eb5bacd8a1
  alexScan150 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 18#) -}
6ec4fa8a9bf93c0faa5117cac225f5e7
  alexScan151 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan152,
                  Language.Fortran.Lexer.DataEditDest)) -}
d6f9d13fce300ed3161c4d5890c86f28
  alexScan152 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 19#) -}
f27f7c009b6e1fab7d9f888a78295f01
  alexScan153 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan342,
                  Language.Fortran.Lexer.alex_action_52)) -}
532b0b5e70cedef5b3b0fe746b687aad
  alexScan154 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan340
                   Language.Fortran.Lexer.alexScan155) -}
94c8d787a1d85b5937254cb06b183dfe
  alexScan155 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan339
                   Language.Fortran.Lexer.alexScan156) -}
3b48c569efd7cc0f706909efcde37be4
  alexScan156 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan338
                   Language.Fortran.Lexer.alexScan157) -}
4258761b058766200bc49772aa83445a
  alexScan157 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan337
                   Language.Fortran.Lexer.alexScan158) -}
b800aaa3c82660d8b918889d1d41f033
  alexScan158 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan336
                   Language.Fortran.Lexer.alexScan159) -}
84330f1dc2312600e6b79df14b86b158
  alexScan159 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan335
                   Language.Fortran.Lexer.alexScan160) -}
6b0b393d60ef39f84d1aeab508a7fd15
  alexScan16 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan522
                   Language.Fortran.Lexer.alexScan17) -}
7d279b57b9de8cba87402a6395021c12
  alexScan160 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan334
                   Language.Fortran.Lexer.alexScan161) -}
69c85ca3b9feeb9236eda5a6f89c1687
  alexScan161 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan333
                   Language.Fortran.Lexer.alexScan162) -}
21a628f6e787c1c893796862f9e0929d
  alexScan162 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan332
                   Language.Fortran.Lexer.alexScan163) -}
43ceb49b401bb409adbc7042813e5214
  alexScan163 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan331
                   Language.Fortran.Lexer.alexScan164) -}
93ec2f72fc158923844526aa761419e7
  alexScan164 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan330
                   Language.Fortran.Lexer.alexScan165) -}
a30db92cf94f5aac84129115cea46678
  alexScan165 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan329
                   Language.Fortran.Lexer.alexScan166) -}
e6c682389109be687f70b716249ea6fb
  alexScan166 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan328
                   Language.Fortran.Lexer.alexScan167) -}
58bbb4e45c1c443172947386297e1aee
  alexScan167 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan327
                   Language.Fortran.Lexer.alexScan168) -}
3c5657d797d8016f097ac9b2a530199d
  alexScan168 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan326
                   Language.Fortran.Lexer.alexScan169) -}
9d43199ddfb963e9aff20a22482d091f
  alexScan169 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan325
                   Language.Fortran.Lexer.alexScan170) -}
7ce86449ddd5db52b7d9af808d72ceef
  alexScan17 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan519
                   Language.Fortran.Lexer.alexScan18) -}
7150722d069286e7cbcbe48ff746b65e
  alexScan170 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan324
                   Language.Fortran.Lexer.alexScan171) -}
67f1819576213bd690bb0e18f339ca67
  alexScan171 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan323
                   Language.Fortran.Lexer.alexScan172) -}
6cfd5df9e5cf84bb499caa6a4179346d
  alexScan172 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan322
                   Language.Fortran.Lexer.alexScan173) -}
4725c27dbf01aefe2e466b9a4c90ea0a
  alexScan173 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan321
                   Language.Fortran.Lexer.alexScan174) -}
850d0b86e1f104944b72af2485d76616
  alexScan174 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan320
                   Language.Fortran.Lexer.alexScan175) -}
9f544d3c800f2639426fc4fab014ced2
  alexScan175 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan319
                   Language.Fortran.Lexer.alexScan176) -}
7103560098b957d9b13886da22d0c4db
  alexScan176 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan318
                   Language.Fortran.Lexer.alexScan177) -}
6459283d238e31c1aec0fcc65a9c93ca
  alexScan177 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan317
                   Language.Fortran.Lexer.alexScan178) -}
7dbb297525c3e3d91139164e9ff10674
  alexScan178 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan316
                   Language.Fortran.Lexer.alexScan179) -}
682b07104f1d92db126e9f964deb5b01
  alexScan179 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan315
                   Language.Fortran.Lexer.alexScan180) -}
02d7eae562a25b69a2e74fe3e11f1eba
  alexScan18 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan516
                   Language.Fortran.Lexer.alexScan19) -}
c525e2513a3f7c4c1e957bc8c99a6ab3
  alexScan180 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan314
                   Language.Fortran.Lexer.alexScan181) -}
e9c34edf4a65f0e1f02b0c7ae2b757b9
  alexScan181 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan313
                   Language.Fortran.Lexer.alexScan182) -}
2164410b60f5a09c813fa3242a907111
  alexScan182 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan312
                   Language.Fortran.Lexer.alexScan183) -}
c6a8e413adae28e68717002d045472e7
  alexScan183 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan311
                   Language.Fortran.Lexer.alexScan184) -}
9cc43def5ae159238878179558869e89
  alexScan184 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan310
                   Language.Fortran.Lexer.alexScan185) -}
fab87bdbc8c682c2196b7e24ccc2ef66
  alexScan185 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan309
                   Language.Fortran.Lexer.alexScan186) -}
1e29a50e135cd3f845ceb940f3a77753
  alexScan186 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan308
                   Language.Fortran.Lexer.alexScan187) -}
29e192cc012a003188b21718d98ce132
  alexScan187 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan307
                   Language.Fortran.Lexer.alexScan188) -}
a808c4e6d95e3da3e98c56c0ea9f0d10
  alexScan188 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan306
                   Language.Fortran.Lexer.alexScan189) -}
ca16d16d746a8814960b43d1d1030039
  alexScan189 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan305
                   Language.Fortran.Lexer.alexScan190) -}
1839e81e17043862cf95acf3112a2715
  alexScan19 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan513
                   Language.Fortran.Lexer.alexScan20) -}
d14ea1482df2b0dd3f8908b8a7d4fa10
  alexScan190 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan114
                   Language.Fortran.Lexer.alexScan191) -}
edb42de5c2989f8efafa42ddc2bff281
  alexScan191 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan304
                   Language.Fortran.Lexer.alexScan192) -}
b910150ecef61860d518e565e44f6028
  alexScan192 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan303
                   Language.Fortran.Lexer.alexScan193) -}
9147af5b718ffad095c0fbf8436b4f86
  alexScan193 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan302
                   Language.Fortran.Lexer.alexScan194) -}
d6c5064510d6d73ff5c55acc6d24a8ae
  alexScan194 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan301
                   Language.Fortran.Lexer.alexScan195) -}
e2b9d2b0c6a1127f626a368bcf090b99
  alexScan195 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan300
                   Language.Fortran.Lexer.alexScan196) -}
144113c567b4e0fe3ddcbab59d84b88b
  alexScan196 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan299
                   Language.Fortran.Lexer.alexScan197) -}
4b46194a205c2a80d0b140e4026c4d64
  alexScan197 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan298
                   Language.Fortran.Lexer.alexScan198) -}
42359cc33b9bb43ce86ea3491646da5a
  alexScan198 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan297
                   Language.Fortran.Lexer.alexScan199) -}
c9c5554892c2d037f1d3e34ef90ad120
  alexScan199 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan296
                   Language.Fortran.Lexer.alexScan200) -}
f5b54784fb5950e4d7c47567311398ce
  alexScan2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Arr.Array
            GHC.Types.Int (GHC.Base.String -> Language.Fortran.Lexer.Token) #)
  {- Arity: 1,
     Unfolding: (\ (s1# :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newArray#
                        @ (GHC.Base.String -> Language.Fortran.Lexer.Token)
                        @ GHC.Prim.RealWorld
                        110#
                        (GHC.Arr.arrEleBottom
                           @ (GHC.Base.String -> Language.Fortran.Lexer.Token))
                        s1# of ds1 { (#,#) ipv ipv1 ->
                 letrec {
                   go :: [(GHC.Types.Int,
                           GHC.Base.String -> Language.Fortran.Lexer.Token)]
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                               GHC.Arr.Array
                                 GHC.Types.Int (GHC.Base.String -> Language.Fortran.Lexer.Token) #)
                     {- Arity: 2, Strictness: <S,1*U><S,U> -}
                   = \ (ds :: [(GHC.Types.Int,
                                GHC.Base.String -> Language.Fortran.Lexer.Token)])
                       (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     case ds of wild {
                       []
                       -> case GHC.Prim.unsafeFreezeArray#
                                 @ GHC.Prim.RealWorld
                                 @ (GHC.Base.String -> Language.Fortran.Lexer.Token)
                                 ipv1
                                 eta of ds2 { (#,#) ipv2 ipv3 ->
                          (# ipv2,
                             GHC.Arr.Array
                               @ GHC.Types.Int
                               @ (GHC.Base.String -> Language.Fortran.Lexer.Token)
                               Language.Fortran.Lexer.$fShowToken2
                               Language.Fortran.Lexer.alexScan_u
                               110#
                               ipv3 #) }
                       : y ys
                       -> case y of wild3 { (,) i1 e1 ->
                          case i1 of wild1 { GHC.Types.I# i2 ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# 0# i2) of wild2 {
                            GHC.Types.False
                            -> case Language.Fortran.Lexer.alexScan564 wild1
                               ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         GHC.Arr.Array
                                           GHC.Types.Int
                                           (GHC.Base.String -> Language.Fortran.Lexer.Token) #)
                               of {}
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<=# i2 109#) of wild4 {
                                 GHC.Types.False
                                 -> case Language.Fortran.Lexer.alexScan564 wild1
                                    ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                              GHC.Arr.Array
                                                GHC.Types.Int
                                                (GHC.Base.String -> Language.Fortran.Lexer.Token) #)
                                    of {}
                                 GHC.Types.True
                                 -> case GHC.Prim.writeArray#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Base.String -> Language.Fortran.Lexer.Token)
                                           ipv1
                                           i2
                                           e1
                                           eta of s2# { DEFAULT ->
                                    go ys s2# } } } } } }
                 } in
                 let {
                   $sgo :: GHC.Prim.State# GHC.Prim.RealWorld
                           -> GHC.Prim.Int#
                           -> ([GHC.Types.Char] -> Language.Fortran.Lexer.Token)
                           -> [(GHC.Types.Int,
                                [GHC.Types.Char] -> Language.Fortran.Lexer.Token)]
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                 GHC.Arr.Array
                                   GHC.Types.Int
                                   (GHC.Base.String -> Language.Fortran.Lexer.Token) #)
                     {- Arity: 4, Strictness: <S,U><L,U><L,U><L,U> -}
                   = \ (sc :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot]
                       (sc1 :: GHC.Prim.Int#)
                       (sc2 :: [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
                       (sc3 :: [(GHC.Types.Int,
                                 [GHC.Types.Char] -> Language.Fortran.Lexer.Token)]) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# 0# sc1) of wild {
                       GHC.Types.False
                       -> case Language.Fortran.Lexer.alexScan564 (GHC.Types.I# sc1)
                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                    GHC.Arr.Array
                                      GHC.Types.Int
                                      (GHC.Base.String -> Language.Fortran.Lexer.Token) #)
                          of {}
                       GHC.Types.True
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# sc1 109#) of wild4 {
                            GHC.Types.False
                            -> case Language.Fortran.Lexer.alexScan564 (GHC.Types.I# sc1)
                               ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         GHC.Arr.Array
                                           GHC.Types.Int
                                           (GHC.Base.String -> Language.Fortran.Lexer.Token) #)
                               of {}
                            GHC.Types.True
                            -> case GHC.Prim.writeArray#
                                      @ GHC.Prim.RealWorld
                                      @ (GHC.Base.String -> Language.Fortran.Lexer.Token)
                                      ipv1
                                      sc1
                                      sc2
                                      sc of s2# { DEFAULT ->
                               go sc3 s2# } } }
                 } in
                 $sgo
                   ipv
                   108#
                   Language.Fortran.Lexer.Text
                   Language.Fortran.Lexer.alexScan3 }) -}
040b73c3fc97e788f670fa4e79690d34
  alexScan20 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan511
                   Language.Fortran.Lexer.alexScan21) -}
0a9029651ef40211a8370937eb301882
  alexScan200 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan295
                   Language.Fortran.Lexer.alexScan201) -}
11cbdc23de04d2e6749f7ec444b7ada0
  alexScan201 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan294
                   Language.Fortran.Lexer.alexScan202) -}
572f7dab5979b31424bfc0752d14717c
  alexScan202 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan293
                   Language.Fortran.Lexer.alexScan203) -}
8abcb186c64e88db148c8c3d8384b630
  alexScan203 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan292
                   Language.Fortran.Lexer.alexScan204) -}
ffbe7b3492602fc91dd0e92d598a5bc2
  alexScan204 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan291
                   Language.Fortran.Lexer.alexScan205) -}
c004e38a7946050804b990b9da27ad9d
  alexScan205 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan290
                   Language.Fortran.Lexer.alexScan206) -}
a8a51a5302d3e0f27f38a98b5638f9fe
  alexScan206 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan289
                   Language.Fortran.Lexer.alexScan207) -}
c4d365bd8082b7e7597493acf9142f50
  alexScan207 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan288
                   Language.Fortran.Lexer.alexScan208) -}
80f4e288f63bc39f6675bfc75acff2d9
  alexScan208 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan287
                   Language.Fortran.Lexer.alexScan209) -}
c2babc346583881185465611dafbb0e6
  alexScan209 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan286
                   Language.Fortran.Lexer.alexScan210) -}
0f195b7997b63521f7e5d73389b5deac
  alexScan21 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan509
                   Language.Fortran.Lexer.alexScan22) -}
972d7a6db77076ddde96acb0deedd16f
  alexScan210 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan285
                   Language.Fortran.Lexer.alexScan211) -}
09053fafd5661ce6cc7fd9581572c18e
  alexScan211 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan284
                   Language.Fortran.Lexer.alexScan212) -}
e5ecaa786934ef1812e9b3c80889719a
  alexScan212 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan283
                   Language.Fortran.Lexer.alexScan213) -}
626652bb882e610e9d86f19e67daaee4
  alexScan213 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan282
                   Language.Fortran.Lexer.alexScan214) -}
630956156d426f2deec622ad0548f082
  alexScan214 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan281
                   Language.Fortran.Lexer.alexScan215) -}
2eddeb687b0d02ecd33e8515985de4cb
  alexScan215 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan280
                   Language.Fortran.Lexer.alexScan216) -}
1413787349b6a60b7666e189ebebdae4
  alexScan216 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan279
                   Language.Fortran.Lexer.alexScan217) -}
0e46c281f7079142ae35f09216a4a3ff
  alexScan217 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan278
                   Language.Fortran.Lexer.alexScan218) -}
7f708f0eca100adc5b09bbc4b72d2fd5
  alexScan218 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan277
                   Language.Fortran.Lexer.alexScan219) -}
c65319661c3149f930585944fa8964f0
  alexScan219 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan276
                   Language.Fortran.Lexer.alexScan220) -}
3d7ef32d7c779cf48cf36d8863f7ae01
  alexScan22 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan507
                   Language.Fortran.Lexer.alexScan23) -}
4b953107cddb18159293780cbab502db
  alexScan220 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan275
                   Language.Fortran.Lexer.alexScan221) -}
d57ab428545c61b8a374ea1d98e84d04
  alexScan221 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan274
                   Language.Fortran.Lexer.alexScan222) -}
53512f0e144046e8362e748f626f9b2a
  alexScan222 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan273
                   Language.Fortran.Lexer.alexScan223) -}
d0d6accad09ef8b092b6a819809b2421
  alexScan223 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan272
                   Language.Fortran.Lexer.alexScan224) -}
5de4d00457ed2eee414da940a5f5ac2f
  alexScan224 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan271
                   Language.Fortran.Lexer.alexScan225) -}
7c4aaf8629469a21a5d2e2150949ac5e
  alexScan225 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan270
                   Language.Fortran.Lexer.alexScan226) -}
6d145bd68325cb4f6fe3c60a57726720
  alexScan226 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan269
                   Language.Fortran.Lexer.alexScan227) -}
f630ba705e0072ca002efe1c5db39a86
  alexScan227 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan268
                   Language.Fortran.Lexer.alexScan228) -}
efd34700f7b168e23e4baa935e0a834e
  alexScan228 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan267
                   Language.Fortran.Lexer.alexScan229) -}
16f30685c17349bddae81cd809c1b459
  alexScan229 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan266
                   Language.Fortran.Lexer.alexScan230) -}
ffb4d806927a23a9143c794c053d8dcd
  alexScan23 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan505
                   Language.Fortran.Lexer.alexScan24) -}
e0452ba3333bc29738d25d2d3206e48e
  alexScan230 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan265
                   Language.Fortran.Lexer.alexScan231) -}
5bfdcb6d278b33d517bfa2be84762adb
  alexScan231 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan264
                   Language.Fortran.Lexer.alexScan232) -}
08c10f6bdf7bd60f817e1adfa147edd3
  alexScan232 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan263
                   Language.Fortran.Lexer.alexScan233) -}
e3b6a8afcec07dad290bd0b4d0f14c6e
  alexScan233 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan262
                   Language.Fortran.Lexer.alexScan234) -}
fb787bf59f07cfac268563ed471b677b
  alexScan234 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan261
                   Language.Fortran.Lexer.alexScan235) -}
2f64c94c7652727d5757c09fdfab382f
  alexScan235 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan260
                   Language.Fortran.Lexer.alexScan236) -}
6d934a0bafa586bfde5ebc15e2b9f865
  alexScan236 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan259
                   Language.Fortran.Lexer.alexScan237) -}
6f1e42998276e656030e0f3acb5d1a0c
  alexScan237 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan258
                   Language.Fortran.Lexer.alexScan238) -}
85450afde5671f59a35fd82b03c2857f
  alexScan238 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan257
                   Language.Fortran.Lexer.alexScan239) -}
cd96e748ace541ba35c6dbc3fd3b9f6b
  alexScan239 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan256
                   Language.Fortran.Lexer.alexScan240) -}
691cf3282703ae45af91b3db12df7371
  alexScan24 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan502
                   Language.Fortran.Lexer.alexScan25) -}
7ad15f310ecfa27996a0dfcf23e910a9
  alexScan240 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan255
                   Language.Fortran.Lexer.alexScan241) -}
fb3401fd40201cd8a1874f4039efa612
  alexScan241 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan254
                   Language.Fortran.Lexer.alexScan242) -}
b6b70bdb5af3ba99cdcaecbbf39baa8d
  alexScan242 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan253
                   Language.Fortran.Lexer.alexScan243) -}
52b0f820f903ce6e6052dcc8e4ff3781
  alexScan243 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan252
                   Language.Fortran.Lexer.alexScan244) -}
0dcaef6db9a165ae6cf751c6478f9e5e
  alexScan244 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan251
                   Language.Fortran.Lexer.alexScan245) -}
7d6f5dcbb955094b9bbe4a194638f2e5
  alexScan245 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan250
                   Language.Fortran.Lexer.alexScan246) -}
c8879b17da16816a75dc67c3a1c61b33
  alexScan246 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan249
                   Language.Fortran.Lexer.alexScan247) -}
402e98c5f9abe035549fb494f182f89f
  alexScan247 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan248
                   (GHC.Types.[] @ GHC.Base.String)) -}
28a6449c92c0ade6f4d75c3cf797ed0a
  alexScan248 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "write"#) -}
9eac567274a6200b7b331320e4628ef4
  alexScan249 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "while"#) -}
ffdbaeb1030e6198629cab468006495d
  alexScan25 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan499
                   Language.Fortran.Lexer.alexScan26) -}
f86e963234246253ecba3d46832cbd0f
  alexScan250 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "where"#) -}
419e73274627450e46d9efd73811c725
  alexScan251 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "volatile"#) -}
a8d7b93476a4353d02e1e3fb1b452754
  alexScan252 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "use"#) -}
f5721513e7193d3f03d5d848b6fef488
  alexScan253 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "unit"#) -}
36b87cb6f78e3d3f155aafec6fa57154
  alexScan254 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "type"#) -}
b702e52d9b04e2e1d301f5705629c13b
  alexScan255 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "then"#) -}
38c6076aeff712de94f7d949e8eaf6a9
  alexScan256 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "to"#) -}
55592f2db625ff8b0927ab90ed07f25c
  alexScan257 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "target"#) -}
c92fd86506dd0a50900a9d3367b1943c
  alexScan258 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "subroutine"#) -}
f7483740813bcce61ea678ab409209d0
  alexScan259 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "stop"#) -}
c24c53a7630644cb862172f0bd4b031f
  alexScan26 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan496
                   Language.Fortran.Lexer.alexScan27) -}
5604ef5f72cad8a53203233ef5596c72
  alexScan260 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "stat"#) -}
fd8b0aba1d84ef1592e7239ae8cf562c
  alexScan261 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sqrt"#) -}
766f732cbf9a250eb527c3ffc560818c
  alexScan262 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sometype"#) -}
848d76d040fb00075414ecb445990be7
  alexScan263 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sequence"#) -}
8b8b5897ba220dfcd8d3963913870713
  alexScan264 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "select"#) -}
dae360ed846a06fdf6cf7aee5c60fabe
  alexScan265 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "save"#) -}
b900d1967ca6c8eef0aa6ae9931e0f93
  alexScan266 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "rewind"#) -}
b9c1bbe24c66d4bf09d519645b87e4ce
  alexScan267 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "return"#) -}
f3d99777488f0dabe25042cdbb6c9b64
  alexScan268 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "result"#) -}
5e9ffe96c798acd677f3bb012cd8e8bf
  alexScan269 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "recursive"#) -}
c3e76b1d268c93b746204096142d647d
  alexScan27 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan493
                   Language.Fortran.Lexer.alexScan28) -}
01fc9dea9484818d6358928e21389a37
  alexScan270 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "read"#) -}
7724ded2bb14aadd2f9ff0de64884433
  alexScan271 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "real"#) -}
944fb81bf0a5492e544bd4825832a75a
  alexScan272 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "pure"#) -}
cbdea267774238db9617664c5de4dc8a
  alexScan273 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "public"#) -}
7fe2a8c7bac5f3fb862a24b62127dbd2
  alexScan274 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "program"#) -}
5c8cccffc3c71994013fa7819e50e6d2
  alexScan275 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "procedure"#) -}
feba6fe43c613874ba9385ab26099214
  alexScan276 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "private"#) -}
6ad0efb94d29b5e42b89087c21bd2d79
  alexScan277 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "print"#) -}
7a0870fc395cef9e92382631cb1a0876
  alexScan278 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "precision"#) -}
17a4ef429ab8f463ec6fab23e102ad88
  alexScan279 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "pointer"#) -}
d7fc6ec7f7313385490c4910e31779eb
  alexScan28 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan490
                   Language.Fortran.Lexer.alexScan29) -}
ebdd24cc5b75d57a1ce3e8500e69d636
  alexScan280 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "pause"#) -}
640ff3ecfc9c7eb459f1027a7e035410
  alexScan281 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "parameter"#) -}
471ba28d7cb41996cf6a3e0cde5f8b02
  alexScan282 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "out"#) -}
9b6c96e54127597fd07af201f20c2bc3
  alexScan283 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "optional"#) -}
6b2232bb2e442c08a21f4285fda99852
  alexScan284 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "operator"#) -}
f208c54d1f89bcb550d958cb8fbbefd9
  alexScan285 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "open"#) -}
0ca99ee119a7a46914dab59c40aa1847
  alexScan286 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "only"#) -}
18c6af18de144c72aba6a48bb765d0ce
  alexScan287 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "nullify"#) -}
167c451733d3d52c9b800775f9ed4885
  alexScan288 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "none"#) -}
7f07cadf0d750cac6245475b54a67d09
  alexScan289 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "namelist"#) -}
225aff62504e513902b475c673cf7914
  alexScan29 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan487
                   Language.Fortran.Lexer.alexScan30) -}
a2ed690e67d69808fd5ccbb6d5ddc607
  alexScan290 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "module"#) -}
eed0ab84038d6f85da9194c6e58f14be
  alexScan291 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "logical"#) -}
b017d700a8eed1353c6775206bf54151
  alexScan292 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "len"#) -}
57f3325549b6b79b0ce786882c2d376d
  alexScan293 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "kind"#) -}
9914f8930b3b1c9ef503a2db37897545
  alexScan294 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "inquire"#) -}
d6a39232f1dc57d6c8189ed76787d110
  alexScan295 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "intrinsic"#) -}
0ca9f871a13c5b6f79e02c233a38db8b
  alexScan296 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "interface"#) -}
3c04d7cbbf4d87d005f2e873b473be1a
  alexScan297 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "intent"#) -}
906862f87dca4256ebc1fd9092c1aabe
  alexScan298 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "integer"#) -}
c898145c339abd352151c23a665c0339
  alexScan299 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "inout"#) -}
df15528e0dfb9ccc40e3e74479117ce3
  alexScan3 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan561
                   Language.Fortran.Lexer.alexScan4) -}
f7d127e12ae607490c4089ed1463d863
  alexScan30 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan484
                   Language.Fortran.Lexer.alexScan31) -}
1010fed77dd19ca5c219994f4520d85b
  alexScan300 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "include"#) -}
e82f2d0db76fe8e58a494e24f3f5b931
  alexScan301 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "in"#) -}
648d3b76035c6f4f5765a9832123a3b5
  alexScan302 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "implicit"#) -}
3fc4a433b88f7e79ad81bfc28fc787e6
  alexScan303 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "if"#) -}
d5f4febbf976fb8d7393f3f9fd45524b
  alexScan304 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "iolength"#) -}
4625e5e3485d93caa41125e4456b5ffb
  alexScan305 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "function"#) -}
9d5432e56727f0d8d925553e9e9861eb
  alexScan306 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "format"#) -}
d530eba66bee2eb38b23101298fe9ef2
  alexScan307 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "forall"#) -}
8a46c8567218fc95ca6d7e516df6d61e
  alexScan308 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "external"#) -}
e13433ca5aa57483c4c0916f5b428a86
  alexScan309 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "exit"#) -}
730b25bcca40544535badea0003b496d
  alexScan31 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan481
                   Language.Fortran.Lexer.alexScan32) -}
993b733cb62ab1102f88fe265117165d
  alexScan310 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "equivalence"#) -}
84b14bbc047a03127d74ac482647225a
  alexScan311 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "entry"#) -}
c104d489ce9d4ce195a91b5e2b091bfd
  alexScan312 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "endfile"#) -}
1e89c8c8c522188904d571c18a36f908
  alexScan313 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "endif"#) -}
488a8e77ce73f53bf74a2d32363fcf12
  alexScan314 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "enddo"#) -}
1002cff06c5d86f5391fe499550e81b3
  alexScan315 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "end"#) -}
17c2f6c828b3485b5b982ceabd5bb806
  alexScan316 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "elsewhere"#) -}
22408e4d3e12d7a4f87798819133c43b
  alexScan317 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "elseif"#) -}
37fa91a1cc10c223afb7d9d67ab4bd6f
  alexScan318 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "else"#) -}
21ccfe95ef8e07e644268101254e53e3
  alexScan319 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "elemental"#) -}
37c1a1112c53242bd25d39af105c8d8e
  alexScan32 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan478
                   Language.Fortran.Lexer.alexScan33) -}
e060d1d0b54d4502b0817f6a94a02f7c
  alexScan320 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "double"#) -}
44f2608256d995a75830cbfdda072579
  alexScan321 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "do"#) -}
43ecf369a7d626ebe56cec24e2a85e5d
  alexScan322 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "dimension"#) -}
220c955fe12b9b799d977189298d0aea
  alexScan323 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "default"#) -}
2378fe19a4f061438f23c8487aea8585
  alexScan324 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "deallocate"#) -}
b7c29d791e746c0bbfa19e1805810297
  alexScan325 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "data"#) -}
fd3b056c08bef1a48587aed2e1c6db08
  alexScan326 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cycle"#) -}
2ffef6cced889079f1ab5fae51d5b069
  alexScan327 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "continue"#) -}
d634fade80046e3034e813dab4b60f5d
  alexScan328 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "contains"#) -}
8c4b5510d93f6f239e61bb75f7762322
  alexScan329 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "complex"#) -}
7889dc94e3bd6394ec13f6fe05019c5e
  alexScan33 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan475
                   Language.Fortran.Lexer.alexScan34) -}
1897bf62185a4aa717eec3d66124aa1f
  alexScan330 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "common"#) -}
665c5f7d2ddd8bcd71c1568e645ef411
  alexScan331 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "close"#) -}
22f51ddc056ca2ccae6e92e6f3ef7132
  alexScan332 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "character"#) -}
5ab7257b1ae1493a6a16713ccd29c081
  alexScan333 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "case"#) -}
e92b8783ed7ef34b0afcb83f0ea557d7
  alexScan334 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "call"#) -}
1db31b590dcdf446978386d18866b201
  alexScan335 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "block"#) -}
2d3fb9e1e8a8a3193621fc435df314b3
  alexScan336 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "backspace"#) -}
7e8498b7e4d9a34ef1b6a2d0dde5e564
  alexScan337 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "automatic"#) -}
7d0682253820d74f11d68137ecda6219
  alexScan338 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "assignment"#) -}
c26c8b3628d3fe037ba76c8d101a429f
  alexScan339 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "assign"#) -}
cf2992826fc22df22678f2557157b32b
  alexScan34 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan473
                   Language.Fortran.Lexer.alexScan35) -}
efa4905a43b6b4b32441576dc3eeca68
  alexScan340 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "allocatable"#) -}
9d14ef1793f9c3cea555dfd480a89a79
  alexScan341 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "allocate"#) -}
c0777862235ec2eadbe53706d2066632
  alexScan342 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 20#) -}
fafb7adad109fbf5d0d72e359032d9c8
  alexScan343 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan344,
                  Language.Fortran.Lexer.alex_action_52)) -}
bd7c0d1f61ed4b54f29499f70b15dd3b
  alexScan344 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 21#) -}
2ba1c7ed06896db6f9e991b8f1a3103b
  alexScan345 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan346,
                  Language.Fortran.Lexer.alex_action_52)) -}
8eeec48b13696b5794428d93c8549fb4
  alexScan346 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 22#) -}
f0e76f4ba3876fa5dee6595af5633708
  alexScan347 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan348,
                  Language.Fortran.Lexer.alex_action_52)) -}
9be5a4bdd9692e75d4a203f5e81d775e
  alexScan348 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 23#) -}
98235ea72040954c63307470af6fe36f
  alexScan349 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan350,
                  Language.Fortran.Lexer.alex_action_52)) -}
b882430a647716f4a478d5f4bfd01951
  alexScan35 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan471
                   Language.Fortran.Lexer.alexScan36) -}
f98b14b472d3fdddfd8288dc0fbde4d7
  alexScan350 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 24#) -}
6e75573e1012f12075848fceb1bfe00e
  alexScan351 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan352,
                  Language.Fortran.Lexer.alex_action_52)) -}
ff1cbbb9230944c875f0840f59f6a139
  alexScan352 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 25#) -}
38a7647bb90ea9ebcb7451efaf8262df
  alexScan353 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan354,
                  Language.Fortran.Lexer.alex_action_52)) -}
bb2cbe084f271519bbc79da5d2765632
  alexScan354 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 26#) -}
7870fb92400f652f9086e4225c1b3107
  alexScan355 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan356,
                  Language.Fortran.Lexer.alex_action_52)) -}
e6c50593381cf76b5f68e5d29865121f
  alexScan356 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 27#) -}
654d9c95775716560a389c6b5739ba9d
  alexScan357 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan358,
                  Language.Fortran.Lexer.alex_action_52)) -}
e32cb7c4f43529b75b4861027b6a5998
  alexScan358 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 28#) -}
e98426f169845dea006dc893eaac93b5
  alexScan359 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan360,
                  Language.Fortran.Lexer.alex_action_52)) -}
024f2cd649c1d4aa05fa96dfb4720f73
  alexScan36 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan469
                   Language.Fortran.Lexer.alexScan37) -}
b3a11ec113ffedb6f6e6b32153e1acf3
  alexScan360 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 29#) -}
3c9a7ad7fe3bb0c81e7247d96a81dead
  alexScan361 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan362,
                  Language.Fortran.Lexer.alex_action_52)) -}
def1992a9350526ce815a2bbdea938ee
  alexScan362 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 30#) -}
c12a95f32db652235def1849e4f92793
  alexScan363 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan364,
                  Language.Fortran.Lexer.alex_action_52)) -}
ba8bcf35ba2042c162b316330af02f64
  alexScan364 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 31#) -}
6d802605aca3fd1030c2003fec71e117
  alexScan365 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan366,
                  Language.Fortran.Lexer.alex_action_52)) -}
624b225bb80c3cf9bdd2f5fca958a288
  alexScan366 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 32#) -}
c1fdd06469b2c84f286ddc662f8fb58a
  alexScan367 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan368,
                  Language.Fortran.Lexer.alex_action_52)) -}
75faed4a41655f1069f4cb2841c0f9e3
  alexScan368 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 33#) -}
41787c8ed4c711acd08ba07f788f6d80
  alexScan369 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan370,
                  Language.Fortran.Lexer.alex_action_52)) -}
0c95c892d29077c3c1491929c5ff2eb7
  alexScan37 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan467
                   Language.Fortran.Lexer.alexScan38) -}
2040b3152a06038827e287a2cd6fb4ce
  alexScan370 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 34#) -}
4384704150e9536374deec301ab5ad23
  alexScan371 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan372,
                  Language.Fortran.Lexer.alex_action_52)) -}
7f6cc7f79bf81c47dab92265b70a1797
  alexScan372 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 35#) -}
125e57728b7139abe1a83a35d22da66e
  alexScan373 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan374,
                  Language.Fortran.Lexer.alex_action_52)) -}
32675070bacd5f4f19c0a02f695ae58e
  alexScan374 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 36#) -}
c3617d231d65107078646c5e0106cfb1
  alexScan375 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan376,
                  Language.Fortran.Lexer.alex_action_52)) -}
a87f1e0d6f5ff89778c8bb31971c6aa2
  alexScan376 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 37#) -}
7ea931b95d8649b578399392cb24c32f
  alexScan377 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan378,
                  Language.Fortran.Lexer.alex_action_52)) -}
7ff1b4c3f3209b7075947a190bd4209e
  alexScan378 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 38#) -}
6458d0367b3bbf5a1f5d471794b0d8c4
  alexScan379 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan380,
                  Language.Fortran.Lexer.alex_action_52)) -}
d7d187664a5aa21719d4b76627993d7e
  alexScan38 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan465
                   Language.Fortran.Lexer.alexScan39) -}
35b8420dd17aeab96383296f5bda1b3c
  alexScan380 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 39#) -}
ee089ee68a5060e206aea478981ef4c0
  alexScan381 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan382,
                  Language.Fortran.Lexer.alex_action_52)) -}
ef0a27fcfb2a4d86b7347b21fb9ff99d
  alexScan382 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 40#) -}
d850d79428b280ee42690df1fc866772
  alexScan383 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan384,
                  Language.Fortran.Lexer.alex_action_52)) -}
906085b7628b1786827f68eaf73f3ce7
  alexScan384 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 41#) -}
e029d9b9a5650b9abc7509643f22d7b3
  alexScan385 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan386,
                  Language.Fortran.Lexer.alex_action_52)) -}
4ae00aa1e18fb4092db0442adeb4fa03
  alexScan386 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 42#) -}
e95918ac56927a8c3028d79184fc0697
  alexScan387 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan388,
                  Language.Fortran.Lexer.alex_action_52)) -}
dba5387cdb48ec0984e54cd068582afe
  alexScan388 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 43#) -}
9482da98c970f30155fbf75f9b4c60d9
  alexScan389 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan390,
                  Language.Fortran.Lexer.alex_action_52)) -}
5e552fd926874147d74dc46dad9c1266
  alexScan39 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan463
                   Language.Fortran.Lexer.alexScan40) -}
939f3a46c2da548bf25213bab5d498cf
  alexScan390 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 44#) -}
6b7730f54173f2dae75248c1ccb7e1b8
  alexScan391 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan392,
                  Language.Fortran.Lexer.alex_action_52)) -}
2d1e22a5e5a28166e65ecefe0976f694
  alexScan392 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 45#) -}
075c375288537b22c8f3693b0f353f21
  alexScan393 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan394,
                  Language.Fortran.Lexer.alex_action_52)) -}
e3915227e7dbdd745aeccd7033afd88f
  alexScan394 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 46#) -}
696fa319bfd4088fdb81cb5cea78d796
  alexScan395 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan396,
                  Language.Fortran.Lexer.alex_action_52)) -}
3b68d13592ba416280719fba85b861bd
  alexScan396 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 47#) -}
67aa2249a70fb40dceafebbdde9e8854
  alexScan397 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan398,
                  Language.Fortran.Lexer.alex_action_52)) -}
d0aa15b843a2bd360a517e6b661a1d89
  alexScan398 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 48#) -}
96bd35f135c9d059c1aecefc0ec44879
  alexScan399 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan401,
                  Language.Fortran.Lexer.alex_action_51 @ GHC.Base.String)) -}
d1debbef77cfc70e70a7e3fa1ea54a78
  alexScan4 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan558
                   Language.Fortran.Lexer.alexScan5) -}
0307b1721dbd69c81993fbba815c1b1e
  alexScan40 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan461
                   Language.Fortran.Lexer.alexScan41) -}
7839eca2f4862caaa19e27c68ec51a49
  alexScan400 :: Language.Fortran.Lexer.Token
  {- Strictness: m1,
     Unfolding: (Language.Fortran.Lexer.Key
                   Language.Fortran.Lexer.alexScan317) -}
d1aa15bcd2e15add5a6126a80205ce56
  alexScan401 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 49#) -}
23beb36861c0de80eb64a71be5a84754
  alexScan402 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan403,
                  Language.Fortran.Lexer.alex_action_51 @ GHC.Base.String)) -}
1151eca8a1aae9692e8c63ad56b8e4a4
  alexScan403 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 50#) -}
7b339a77747989024f24ee80c13a1342
  alexScan404 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan406,
                  Language.Fortran.Lexer.alexScan405)) -}
ef61e85f6db0cafa2b7c7251bfde5a32
  alexScan405 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.RBrace) -}
902486a1561810ff35ccbd0041825cf8
  alexScan406 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 51#) -}
5fc37cab36fe89f5d2dc2fe28ebc8b34
  alexScan407 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan409,
                  Language.Fortran.Lexer.alexScan408)) -}
d7d62aab47f973a11c6ef97ec47dbce7
  alexScan408 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.LBrace) -}
a59df3a417cd3b4a9262b1e103565d0f
  alexScan409 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 52#) -}
cc250b6db2c035273104b6934610a89b
  alexScan41 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan459
                   Language.Fortran.Lexer.alexScan42) -}
24389244ce40095bf03050ca11a21afa
  alexScan410 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan412,
                  Language.Fortran.Lexer.alexScan411)) -}
2adab6531a9f672a81f7c8e01f0bac26
  alexScan411 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.Percent) -}
d37fcfe75383bb610efcf7c3bc3d2e91
  alexScan412 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 53#) -}
792e69cbdd4b1cddcd90414a2a5d97ad
  alexScan413 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan415,
                  Language.Fortran.Lexer.alexScan414)) -}
04bc20e1221e396907933e7d1a9a5367
  alexScan414 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.ContLineNoNewLine) -}
9dbf238618a73ae7eda64e5ba852d652
  alexScan415 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 54#) -}
2cbaeda85a6d98f457dfc414471d0421
  alexScan416 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan418,
                  Language.Fortran.Lexer.alexScan417)) -}
670c3252329187fa3393f4062f9cd2fd
  alexScan417 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.ContLine) -}
9e2887c44c016fe0148b2994e4622a08
  alexScan418 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 55#) -}
1e728b6f66d06c10c8be710e8570e60c
  alexScan419 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan421,
                  Language.Fortran.Lexer.alexScan420)) -}
fff8f1d50219d43c3de31f655bfb751d
  alexScan42 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan455
                   Language.Fortran.Lexer.alexScan43) -}
7215fb828493828444cf79bb7ce4e6fa
  alexScan420 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.ContLineWithComment) -}
409cc4319b10a580008c956d4ab70c77
  alexScan421 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 56#) -}
88562e8e4a1e50864db2ecb16b81bfe8
  alexScan422 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan423,
                  Language.Fortran.Lexer.alex_action_43 @ GHC.Base.String)) -}
ad7581efdcc959c385131622c931f47c
  alexScan423 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 57#) -}
87ff92d29b791fae8229af793c147113
  alexScan424 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan425,
                  Language.Fortran.Lexer.alex_action_43 @ GHC.Base.String)) -}
d6c1a6d5053a51762fbb0ae6d31be87b
  alexScan425 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 58#) -}
137e2821c84af1d5b45689a18175fd50
  alexScan426 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan430,
                  Language.Fortran.Lexer.alexScan427)) -}
205a17b366cd78c1a152ba1a3f9af199
  alexScan427 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.alexScan428) -}
a66f0dbde616939997ae65ef0cb942bc
  alexScan428 :: Language.Fortran.Lexer.Token
  {- Strictness: m1,
     Unfolding: (Language.Fortran.Lexer.Key
                   Language.Fortran.Lexer.alexScan429) -}
2ccb2e07c40d9c6154e47d9b63c9d526
  alexScan429 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "null"#) -}
91c11c5184806891db2d894b6865799a
  alexScan43 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan453
                   Language.Fortran.Lexer.alexScan44) -}
f30792425aa03a00b4029796cf02d3ab
  alexScan430 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 59#) -}
ea513a27b01c41b76e3b91c185c87d57
  alexScan431 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan433,
                  Language.Fortran.Lexer.alexScan432)) -}
67da534a15373e0da0585e19ddc727b7
  alexScan432 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.Dollar) -}
bcf33258d82d29ceb63d3853b64346e8
  alexScan433 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 60#) -}
fbddb0b2738e2c166e39c1c73e02942a
  alexScan434 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan436,
                  Language.Fortran.Lexer.alexScan435)) -}
5507c3041e3385bb1b058dd043418afc
  alexScan435 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.SemiColon) -}
c8db19dcb258da30da52cbbec86ae25c
  alexScan436 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 61#) -}
829814e374cf1aab1579a4c63d31cf71
  alexScan437 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan439,
                  Language.Fortran.Lexer.alexScan438)) -}
7e657f6b4d7fab56ce1c76297c0d7b94
  alexScan438 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.Colon) -}
81c1287e4b7db898fab10da9aeeb83b6
  alexScan439 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 62#) -}
ddfdaf6e69df13627418ac4e0b37d41e
  alexScan44 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan449
                   Language.Fortran.Lexer.alexScan45) -}
27bf72358a12cfff5958b23dbf3a8581
  alexScan440 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan442,
                  Language.Fortran.Lexer.alexScan441)) -}
6a59ba4d52e91f83a2d43205601f4cd6
  alexScan441 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.ColonColon) -}
ef0a1e61bc0ef8a6601ec3645de41cd7
  alexScan442 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 63#) -}
2c7a9c1022b0f4fd5a221954d38a97ad
  alexScan443 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan445,
                  Language.Fortran.Lexer.alexScan444)) -}
1b27bda4a293f3cf0c6e2a9ceb011ccb
  alexScan444 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.Period) -}
7624da467973275c77f1ef84d7b6cc90
  alexScan445 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 64#) -}
19f7b4c419b211c7de31c6093ce7a056
  alexScan446 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan448,
                  Language.Fortran.Lexer.alexScan447)) -}
fbb43e7744fb5bdac2ace8b97874c013
  alexScan447 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.SingleQuote) -}
ae9c7d87f11f4068afaeb56c7001290d
  alexScan448 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 65#) -}
2ec2d10d745cc82d035e14357e566d85
  alexScan449 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan452,
                  Language.Fortran.Lexer.alexScan450)) -}
fb272f0b24bdea0311929aca76065e5e
  alexScan45 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan446
                   Language.Fortran.Lexer.alexScan46) -}
f7e42406e0bee0d0ab316a5245ca1248
  alexScan450 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.LitConst
                   Language.Fortran.Lexer.alexScan451
                   s) -}
1f734a93e2f7ff1235db86b55b32616f
  alexScan451 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'z'#) -}
3af99fd1ebf772bbb288fccde61a14ec
  alexScan452 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 66#) -}
bebe88da4968d23aedfb5e629681b533
  alexScan453 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan454,
                  Language.Fortran.Lexer.alexScan450)) -}
fc0cf70335267dea56c9eeeec83827fc
  alexScan454 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 67#) -}
577788057af4df1a28c9ccd556f0cb9a
  alexScan455 ::
    (GHC.Types.Int, [GHC.Types.Char] -> Language.Fortran.Lexer.Token)
  {- Unfolding: ((Language.Fortran.Lexer.alexScan458,
                  Language.Fortran.Lexer.alexScan456)) -}
74498c5d1e9c2c63fa8ad993c6297d3b
  alexScan456 :: [GHC.Types.Char] -> Language.Fortran.Lexer.Token
  {- Arity: 1,
     Unfolding: (\ (s :: [GHC.Types.Char]) ->
                 Language.Fortran.Lexer.StrConst
                   (GHC.Types.:
                      @ GHC.Types.Char
                      (GHC.List.head @ GHC.Types.Char s)
                      (case GHC.List.$wlenAcc @ GHC.Types.Char s 0# of ww2 { DEFAULT ->
                       let {
                         y :: GHC.Prim.Int# = GHC.Prim.-# ww2 2#
                       } in
                       case GHC.Prim.tagToEnum#
                              @ GHC.Types.Bool
                              (GHC.Prim.<# 0# y) of wild {
                         GHC.Types.False
                         -> GHC.Base.++
                              @ GHC.Types.Char
                              Language.Fortran.Lexer.alexScan457
                              (GHC.Types.:
                                 @ GHC.Types.Char
                                 (case s of wild1 {
                                    [] -> GHC.List.badHead @ GHC.Types.Char : x ds1 -> x })
                                 (GHC.Types.[] @ GHC.Types.Char))
                         GHC.Types.True
                         -> GHC.Base.++
                              @ GHC.Types.Char
                              (GHC.List.reverse1
                                 @ GHC.Types.Char
                                 (Language.Fortran.Lexer.alexScan_$scutOut
                                    (GHC.Types.[] @ GHC.Types.Char)
                                    (GHC.List.$wunsafeTake
                                       @ GHC.Types.Char
                                       y
                                       (Language.Fortran.Lexer.$wunsafeDrop @ GHC.Types.Char 1# s)))
                                 (GHC.Types.[] @ GHC.Types.Char))
                              (GHC.Types.:
                                 @ GHC.Types.Char
                                 (case s of wild1 {
                                    [] -> GHC.List.badHead @ GHC.Types.Char : x ds1 -> x })
                                 (GHC.Types.[] @ GHC.Types.Char)) } }))) -}
e89839724b26acc3dc0f2210d63dcedf
  alexScan457 :: [GHC.Types.Char]
  {- Unfolding: (GHC.List.reverse1
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)) -}
34e1a1fd7621762153433ec4c2383242
  alexScan458 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 68#) -}
7b96e3f947f110594c05cd51b48fbe2c
  alexScan459 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan460,
                  Language.Fortran.Lexer.StrConst)) -}
86ed5587936b0a06dbd83112aa0fdc50
  alexScan46 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan443
                   Language.Fortran.Lexer.alexScan47) -}
98dc4102dcce59aa83184a5fa0e3c662
  alexScan460 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 69#) -}
e5e583246b6b1bb141f366f2800b73d6
  alexScan461 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan462,
                  Language.Fortran.Lexer.StrConst)) -}
e405f585af70d70c6d1296916690ee86
  alexScan462 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 70#) -}
4348498a7b289a4d06bc0ce514b26450
  alexScan463 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan464,
                  Language.Fortran.Lexer.StrConst)) -}
f32aafb46d8278750f8048a3b6d77bd3
  alexScan464 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 71#) -}
c0460d3846ae3f02f8d62a51f24d0f95
  alexScan465 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan466,
                  Language.Fortran.Lexer.StrConst)) -}
9e23d61ec3c3b0f283de21ef4fb9b2e5
  alexScan466 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 72#) -}
918d639a3b8e6b4d7109708972e691c2
  alexScan467 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan468,
                  Language.Fortran.Lexer.StrConst)) -}
da12995d8bfdb32c42d48b746b28ee44
  alexScan468 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 73#) -}
c1f35f05e2cb2e5bbf83399804ca0d1c
  alexScan469 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan470,
                  Language.Fortran.Lexer.StrConst)) -}
d49ab34b5fd4a3a72d15c3bff29f043c
  alexScan47 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan440
                   Language.Fortran.Lexer.alexScan48) -}
2706f8b204754c0e2862f4fe9676b7a0
  alexScan470 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 74#) -}
f95690b28cdf54987772daf3d988854e
  alexScan471 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan472,
                  Language.Fortran.Lexer.StrConst)) -}
c6d2d98560910a0026a9c0e7663b40f3
  alexScan472 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 75#) -}
d9bff537ff81749c1edda8dc8f999365
  alexScan473 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan474,
                  Language.Fortran.Lexer.StrConst)) -}
ea7286a06a5d2004c47ae63aeb02f979
  alexScan474 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 76#) -}
2b58c6384ac83617df2b87c05bfb4804
  alexScan475 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan477,
                  Language.Fortran.Lexer.alexScan476)) -}
3679c4f7939f8b77b5875933422dcf92
  alexScan476 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.OpEquals) -}
cb8f533f8f9d7e1a54ec241ef1fcee76
  alexScan477 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 77#) -}
675a953fc0c0f5e30c1a95efca30fde6
  alexScan478 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan480,
                  Language.Fortran.Lexer.alexScan479)) -}
e302426a022f748ab1e1bcb7e755f62a
  alexScan479 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.RParen) -}
18664e3be33d15f15867f6a6564dab22
  alexScan48 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan437
                   Language.Fortran.Lexer.alexScan49) -}
91522bf21e574b3eb1a7ff13559fc40d
  alexScan480 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 78#) -}
376ae36d0ec61464bb0719041960212b
  alexScan481 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan483,
                  Language.Fortran.Lexer.alexScan482)) -}
d459f69aa66dea956769cd1a417e437b
  alexScan482 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.LParen) -}
456389e8828b4ba62f3779d798d40f0e
  alexScan483 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 79#) -}
9e836b68595e76a308fe27b57f40d96e
  alexScan484 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan486,
                  Language.Fortran.Lexer.alexScan485)) -}
ed76c6fde57924ace6ec0076f6e3c12e
  alexScan485 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.RArrCon) -}
af2dc31fc4335f6c0b82cb013c995e4f
  alexScan486 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 80#) -}
57ec24d345bace3908846aa004611f08
  alexScan487 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan489,
                  Language.Fortran.Lexer.alexScan488)) -}
babdf56fd8ec593c5e81c9e4b87ee11b
  alexScan488 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.LArrCon) -}
e884839f77ca2f7e17c50717434e47e5
  alexScan489 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 81#) -}
f79d274ed19246b2eea5d011032c4755
  alexScan49 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan434
                   Language.Fortran.Lexer.alexScan50) -}
ea150fd2d34f73f829aae75c161ac00c
  alexScan490 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan492,
                  Language.Fortran.Lexer.alexScan491)) -}
c89817637c4b24c5ecb69a20e330cc45
  alexScan491 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.Comma) -}
02473fde0a9b004c3fdd744eabc7fe27
  alexScan492 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 82#) -}
c43464a8e1022f1bbee1f4f046ec1b1a
  alexScan493 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan495,
                  Language.Fortran.Lexer.alexScan494)) -}
f0de702d38fd6394b53460728387b4f9
  alexScan494 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.OpSub) -}
c500510d82bde764835018a5200d0bfa
  alexScan495 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 83#) -}
745dcec05010c6c0b2c2d84ad3884382
  alexScan496 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan498,
                  Language.Fortran.Lexer.alexScan497)) -}
fd6830303ff53ddc0d6695240dbddad7
  alexScan497 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.OpAdd) -}
181e0693002665f52c541743be10c5c0
  alexScan498 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 84#) -}
130f368020cb6d60bf914694d0e4280a
  alexScan499 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan501,
                  Language.Fortran.Lexer.alexScan500)) -}
bde1ee8aefab5981b8a715f5fc452eca
  alexScan5 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan555
                   Language.Fortran.Lexer.alexScan6) -}
e2f0b748dfa860370772b22a5426b13f
  alexScan50 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan431
                   Language.Fortran.Lexer.alexScan51) -}
db3545704deaefe078c5b8a49b3b30ed
  alexScan500 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.OpDiv) -}
378da8b6b9e79e7560cb85ca39c231c8
  alexScan501 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 85#) -}
b77f13033474fc6f7bf70041275a80a7
  alexScan502 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan504,
                  Language.Fortran.Lexer.alexScan503)) -}
7881e2696cb3bbd6ae83c332687c4d62
  alexScan503 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.OpMul) -}
d4af53834a6a3c52e4b5c3d3be89539d
  alexScan504 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 86#) -}
8dded1716ed9052db17a6e2bf7bdb0bc
  alexScan505 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan506,
                  Language.Fortran.Lexer.alex_action_20 @ GHC.Base.String)) -}
83db7a4bd326921ab4d56074b4872f8c
  alexScan506 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 87#) -}
edf9d158c26b6986a8cfe23f5b99e580
  alexScan507 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan508,
                  Language.Fortran.Lexer.alex_action_20 @ GHC.Base.String)) -}
49beed2cba93a60b27c7cd46489ea0da
  alexScan508 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 88#) -}
268acb5c361a1fe4f490bd53419613d6
  alexScan509 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan510,
                  Language.Fortran.Lexer.alex_action_19 @ GHC.Base.String)) -}
3c2468affa5abeb73b2d49173a094f4b
  alexScan51 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan426
                   Language.Fortran.Lexer.alexScan52) -}
2285c152580cf1831e04fa185cd5eb30
  alexScan510 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 89#) -}
e9c821e8039b509cfe921f6c88c3de55
  alexScan511 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan512,
                  Language.Fortran.Lexer.alex_action_19 @ GHC.Base.String)) -}
23a6d7e32edd8f01e93743babd08f184
  alexScan512 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 90#) -}
c26a65f3bd9dd75f5f84a1c7c1d9b72e
  alexScan513 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan515,
                  Language.Fortran.Lexer.alexScan514)) -}
e82b23889f610fceca5d4df646c573a1
  alexScan514 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.OpNEQV) -}
ea726a0af06b7f2ebee92fdf58a24aba
  alexScan515 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 91#) -}
c3a932c0fbb8c8d8cf8f46745232e6d9
  alexScan516 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan518,
                  Language.Fortran.Lexer.alexScan517)) -}
e4845223f09f84ff2789e55620f81d03
  alexScan517 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.OpEQV) -}
261bf6be78140e020db2278ee0019c18
  alexScan518 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 92#) -}
f7de7f5bc854c54699398a5bad2ebe6d
  alexScan519 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan521,
                  Language.Fortran.Lexer.alexScan520)) -}
3945ae500469a2f521a9b07e67bf1e9f
  alexScan52 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan424
                   Language.Fortran.Lexer.alexScan53) -}
80d0e2076e3e2f84c835b607e02ab4f7
  alexScan520 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.FalseConst) -}
eb60be67d83e11701802c5492599100b
  alexScan521 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 93#) -}
a25af3c1e813e52a1ef455ed908dfae9
  alexScan522 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan524,
                  Language.Fortran.Lexer.alexScan523)) -}
a2d981b4e67583331b6049d2d86ca9ee
  alexScan523 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.TrueConst) -}
08369cd7986d083baeb0b19c03bbb573
  alexScan524 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 94#) -}
559075ba7e5b85bc0962bc0c7f6d622c
  alexScan525 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan527,
                  Language.Fortran.Lexer.alexScan526)) -}
7a085e9625301560df724232e1ed2dc5
  alexScan526 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.OpOR) -}
833c64ea721bbd8fd8d8ed2436a93c3a
  alexScan527 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 95#) -}
46b5b1437b6fec3802ab2b9a1190068b
  alexScan528 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan530,
                  Language.Fortran.Lexer.alexScan529)) -}
54db87d62be58607fcc0fdcf21d2515d
  alexScan529 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.OpAND) -}
1ab99e1c78c2fe78828471f5219367dd
  alexScan53 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan422
                   Language.Fortran.Lexer.alexScan54) -}
c091e943649a9f0b2a9f5b406075f19f
  alexScan530 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 96#) -}
99b77c8a9bf800c819e8f225948a6d2f
  alexScan531 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan533,
                  Language.Fortran.Lexer.alexScan532)) -}
3de5b9a2f2a68e850647508c8d821e1a
  alexScan532 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.OpNOT) -}
5dc879833dc378b9711563d331912b4c
  alexScan533 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 97#) -}
f307179d9cf051c6728ecf413dcbbde2
  alexScan534 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan536,
                  Language.Fortran.Lexer.alexScan535)) -}
829fc8e8c102f2d5e26cea886ca5e543
  alexScan535 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.OpGE) -}
e65aad2014fd1b0322c628f606bc6713
  alexScan536 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 98#) -}
eb3dcbef721184948926b6110d69ea03
  alexScan537 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan539,
                  Language.Fortran.Lexer.alexScan538)) -}
dce5061e48c1f48a7cd707ad1f9ee657
  alexScan538 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.OpLE) -}
28afaefb726ae32f4f3bc7f974360bf8
  alexScan539 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 99#) -}
528386a2b3d02bac57e2fc98dea1427c
  alexScan54 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan419
                   Language.Fortran.Lexer.alexScan55) -}
6e97901d3047f17d95c839270b0fd2dc
  alexScan540 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan542,
                  Language.Fortran.Lexer.alexScan541)) -}
886d642e3e443fc886872b06a5b19fef
  alexScan541 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.OpNE) -}
2f3c85de40d52eb0a53a267214bd84f0
  alexScan542 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 100#) -}
d01d98a8725e999a47fada66371ee531
  alexScan543 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan545,
                  Language.Fortran.Lexer.alexScan544)) -}
a2f8cfd29267a578c91db58a31aaf895
  alexScan544 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.OpEQ) -}
855376cdd61df3c3d1a991951f591e3e
  alexScan545 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 101#) -}
8d757565593ef604610b2e7019f40aae
  alexScan546 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan548,
                  Language.Fortran.Lexer.alexScan547)) -}
4ded1e054470aede9df4430da15bc262
  alexScan547 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.OpConcat) -}
e2506ffea95814cf7a2cd26c53a5fa7a
  alexScan548 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 102#) -}
98b8e3555e31bc8d8bff1ad3f10dc446
  alexScan549 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan551,
                  Language.Fortran.Lexer.alexScan550)) -}
eb6d562809a9730019c47fd653c348ae
  alexScan55 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan416
                   Language.Fortran.Lexer.alexScan56) -}
0257a2ab1078730155be65d7b83cdfd2
  alexScan550 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.OpPower) -}
3fe45bfe5c788601a02b5e0784e0b9fa
  alexScan551 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 103#) -}
c6d2e38e7ba672a22b5dd8b49dd462a6
  alexScan552 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan554,
                  Language.Fortran.Lexer.alexScan553)) -}
390d9b58ab7a1889b75fd73420b7e3ef
  alexScan553 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.Arrow) -}
eeada2f66579f5c65978d4bb49454878
  alexScan554 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 104#) -}
0b0ea2182fcf0bb45b7aa9047816a729
  alexScan555 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan557,
                  Language.Fortran.Lexer.alexScan556)) -}
bd41f62caa4befa7bea01fb9f49fdcb8
  alexScan556 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.MArrow) -}
139f8c80248e9925122bd3b8d94984ed
  alexScan557 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 105#) -}
6fd25eed7c372c4580f8f18e7f67894f
  alexScan558 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan560,
                  Language.Fortran.Lexer.alexScan559)) -}
9965c7df588df7d50cd6486ade8a8610
  alexScan559 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.Hash) -}
d45f5887a90e0c65ed6fc3aab6174d90
  alexScan56 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan413
                   Language.Fortran.Lexer.alexScan57) -}
5d26d192c13d2f6d0f5166bff810245d
  alexScan560 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 106#) -}
7242801a2a7b2d7f372fb1d8076748fd
  alexScan561 ::
    (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- HasNoCafRefs,
     Unfolding: ((Language.Fortran.Lexer.alexScan563,
                  Language.Fortran.Lexer.alexScan562)) -}
84ae4bc971c7335d3b85bee900dfaafc
  alexScan562 :: GHC.Base.String -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 Language.Fortran.Lexer.NewLine) -}
c52b191c090629e69e9cc2657d6579f5
  alexScan563 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 107#) -}
df5fb6d988d02df3efef40b11a5e8068
  alexScan564 :: GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>x -}
145c2cdda8d15ff69aab1f23aea400a7
  alexScan565 :: GHC.Prim.Any
  {- Strictness: x -}
93e8ef8a9c2dd65a846f7589e75afed1
  alexScan57 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan410
                   Language.Fortran.Lexer.alexScan58) -}
2f903ec57ac6cf997e33dc6b22e53473
  alexScan58 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan407
                   Language.Fortran.Lexer.alexScan59) -}
8fb65572fa51beea7dd86640caa138f8
  alexScan59 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan404
                   Language.Fortran.Lexer.alexScan60) -}
ecb70f17f95edb4773751973a6cc1e8f
  alexScan6 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan552
                   Language.Fortran.Lexer.alexScan7) -}
84f887f85a0d5ec9c96625f84caa4e10
  alexScan60 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan402
                   Language.Fortran.Lexer.alexScan61) -}
eb9296f10c82c1d503b0e8080c407785
  alexScan61 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan399
                   Language.Fortran.Lexer.alexScan62) -}
7939507204c97306a3bb6170febc1f3a
  alexScan62 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan397
                   Language.Fortran.Lexer.alexScan63) -}
d82c6e1a83776458b6b52f5c49803fb7
  alexScan63 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan395
                   Language.Fortran.Lexer.alexScan64) -}
4d7bfb32205341cd3c55f7142fe14f53
  alexScan64 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan393
                   Language.Fortran.Lexer.alexScan65) -}
9dbce81c6baa54e422684273223ab130
  alexScan65 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan391
                   Language.Fortran.Lexer.alexScan66) -}
a9922e2a98492545050a12a277e39e7e
  alexScan66 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan389
                   Language.Fortran.Lexer.alexScan67) -}
ccfbbf4f3c6442a3858da2753b04b9ea
  alexScan67 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan387
                   Language.Fortran.Lexer.alexScan68) -}
337b9b4990103b3bdcd28b0306944f30
  alexScan68 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan385
                   Language.Fortran.Lexer.alexScan69) -}
9019e180338d956821c5434360958dc5
  alexScan69 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan383
                   Language.Fortran.Lexer.alexScan70) -}
c83d121ccaea779c0be551253844ed61
  alexScan7 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan549
                   Language.Fortran.Lexer.alexScan8) -}
5f0d07ffd40f77e16530e1d3d316ff54
  alexScan70 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan381
                   Language.Fortran.Lexer.alexScan71) -}
ac9ff947a50b40b4eaac6439d24c4231
  alexScan71 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan379
                   Language.Fortran.Lexer.alexScan72) -}
054232084db0679fc28fd2be2230ce8a
  alexScan72 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan377
                   Language.Fortran.Lexer.alexScan73) -}
64320516c2d16de9d84e2cd767078a23
  alexScan73 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan375
                   Language.Fortran.Lexer.alexScan74) -}
4dde1fd7b141fad379f7e9bc985b951a
  alexScan74 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan373
                   Language.Fortran.Lexer.alexScan75) -}
7a1eae2c4733f56f1a8fd34536db00e9
  alexScan75 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan371
                   Language.Fortran.Lexer.alexScan76) -}
4240de1b2d3b84f115c3937fc7c439c0
  alexScan76 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan369
                   Language.Fortran.Lexer.alexScan77) -}
d3803570094deb6a6d68aae8105e91b3
  alexScan77 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan367
                   Language.Fortran.Lexer.alexScan78) -}
792d988d398186c6d116481637ae2f93
  alexScan78 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan365
                   Language.Fortran.Lexer.alexScan79) -}
fa48d8698817da96a465e9a5d30942d4
  alexScan79 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan363
                   Language.Fortran.Lexer.alexScan80) -}
8f037672c9c161876a17f29c3e16e395
  alexScan8 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan546
                   Language.Fortran.Lexer.alexScan9) -}
5b830a5c7d590b63709448257c1cbed6
  alexScan80 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan361
                   Language.Fortran.Lexer.alexScan81) -}
27c960b238e45788cbde22c76c6d989f
  alexScan81 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan359
                   Language.Fortran.Lexer.alexScan82) -}
eed05f2beb65b31822c5338154c13a15
  alexScan82 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan357
                   Language.Fortran.Lexer.alexScan83) -}
407a33075aa9e51345829d1b63ad6ccb
  alexScan83 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan355
                   Language.Fortran.Lexer.alexScan84) -}
b889297d439bf226078cb11e9667fbaf
  alexScan84 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan353
                   Language.Fortran.Lexer.alexScan85) -}
74e37e7286a38e66e370d7cdf6517f34
  alexScan85 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan351
                   Language.Fortran.Lexer.alexScan86) -}
a3b31a7ddb39e5ca50ad6f17078ea6e2
  alexScan86 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan349
                   Language.Fortran.Lexer.alexScan87) -}
2970a45a2248025dc4c43a98a75aa31a
  alexScan87 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan347
                   Language.Fortran.Lexer.alexScan88) -}
79ed1706fc89485a117e798fec387fe2
  alexScan88 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan345
                   Language.Fortran.Lexer.alexScan89) -}
6337d74cacd22fbcce0c3fa039085560
  alexScan89 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan343
                   Language.Fortran.Lexer.alexScan90) -}
c0b9ffdc1bdc0e4364ced3272c59ead1
  alexScan9 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan543
                   Language.Fortran.Lexer.alexScan10) -}
0bfebdd3f71e7e179b0039bdb9ea071f
  alexScan90 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan153
                   Language.Fortran.Lexer.alexScan91) -}
fe556f2ec3c2a0cb15a82b41055f21d3
  alexScan91 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan151
                   Language.Fortran.Lexer.alexScan92) -}
51f4e38e6442687c15127fbfb7627d4f
  alexScan92 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan149
                   Language.Fortran.Lexer.alexScan93) -}
49cc9d6769485b903c59198c87db2075
  alexScan93 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan147
                   Language.Fortran.Lexer.alexScan94) -}
2c87a3eab2d02332b3f09f7dd660c28f
  alexScan94 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan145
                   Language.Fortran.Lexer.alexScan95) -}
4be74b81ed7e3d9f0aadd9ae1c7382cb
  alexScan95 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan143
                   Language.Fortran.Lexer.alexScan96) -}
98ca9fc77e012c7085cc8e674cd88a4a
  alexScan96 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan141
                   Language.Fortran.Lexer.alexScan97) -}
21d3a0d4116e7833388dccd60a0eeb8b
  alexScan97 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan139
                   Language.Fortran.Lexer.alexScan98) -}
c62d4944793e76cec62498bc8aa81542
  alexScan98 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan137
                   Language.Fortran.Lexer.alexScan99) -}
607be028e34c23fa6c54a38ef8d02b18
  alexScan99 ::
    [(GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Types.Int, GHC.Base.String -> Language.Fortran.Lexer.Token)
                   Language.Fortran.Lexer.alexScan135
                   Language.Fortran.Lexer.alexScan100) -}
bb96d5ffe43481d394c1109fb5e80e95
  alexScanTokens :: GHC.Base.String -> [Language.Fortran.Lexer.Token]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (str :: GHC.Base.String) ->
                 Language.Fortran.Lexer.alexScanTokens_go
                   (Language.Fortran.Lexer.alexScanTokens1,
                    GHC.Types.[] @ Language.Fortran.Lexer.Byte, str)) -}
13be844103aef1309234ce6288346f09
  alexScanTokens1 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '\n'#) -}
59420e53c1b720e6881b644fb1e79701
  alexScanTokens_go ::
    Language.Fortran.Lexer.AlexInput -> [Language.Fortran.Lexer.Token]
  {- Arity: 1, Strictness: <S(LSL),1*U(U,U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Language.Fortran.Lexer.AlexInput) ->
                 case w of ww { (,,) ww1 ww2 ww3 ->
                 Language.Fortran.Lexer.$wgo ww1 ww2 ww3 }) -}
91ba393e4a67ed859f7736856c6031e6
  alexScan_$scutOut ::
    [GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
06f98deced7d5011e2a5fcf08501c571
  alexScan_u :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 109#) -}
db342624a8208d092ca4fb4774c393aa
  alex_action_19 :: t -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ t (s :: t) -> Language.Fortran.Lexer.OpLT) -}
800de4ab8f486f3a344eec2bf70ff0a1
  alex_action_20 :: t -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ t (s :: t) -> Language.Fortran.Lexer.OpGT) -}
1c47ff921ffdd3a27f1da4545c2dd80d
  alex_action_43 :: t -> Language.Fortran.Lexer.Token
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ t (s :: t) -> Language.Fortran.Lexer.ContLineAlt) -}
74011347a66b71e921080a88d727c608
  alex_action_51 :: t -> Language.Fortran.Lexer.Token
  {- Arity: 1, Strictness: <L,A>m1,
     Unfolding: InlineRule (1, True, True)
                (\ @ t (s :: t) -> Language.Fortran.Lexer.alexScan400) -}
64c4b20bc85d3f513c62eac92602e632
  alex_action_52 :: [GHC.Types.Char] -> Language.Fortran.Lexer.Token
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (s :: [GHC.Types.Char]) ->
                 case GHC.List.elem
                        @ [GHC.Types.Char]
                        GHC.Classes.$fEq[]_$s$fEq[]1
                        (GHC.Base.map
                           @ GHC.Types.Char
                           @ GHC.Types.Char
                           GHC.Unicode.toLower
                           s)
                        Language.Fortran.Lexer.keywords of wild {
                   GHC.Types.False -> Language.Fortran.Lexer.ID s
                   GHC.Types.True
                   -> Language.Fortran.Lexer.Key
                        (GHC.Base.map
                           @ GHC.Types.Char
                           @ GHC.Types.Char
                           GHC.Unicode.toLower
                           s) }) -}
521549f0245fb5c698c2aacdd2ad84c2
  alex_actions ::
    GHC.Arr.Array
      GHC.Types.Int (GHC.Base.String -> Language.Fortran.Lexer.Token)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Arr.Array
                             GHC.Types.Int (GHC.Base.String -> Language.Fortran.Lexer.Token))
                        Language.Fortran.Lexer.alexScan2 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
1c231e7f8eeab686050d9ccdd7cd7c74
  keywords :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Language.Fortran.Lexer.alexScan341
                   Language.Fortran.Lexer.alexScan154) -}
6dcc1f9bf736524565821beff049df49
  lexer ::
    (Language.Fortran.Lexer.Token -> Language.Haskell.ParseMonad.P a)
    -> Language.Haskell.ParseMonad.P a
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Language.Fortran.Lexer.lexer1
                  `cast`
                (forall (a :: <*>_N).
                 <Language.Fortran.Lexer.Token -> Language.Haskell.ParseMonad.P a>_R
                 ->_R Sym (Language.Haskell.ParseMonad.N:P[0] <a>_R)) -}
1a5dfe8663af740bbee8175a92791689
  lexer' ::
    Language.Haskell.ParseMonad.Lex a Language.Fortran.Lexer.Token
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Language.Fortran.Lexer.lexer1
                  `cast`
                (forall (a :: <*>_N).
                 Trans
                     (<Language.Fortran.Lexer.Token
                       -> Language.Haskell.ParseMonad.P a>_R
                      ->_R Sym (Language.Haskell.ParseMonad.N:P[0] <a>_R))
                     (Sym (Language.Haskell.ParseMonad.N:Lex[0]
                               <a>_R <Language.Fortran.Lexer.Token>_R))) -}
dcdb57ca29b00d2ff5e58653dcf59651
  lexer1 ::
    (Language.Fortran.Lexer.Token -> Language.Haskell.ParseMonad.P a)
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> Language.Haskell.Syntax.SrcLoc
    -> Language.Haskell.ParseMonad.ParseState
    -> Language.Haskell.ParseMonad.ParseMode
    -> Language.Haskell.ParseMonad.ParseStatus a
  {- Arity: 2, Strictness: <L,C(U)><L,U> -}
instance GHC.Classes.Eq [Language.Fortran.Lexer.Token]
  = Language.Fortran.Lexer.$fEqToken
instance GHC.Show.Show [Language.Fortran.Lexer.Token]
  = Language.Fortran.Lexer.$fShowToken
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

