
==================== FINAL INTERFACE ====================
2018-12-03 18:55:21.339684 UTC

interface main@main:Main 8002
  interface hash: 6465b331b472fec5b4a9cc457e9ff4ad
  ABI hash: 84824942c581a3df8f6b8a673dec1d6d
  export-list hash: 8f0e9538b9500f5098ab21f159046b75
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 4fcdfa4bbf5ce305e771d0fce73890ef
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.addArg
  Main.combineAnnotationListings_map
  Main.cppDefineFlag
  Main.cppExcludeFlag
  Main.filenameFlag
  Main.fixedFormFlag
  Main.flags
  Main.gatherFlag
  Main.hl
  Main.ioRWRoutineFlag
  Main.ioReadRoutineFlag
  Main.ioWriteRoutineFlag
  Main.loopFusionBoundFlag
  Main.main
  Main.mainFileFlag
  Main.noLoopFusionFlag
  Main.outDirectoryFlag
  Main.platFlag
  Main.processArgs
  Main.processArgs'
  Main.rule
  Main.usageError
  Main.verboseFlag
module dependencies: BufferTransferAnalysis CodeEmitter
                     CodeEmitterUtils CombineKernels ConstantFolding
                     F95IntrinsicFunctions FortranGenerator FortranSynthesiser
                     Language.Fortran Language.Fortran.Lexer Language.Fortran.Parser
                     Language.Fortran.PreProcess LanguageFortranTools LoopAnalysis
                     MiniPP Platform PreProcessor SubroutineTable Transformer TupleTable
                     VarAccessAnalysis VarDependencyAnalysis Warning
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      filepath-1.4.1.1@filepath-1.4.1.1 ghc-prim-0.5.0.0
                      haskell-src-1.0.2.0@haskell-src-1.0.2.0-3zoaErItXGVA1GHC7t3Glx
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw
                      process-1.4.3.0@process-1.4.3.0
                      syb-0.6@syb-0.6-IcoSwlPi2Nx4zSqMmorFPS
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      unix-2.7.2.1@unix-2.7.2.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         syb-0.6@syb-0.6-IcoSwlPi2Nx4zSqMmorFPS:Data.Generics.Instances
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Traversable 556020d7cf3c4a34a774600512918a37
import  -/  base-4.9.1.0:Data.Tuple 7dc4bbb45d2e69c991ffac438beeca11
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.Environment 08cb808e8e6a7821e6f8cfa76a977431
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  base-4.9.1.0:Text.Read 75c59863e882ebaec4532e9465e2ee9b
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 20d4ffbee41965d03d6a989425473dc4
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base d432f6875983131473086af8cb290590
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  BufferTransferAnalysis e8e3977d7b8c803e6f7edec72c62228d
  exports: 02240d1d3fc82640d6cb57182c119895
  optimiseBufferTransfers 404a3c583e8ca468f4cc33e16fad8ff7
  replaceSubroutineAppearances ebf7efe4b897b548b0dd7f5ec61ec94d
import  -/  CodeEmitter cd75236b323cbcd2c9ea3adc490d930c
  exports: 9de3cbbde93f0723188cf4096e7fc461
  emit ecb2432cea33ce250faac0332f508349
import  -/  Language.Fortran c957d8f93581b3ce2cc521df25110d11
  exports: cb4e2f808f933bd0493dcd95204741d0
  VarName 64af05f1c71bcd1dfd571ca0d5218f1b
import  -/  LanguageFortranTools 7890a5e96ab51325aa3603dbd4691bf4
  exports: 83b35210801e0c6fe3fd2a2c2ff1ecd0
  appendToMap dc2f60dee1c2c768663fa5922bc11748
  compilerName af3b337e7deea7084cf6d3ad27314e83
  parseFile 2e680589aff909c2acbac07d296fd3f8
import  -/  MiniPP f16ed7e5a39853044388f8480999b1a1
  exports: 7578fb79964ca180f8c5942d9032d1f5
  miniPPProgUnit fb5c50b2525b278402872210a07a271b
import  -/  Platform 68ee714015ddeec7ef5b38f1b1229aea
  exports: faf9de2f15d0e1cf9065a7f78566814c
  GPU 7d2a1930399c599b55b38ea18c4a3687
  Platform 06b607c6896cb24eacacbc624d07dfa1
import  -/  SubroutineTable 478a2d1f7dd1c241949a1b63a72c1af8
  exports: 36e92c4145b6d54c4036b21148e09ac1
  MkSubRec a39ac213c8876cd1d6e64acd45b9c276
  constructSubroutineTable fe292a98c89eb11a403c76e2f0d76578
  extractSubroutineArgumentTranslationMaps bd7443fcaf85bfe63d459a74ab391dcb
  subAst ffc672553e5614ff97f91fc9495e2abb
import  -/  Transformer 7668e76b7028b135f1aaa9987edbf5e4
  exports: fe48ab713cb2e662d3271549f051b5be
  combineKernelProgUnit_foldl d44e345a06c7c88486c5fc10a6ef5b63
  paralleliseProgUnit_foldl 326f0936e2c5107bc446354a4c24f95c
import  -/  syb-0.6@syb-0.6-IcoSwlPi2Nx4zSqMmorFPS:Data.Generics ea99a8062a9608312218ffd7309b5391
4319cb642fd74aeda306d24acbced801
  $sfindWithDefault1 ::
    a -> GHC.Base.String -> Data.Map.Base.Map GHC.Base.String a -> a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U><S,1*U><S,1*U> -}
f1b47f5ac6186f2473ecf6238777b7e3
  $sinsert_$sgo10 ::
    GHC.Base.String
    -> a1
    -> Data.Map.Base.Map GHC.Base.String a1
    -> Data.Map.Base.Map GHC.Base.String a1
  {- Arity: 3, Strictness: <S,1*U><L,U><S,1*U> -}
436324eb6f660f18b40152f48d7da644
  $slookup1 ::
    [GHC.Types.Char]
    -> Data.Map.Base.Map [GHC.Types.Char] a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
b0e25ca627fed7ab0a207e1c29defc48
  $wcombineAnnotationListings_map ::
    [(GHC.Base.String, GHC.Base.String)]
    -> GHC.Base.String
    -> GHC.Base.String
    -> (GHC.Base.String, GHC.Base.String, GHC.Base.String)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ (w :: [(GHC.Base.String, GHC.Base.String)])
                   (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String) ->
                 letrec {
                   go5 :: [(GHC.Base.String, [GHC.Types.Char])]
                          -> (GHC.Base.String, GHC.Base.String, [GHC.Types.Char])
                          -> (GHC.Base.String, GHC.Base.String, [GHC.Types.Char])
                     {- Arity: 2, Strictness: <S,1*U><L,1*U(U,U,U)> -}
                   = \ (ds :: [(GHC.Base.String, [GHC.Types.Char])])
                       (eta :: (GHC.Base.String, GHC.Base.String, [GHC.Types.Char])) ->
                     case ds of wild {
                       [] -> eta
                       : y ys
                       -> go5
                            ys
                            (case y of wild1 { (,) filename anno ->
                             case GHC.Base.eqString filename ww of wild2 {
                               GHC.Types.False -> eta
                               GHC.Types.True -> (filename, ww1, anno) } }) }
                 } in
                 go5 w (ww, ww1, GHC.Types.[] @ GHC.Types.Char)) -}
de8f9d2b7f3ead29a2f9a4adc1d485ce
  addArg ::
    Data.Map.Base.Map GHC.Base.String [GHC.Base.String]
    -> GHC.Base.String
    -> GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String [GHC.Base.String]
  {- Arity: 3, Strictness: <S,U><S,U><L,U>,
     Unfolding: (\ (argMap :: Data.Map.Base.Map
                                GHC.Base.String [GHC.Base.String])
                   (flag :: GHC.Base.String)
                   (value :: GHC.Base.String) ->
                 Main.$sinsert_$sgo10
                   @ [GHC.Base.String]
                   flag
                   (GHC.Base.++
                      @ [GHC.Types.Char]
                      (Main.$sfindWithDefault1
                         @ [GHC.Base.String]
                         (GHC.Types.[] @ GHC.Base.String)
                         flag
                         argMap)
                      (GHC.Types.:
                         @ [GHC.Types.Char]
                         value
                         (GHC.Types.[] @ [GHC.Types.Char])))
                   argMap) -}
92810a5770f7bb39b4280d32d9c0a7b7
  combineAnnotationListings_map ::
    [(GHC.Base.String, GHC.Base.String)]
    -> (GHC.Base.String, GHC.Base.String)
    -> (GHC.Base.String, GHC.Base.String, GHC.Base.String)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U(U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: [(GHC.Base.String, GHC.Base.String)])
                   (w1 :: (GHC.Base.String, GHC.Base.String)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 Main.$wcombineAnnotationListings_map w ww1 ww2 }) -}
6682d9b43fe1d774aeebf8c930f6608d
  cppDefineFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-D"#) -}
46d68d71213bfb38343e8dc0b744408b
  cppExcludeFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-X"#) -}
994798c14e2789e1dd26ff0a42923f41
  filenameFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-modules"#) -}
8c9a82b2960f6d0c544223eec63d5263
  fixedFormFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-ffixed-form"#) -}
c618d98a5dc98aede94c5de8068f3c5c
  flags :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.filenameFlag
                   Main.flags1) -}
d30266f15ade4ab42aeafbb9f6eef0b7
  flags1 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.outDirectoryFlag
                   Main.flags2) -}
941e0cdfdecad5f90e0bec903dea0cdd
  flags10 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.fixedFormFlag
                   Main.flags11) -}
d6d1ef90e0bedb47979b66fb51785f30
  flags11 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.noLoopFusionFlag
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
87fc110a817dbe16e6e8314f9695a5c3
  flags2 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.loopFusionBoundFlag
                   Main.flags3) -}
098043bd9a498a1e331ace9c4a6414a7
  flags3 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.platFlag
                   Main.flags4) -}
ea13e87fb55aa80fb937652f9b08fdd8
  flags4 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.cppDefineFlag
                   Main.flags5) -}
937c59debb91ff705a23ef2e6392195c
  flags5 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.cppExcludeFlag
                   Main.flags6) -}
dda5ba081e44bccad53d059781f77e3b
  flags6 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.verboseFlag
                   Main.flags7) -}
a3807583dcf33436ccfa1b8635d02cab
  flags7 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.mainFileFlag
                   Main.flags8) -}
abe412d03a4f06b67ea0ca1d276c3722
  flags8 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.ioWriteRoutineFlag
                   Main.flags9) -}
32ab0b54ec0e34aaf3bcd8a255e11e6b
  flags9 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.ioReadRoutineFlag
                   Main.flags10) -}
a82585646b078bcde9ae5a7922038a0f
  gatherFlag ::
    GHC.Base.String
    -> [GHC.Base.String]
    -> [GHC.Base.String]
    -> Data.Map.Base.Map GHC.Base.String [GHC.Base.String]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><L,U> -}
0b762d46d291f30b39ca71e712834dd9
  gatherFlag_$sgatherFlag ::
    [[GHC.Types.Char]]
    -> [GHC.Types.Char]
    -> [[GHC.Types.Char]]
    -> [GHC.Types.Char]
    -> Data.Map.Base.Map GHC.Base.String [GHC.Base.String]
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,1*U> -}
ba42da8f4a22824e38bba884756a9c5f
  hl :: [GHC.Types.Char]
  {- Unfolding: (Main.rule Main.hl1) -}
57e00cf1c9b9b7e2dcc659b3f9a39b94
  hl1 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '-'#) -}
9e978751d6165f371d767638796e704e
  ioRWRoutineFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-iorw"#) -}
7e78e262b515d9d59850a261aa110156
  ioReadRoutineFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-ioread"#) -}
53e6514f667f76d6c8388491ca7acd24
  ioWriteRoutineFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-iowrite"#) -}
19d06613441737646b9bd6a3512df19b
  loopFusionBoundFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-lfb"#) -}
41a7f0061318efcdbd9eb7379d2a3706
  main :: GHC.Types.IO [()]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <[()]>_R)) -}
b6f34eaf481a29b0916246ce5483d6dd
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [()] #)
  {- Arity: 1, Strictness: <S,U> -}
daaffb24f7b100816f293dd2ff8b4989
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [()] #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ [()]
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <[()]>_R))) -}
71ed66c78499cd2daef3c1c3267e777b
  mainFileFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-main"#) -}
a072adf6aa1c7c4f31fe2f9bc6ee54bd
  noLoopFusionFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-N"#) -}
236474336ec04c68efcee0c7f2e57dba
  outDirectoryFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-out"#) -}
2131afc3673194d4ac55a19f46c9dd71
  platFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-plat"#) -}
72b99affbbe1979c8b9855ef11c6b6da
  processArgs ::
    [GHC.Base.String]
    -> Data.Map.Base.Map GHC.Base.String [GHC.Base.String]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [GHC.Base.String]) ->
                 case ds of wild {
                   []
                   -> Main.usageError
                        @ (Data.Map.Base.Map GHC.Base.String [GHC.Base.String])
                   : flag ds1
                   -> case ds1 of wild1 {
                        [] -> Main.processArgs1
                        : arg args
                        -> case GHC.List.elem
                                  @ GHC.Base.String
                                  GHC.Classes.$fEq[]_$s$fEq[]1
                                  flag
                                  Main.flags of wild2 {
                             GHC.Types.False
                             -> Main.gatherFlag_$sgatherFlag
                                  (GHC.Types.[] @ GHC.Base.String)
                                  flag
                                  wild1
                                  Main.filenameFlag
                             GHC.Types.True
                             -> Main.gatherFlag_$sgatherFlag
                                  (GHC.Types.[] @ GHC.Base.String)
                                  arg
                                  args
                                  flag } } }) -}
15eeb95259d8db8d26255e8d02bfca5f
  processArgs' ::
    [GHC.Base.String]
    -> Data.Map.Base.Map GHC.Base.String [GHC.Base.String]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [GHC.Base.String]) ->
                 case ds of wild {
                   [] -> Data.Map.Base.Tip @ GHC.Base.String @ [GHC.Base.String]
                   : flag ds1
                   -> case ds1 of wild1 {
                        []
                        -> Main.$sinsert_$sgo10
                             @ [GHC.Base.String]
                             flag
                             (GHC.Types.[] @ GHC.Base.String)
                             (Data.Map.Base.Tip @ GHC.Base.String @ [GHC.Base.String])
                        : arg args
                        -> case GHC.List.elem
                                  @ GHC.Base.String
                                  GHC.Classes.$fEq[]_$s$fEq[]1
                                  flag
                                  Main.flags of wild2 {
                             GHC.Types.False -> Main.processArgs'1 flag
                             GHC.Types.True
                             -> Main.gatherFlag_$sgatherFlag
                                  (GHC.Types.[] @ GHC.Base.String)
                                  arg
                                  args
                                  flag } } }) -}
ea19acb5a3285d37bbc6901419435633
  processArgs'1 ::
    GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String [GHC.Base.String]
  {- Arity: 1, Strictness: <L,U>x -}
40f167fcb93b2bad506e13db97389279
  processArgs'_$sprocessArgs' ::
    [GHC.Types.Char]
    -> [[GHC.Types.Char]]
    -> Data.Map.Base.Map GHC.Base.String [GHC.Base.String]
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (sc :: [GHC.Types.Char])
                   (sc1 :: [[GHC.Types.Char]]) ->
                 case sc1 of wild {
                   []
                   -> Main.$sinsert_$sgo10
                        @ [GHC.Base.String]
                        sc
                        (GHC.Types.[] @ GHC.Base.String)
                        (Data.Map.Base.Tip @ GHC.Base.String @ [GHC.Base.String])
                   : arg args
                   -> case GHC.List.elem
                             @ GHC.Base.String
                             GHC.Classes.$fEq[]_$s$fEq[]1
                             sc
                             Main.flags of wild1 {
                        GHC.Types.False -> Main.processArgs'1 sc
                        GHC.Types.True
                        -> Main.gatherFlag_$sgatherFlag
                             (GHC.Types.[] @ GHC.Base.String)
                             arg
                             args
                             sc } }) -}
66cb6e6afa554ebfed746c02ae9b3d0e
  processArgs1 :: Data.Map.Base.Map GHC.Base.String [GHC.Base.String]
  {- Strictness: x -}
c93e5ff5c853e166563ab83d32b262f7
  rule :: GHC.Types.Char -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (char :: GHC.Types.Char) ->
                 GHC.CString.unpackAppendCString#
                   "\n"#
                   (let {
                      lvl41 :: [GHC.Types.Char]
                      = GHC.Types.: @ GHC.Types.Char char Main.rule_n
                    } in
                    letrec {
                      $wxs :: GHC.Prim.Int# -> [GHC.Types.Char]
                        {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
                      = \ (ww :: GHC.Prim.Int#) ->
                        case ww of ds1 {
                          DEFAULT
                          -> GHC.Types.: @ GHC.Types.Char char ($wxs (GHC.Prim.-# ds1 1#))
                          1# -> lvl41 }
                    } in
                    $wxs 80#)) -}
8aff5333abaadf6ff30b53d224458c3c
  rule_n :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\n"#) -}
e62a7fcf7e354e7c17688d5a97eb4e2e
  usageError :: a
  {- Strictness: x -}
657dbb4c88c13ade1d9a9a2f0b2c9c6a
  verboseFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-v"#) -}
"SC:gatherFlag1" [ALWAYS] forall (sc :: [[GHC.Types.Char]])
                                 (sc1 :: [GHC.Types.Char])
                                 (sc2 :: [[GHC.Types.Char]])
                                 (sc3 :: [GHC.Types.Char])
  Main.gatherFlag sc3 (GHC.Types.: @ GHC.Base.String sc1 sc2) sc
  = Main.gatherFlag_$sgatherFlag sc sc1 sc2 sc3
"SC:processArgs'1" [ALWAYS] forall (sc :: [GHC.Types.Char])
                                   (sc1 :: [[GHC.Types.Char]])
  Main.processArgs' (GHC.Types.: @ GHC.Base.String sc sc1)
  = Main.processArgs'_$sprocessArgs' sc sc1
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

