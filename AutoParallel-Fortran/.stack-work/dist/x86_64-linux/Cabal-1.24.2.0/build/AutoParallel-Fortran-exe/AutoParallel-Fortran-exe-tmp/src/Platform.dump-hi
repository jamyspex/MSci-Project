
==================== FINAL INTERFACE ====================
2018-10-08 15:32:22.874534 UTC

interface main@main:Platform 8002
  interface hash: 9ff12b34f4abe98085b5f66116d5f3d2
  ABI hash: 68ee714015ddeec7ef5b38f1b1229aea
  export-list hash: faf9de2f15d0e1cf9065a7f78566814c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 7c02f8b77a7db746ad4b6beb3be70535
  sig of: Nothing
  used TH splices: False
  where
exports:
  Platform.Platform{Platform.CPU Platform.FPGA Platform.GPU Platform.MIC}
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Read b6821365d2d5fa2155c9e910160e7f57
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
06b607c6896cb24eacacbc624d07dfa1
  $fEqPlatform :: GHC.Classes.Eq Platform.Platform
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Platform.Platform
                  Platform.$fEqPlatform_$c==
                  Platform.$fEqPlatform_$c/= -}
06b607c6896cb24eacacbc624d07dfa1
  $fEqPlatform_$c/= ::
    Platform.Platform -> Platform.Platform -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Platform.Platform) (b :: Platform.Platform) ->
                 case a of wild {
                   Platform.CPU
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Platform.CPU -> GHC.Types.False }
                   Platform.MIC
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Platform.MIC -> GHC.Types.False }
                   Platform.GPU
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Platform.GPU -> GHC.Types.False }
                   Platform.FPGA
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Platform.FPGA -> GHC.Types.False } }) -}
06b607c6896cb24eacacbc624d07dfa1
  $fEqPlatform_$c== ::
    Platform.Platform -> Platform.Platform -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Platform.Platform)
                   (ds1 :: Platform.Platform) ->
                 case ds of wild {
                   Platform.CPU
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Platform.CPU -> GHC.Types.True }
                   Platform.MIC
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Platform.MIC -> GHC.Types.True }
                   Platform.GPU
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Platform.GPU -> GHC.Types.True }
                   Platform.FPGA
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Platform.FPGA -> GHC.Types.True } }) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform :: GHC.Read.Read Platform.Platform
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Platform.Platform
                  Platform.$fReadPlatform_$creadsPrec
                  Platform.$fReadPlatform_$creadList
                  Platform.$fReadPlatform_$creadPrec
                  Platform.$fReadPlatform_$creadListPrec -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Platform.Platform] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Platform.Platform]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.list1
                   @ Platform.Platform
                   Platform.$fReadPlatform2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Platform.Platform>_R))
                   eta
                   @ b
                   eta1) -}
ae43825751d02625d9c52b32473f1394
  $fReadPlatform10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FPGA"#) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform11 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec Platform.Platform)
  {- Strictness: m,
     Unfolding: ((Platform.$fReadPlatform13,
                  Platform.$fReadPlatform12
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Platform.Platform>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Platform.Platform>_R))))) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform12 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Platform.Platform -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Platform.Platform -> Text.ParserCombinators.ReadP.P b) ->
                 eta Platform.GPU) -}
62abe76bf152320297b8b3847983970f
  $fReadPlatform13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GPU"#) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform14 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec Platform.Platform)
  {- Strictness: m,
     Unfolding: ((Platform.$fReadPlatform16,
                  Platform.$fReadPlatform15
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Platform.Platform>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Platform.Platform>_R))))) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform15 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Platform.Platform -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Platform.Platform -> Text.ParserCombinators.ReadP.P b) ->
                 eta Platform.MIC) -}
daf49ddfdc6f4f493f80cc21fba70b61
  $fReadPlatform16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MIC"#) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform17 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec Platform.Platform)
  {- Strictness: m,
     Unfolding: ((Platform.$fReadPlatform19,
                  Platform.$fReadPlatform18
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Platform.Platform>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Platform.Platform>_R))))) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform18 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Platform.Platform -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Platform.Platform -> Text.ParserCombinators.ReadP.P b) ->
                 eta Platform.CPU) -}
9c4eca437571aa52d550c098ac977c44
  $fReadPlatform19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CPU"#) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Platform.Platform
  {- Arity: 1,
     Unfolding: (GHC.Read.parens1
                   @ Platform.Platform
                   Platform.$fReadPlatform3
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Platform.Platform>_R))) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform20 ::
    Text.ParserCombinators.ReadP.P [Platform.Platform]
  {- Unfolding: (GHC.Read.list1
                   @ Platform.Platform
                   Platform.$fReadPlatform2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Platform.Platform>_R))
                   GHC.Read.$fRead()5
                   @ [Platform.Platform]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Platform.Platform])) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Platform.Platform
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec) ->
                 GHC.Read.choose2
                   @ Platform.Platform
                   Platform.$fReadPlatform4
                   eta) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec Platform.Platform)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec Platform.Platform)
                   Platform.$fReadPlatform17
                   Platform.$fReadPlatform5) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec Platform.Platform)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec Platform.Platform)
                   Platform.$fReadPlatform14
                   Platform.$fReadPlatform6) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform6 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec Platform.Platform)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec Platform.Platform)
                   Platform.$fReadPlatform11
                   Platform.$fReadPlatform7) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform7 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec Platform.Platform)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec Platform.Platform)
                   Platform.$fReadPlatform8
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec Platform.Platform))) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform8 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec Platform.Platform)
  {- Strictness: m,
     Unfolding: ((Platform.$fReadPlatform10,
                  Platform.$fReadPlatform9
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Platform.Platform>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Platform.Platform>_R))))) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform9 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Platform.Platform -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Platform.Platform -> Text.ParserCombinators.ReadP.P b) ->
                 eta Platform.FPGA) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Platform.Platform]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Platform.Platform]
                   Platform.$fReadPlatform20) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Platform.Platform]
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Platform.$fReadPlatform1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Platform.Platform]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Platform.Platform]>_R))) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec Platform.Platform
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Platform.$fReadPlatform2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Platform.Platform>_R)) -}
06b607c6896cb24eacacbc624d07dfa1
  $fReadPlatform_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS Platform.Platform
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Platform.Platform
                   ((GHC.Read.parens1
                       @ Platform.Platform
                       Platform.$fReadPlatform3
                         `cast`
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Platform.Platform>_R))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <Platform.Platform>_R)
                      @ Platform.Platform
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Platform.Platform))) -}
06b607c6896cb24eacacbc624d07dfa1
  $fShowPlatform :: GHC.Show.Show Platform.Platform
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Platform.Platform
                  Platform.$fShowPlatform_$cshowsPrec
                  Platform.$fShowPlatform_$cshow
                  Platform.$fShowPlatform_$cshowList -}
06b607c6896cb24eacacbc624d07dfa1
  $fShowPlatform_$cshow :: Platform.Platform -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Platform.Platform) ->
                 Platform.$fShowPlatform_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
06b607c6896cb24eacacbc624d07dfa1
  $fShowPlatform_$cshowList :: [Platform.Platform] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Platform.Platform
                   Platform.$w$cshowsPrec) -}
06b607c6896cb24eacacbc624d07dfa1
  $fShowPlatform_$cshowsPrec ::
    GHC.Types.Int -> Platform.Platform -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Platform.Platform)
                   (w2 :: GHC.Base.String) ->
                 Platform.$w$cshowsPrec w1 w2) -}
54883749592945659a08e16a5225d8b6
  $tc'CPU :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11333841363546855202##
                   16962240986800216398##
                   Platform.$trModule
                   Platform.$tc'CPU1) -}
4f8e056e40fb9f50e54b30ab3221f60d
  $tc'CPU1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CPU"#) -}
257885362662154f40545dca734669c2
  $tc'FPGA :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11332695850426990737##
                   4601491391477036728##
                   Platform.$trModule
                   Platform.$tc'FPGA1) -}
294c028b1e7b1da6927eb2f667ef5e3c
  $tc'FPGA1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FPGA"#) -}
d9e07d959ea2bd9be0dc3e3872851cd5
  $tc'GPU :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1980281711016137696##
                   8477780658434630675##
                   Platform.$trModule
                   Platform.$tc'GPU1) -}
a753c7d29b250e7b24152767aaad58bd
  $tc'GPU1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GPU"#) -}
9af93a0217da17662039dc3ac68a359c
  $tc'MIC :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6658184114992161370##
                   4965448075497179014##
                   Platform.$trModule
                   Platform.$tc'MIC1) -}
d143fd70fa719f53dde0ceec204cf410
  $tc'MIC1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MIC"#) -}
16e803c206e05c39824590b62f9614e8
  $tcPlatform :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4989905125559087048##
                   671257139266502600##
                   Platform.$trModule
                   Platform.$trModule1) -}
b47849fc924d15409e90210d234517cc
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Platform.$trModule2
                   Platform.$trModule1) -}
3b7aac66b3ee499f271061e27d61cb4c
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Platform"#) -}
7226845a2fb9227de8c500d0f992304b
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
06b607c6896cb24eacacbc624d07dfa1
  $w$cshowsPrec ::
    Platform.Platform -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Platform.Platform) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Platform.CPU
                   -> GHC.Base.++ @ GHC.Types.Char Platform.$fReadPlatform19 w1
                   Platform.MIC
                   -> GHC.Base.++ @ GHC.Types.Char Platform.$fReadPlatform16 w1
                   Platform.GPU
                   -> GHC.Base.++ @ GHC.Types.Char Platform.$fReadPlatform13 w1
                   Platform.FPGA
                   -> GHC.Base.++ @ GHC.Types.Char Platform.$fReadPlatform10 w1 }) -}
06b607c6896cb24eacacbc624d07dfa1
  data Platform = CPU | MIC | GPU | FPGA
instance [safe] GHC.Classes.Eq [Platform.Platform]
  = Platform.$fEqPlatform
instance [safe] GHC.Read.Read [Platform.Platform]
  = Platform.$fReadPlatform
instance [safe] GHC.Show.Show [Platform.Platform]
  = Platform.$fShowPlatform
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

