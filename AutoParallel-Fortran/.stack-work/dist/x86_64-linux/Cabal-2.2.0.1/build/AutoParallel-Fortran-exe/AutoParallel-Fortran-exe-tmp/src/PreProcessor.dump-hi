
==================== FINAL INTERFACE ====================
2018-11-16 12:45:12.891334678 UTC

interface main:PreProcessor 8043
  interface hash: e71673c6e37eeba76e1c3d619860abf8
  ABI hash: 41752a7f7f42cfa80c5ac68418b12326
  export-list hash: 55307c0ab844f5316868ba7013faf129
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 7853c119b27f3f568e863cba4679c19c
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  PreProcessor.preProcess
  PreProcessor.removeBlankLines
module dependencies: Warning
package dependencies: array-0.5.2.0 base-4.11.1.0
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Set.Internal
import  -/  base-4.11.1.0:Data.Char 3e89818e2b8ef1a2cc5393163484da72
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:GHC.Unicode 8234c40b59f035e845832a42e8725a00
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Map f51b9cf04edd738eb6d014be576b3403
import  -/  containers-0.5.11.0:Data.Map.Internal e02d23495520de11b8e9f3c9c93a4d11
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  Warning b5ec059e95d91647264308e84d2ed3ea
  exports: d9b5419f40dd7650497f479a7fe0214a
51a08a0c897acda8d1f9456261aee51b
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   PreProcessor.$trModule3
                   PreProcessor.$trModule1) -}
d8fb46b8374ecb3058487846e0a62e64
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS PreProcessor.$trModule2) -}
23d3745df07a9df7e690373ad6db5539
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PreProcessor"#) -}
b054a0b7b7f7e4f608e91abc99552b08
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS PreProcessor.$trModule4) -}
660c35fa58a8c336c8bbd6837427d83c
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
0d97b5fe495481538707a75db097befb
  $w$sgo13 ::
    GHC.Types.Int
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Internal.Map GHC.Types.Int a1
    -> Data.Map.Internal.Map GHC.Types.Int a1
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,1*U>, Inline: [0] -}
cd974b5bebda2d8db09fd78795c7b426
  $wpreProcess ::
    GHC.Types.Bool
    -> [GHC.Base.String]
    -> GHC.Base.String
    -> (# GHC.Base.String,
          Data.Map.Internal.Map GHC.Types.Int [GHC.Base.String] #)
  {- Arity: 3, Strictness: <S,1*U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Types.Bool)
                   (w1 :: [GHC.Base.String])
                   (w2 :: GHC.Base.String) ->
                 case w of wild {
                   GHC.Types.False
                   -> PreProcessor.$wreplaceIfDefByLabel
                        w1
                        (Data.OldList.unlines
                           (GHC.List.filter
                              @ [GHC.Types.Char]
                              PreProcessor.preProcess23
                              (Data.OldList.lines
                                 (PreProcessor.caseInsensitive_strReplace
                                    PreProcessor.preProcess21
                                    PreProcessor.preProcess19
                                    (PreProcessor.caseInsensitive_strReplace
                                       PreProcessor.preProcess17
                                       PreProcessor.preProcess15
                                       (PreProcessor.caseInsensitive_strReplace
                                          PreProcessor.preProcess13
                                          PreProcessor.preProcess11
                                          (PreProcessor.caseInsensitive_strReplace
                                             PreProcessor.preProcess9
                                             PreProcessor.preProcess11
                                             (PreProcessor.caseInsensitive_strReplace
                                                PreProcessor.preProcess7
                                                PreProcessor.preProcess5
                                                (PreProcessor.caseInsensitive_strReplace
                                                   PreProcessor.preProcess3
                                                   PreProcessor.preProcess1
                                                   w2)))))))))
                   GHC.Types.True
                   -> PreProcessor.$wreplaceIfDefByLabel
                        w1
                        (Data.OldList.unlines
                           (GHC.List.filter
                              @ [GHC.Types.Char]
                              PreProcessor.preProcess23
                              (Data.OldList.lines
                                 (PreProcessor.caseInsensitive_strReplace
                                    PreProcessor.preProcess21
                                    PreProcessor.preProcess19
                                    (PreProcessor.caseInsensitive_strReplace
                                       PreProcessor.preProcess17
                                       PreProcessor.preProcess15
                                       (PreProcessor.caseInsensitive_strReplace
                                          PreProcessor.preProcess13
                                          PreProcessor.preProcess11
                                          (PreProcessor.caseInsensitive_strReplace
                                             PreProcessor.preProcess9
                                             PreProcessor.preProcess11
                                             (PreProcessor.caseInsensitive_strReplace
                                                PreProcessor.preProcess7
                                                PreProcessor.preProcess5
                                                (PreProcessor.caseInsensitive_strReplace
                                                   PreProcessor.preProcess3
                                                   PreProcessor.preProcess1
                                                   (PreProcessor.preProcess_go
                                                      (Data.OldList.lines w2)
                                                      (GHC.Types.[]
                                                         @ GHC.Types.Char))))))))))) }) -}
bfd60f8951647e1beaf1f6c01d3c494b
  $wreplaceIfDefByLabel ::
    [GHC.Base.String]
    -> GHC.Base.String
    -> (# GHC.Base.String,
          Data.Map.Internal.Map GHC.Types.Int [GHC.Base.String] #)
  {- Arity: 2, Strictness: <L,U><L,1*U>, Inline: [0] -}
08059219c3897bb2a2300b5a53fd153c
  caseInsensitive_strReplace ::
    [GHC.Types.Char]
    -> [GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 3, Strictness: <S,U><L,U><L,U> -}
a51f4272d7304e45cccd40bb54b195d2
  preProcess ::
    GHC.Types.Bool
    -> [GHC.Base.String]
    -> GHC.Base.String
    -> (GHC.Base.String,
        Data.Map.Internal.Map GHC.Types.Int [GHC.Base.String])
  {- Arity: 3, Strictness: <S,1*U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Bool)
                   (w1 :: [GHC.Base.String])
                   (w2 :: GHC.Base.String) ->
                 case PreProcessor.$wpreProcess w w1 w2 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
b9ce0c72dbfe503d4e02eed2dfe61612
  preProcess1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PreProcessor.preProcess2) -}
129ab30a0323509f3a19abc15b47f5f5
  preProcess10 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\n\
                 \contains "#) -}
dbf02fde484d6cfd0e9ae6c9c0651dca
  preProcess11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PreProcessor.preProcess12) -}
7d5c9c6c8f7fe164bdaac58188fe5891
  preProcess12 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\n\
                 \ contains "#) -}
0f9faef7fb5f4c07d309f9628859d496
  preProcess13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PreProcessor.preProcess14) -}
508849bf068cba3d489902d284ff3eeb
  preProcess14 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\n\
                 \contains"#) -}
05cd3af704df184c06144caa7b8cfcb9
  preProcess15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PreProcessor.preProcess16) -}
212782324c84b443167bd064777ba5f3
  preProcess16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" .or. "#) -}
77a7877c106e5e1e36ff119ad9dea75d
  preProcess17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PreProcessor.preProcess18) -}
b2cae4f6d5037ac07dce7885599be1f0
  preProcess18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (".or."#) -}
896b5204f0e2de1601921d3fb4b68223
  preProcess19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PreProcessor.preProcess20) -}
9248a5ee1ca2dc02685d44c7331927e0
  preProcess2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\n\
                 \ case "#) -}
bf722e1b987e079bc76853808345d30c
  preProcess20 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" .and. "#) -}
5aaa01eb5f69db17a05bf0f612499890
  preProcess21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PreProcessor.preProcess22) -}
d01b16b404afd8ab8c39724103f22ae5
  preProcess22 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (".and."#) -}
d7645a2052a873f0f14d542651a7d6e7
  preProcess23 :: [GHC.Types.Char] -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [GHC.Types.Char]) ->
                 PreProcessor.preProcess_go1 x) -}
e6a0eeb159a5394e127cbf68b3c6cc06
  preProcess3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PreProcessor.preProcess4) -}
47022de04b0c1c6003c3bab26d527509
  preProcess4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\n\
                 \case "#) -}
496b6d0f9f11f7cfc4096f82a7359bd4
  preProcess5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PreProcessor.preProcess6) -}
506f036c16adcbbf44a0ca548f6750bd
  preProcess6 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\n\
                 \ case("#) -}
49e0cec6d00e6a2f9e643e2cf4ba2616
  preProcess7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PreProcessor.preProcess8) -}
737af2b6e12f1cdf747cbcbcfa7cc66e
  preProcess8 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\n\
                 \case("#) -}
4a138894d07cc7d7a414822b29dff257
  preProcess9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   PreProcessor.preProcess10) -}
c498a8f7323fa17b47d15592f5106806
  preProcess_go ::
    [[GHC.Types.Char]] -> [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
d4589b15bf93cfac383b0c41082f6211
  preProcess_go1 :: [GHC.Types.Char] -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
f162be19b405c1cd9d2ea8c494473e19
  removeBlankLines :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (GHC.List.filter
                   @ [GHC.Types.Char]
                   PreProcessor.preProcess23) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

