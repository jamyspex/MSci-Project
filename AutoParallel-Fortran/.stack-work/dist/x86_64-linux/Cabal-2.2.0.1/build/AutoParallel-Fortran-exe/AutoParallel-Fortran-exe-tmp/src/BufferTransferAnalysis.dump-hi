
==================== FINAL INTERFACE ====================
2018-11-16 12:45:26.901712048 UTC

interface main:BufferTransferAnalysis 8043
  interface hash: c6601c5adc72bb50e8598793a4363cd7
  ABI hash: 1b9cb91eedda195e4119bea6461903a6
  export-list hash: 1f1314a31692867571649814dbd72a51
  orphan hash: f35995ec733377d5a555aa05846ddefe
  flag hash: 7853c119b27f3f568e863cba4679c19c
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  BufferTransferAnalysis.optimiseBufferTransfers
  BufferTransferAnalysis.replaceSubroutineAppearances
module dependencies: F95IntrinsicFunctions Language.Fortran
                     Language.Fortran.Lexer Language.Fortran.Parser
                     Language.Fortran.PreProcess LanguageFortranTools MiniPP
                     PreProcessor SubroutineTable VarAccessAnalysis Warning
package dependencies: array-0.5.2.0 base-4.11.1.0 binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.11.0 deepseq-1.4.3.0
                      directory-1.3.1.5 filepath-1.4.2 ghc-prim-0.5.2.0
                      haskell-src-1.0.3.0 integer-gmp-1.0.2.0 mtl-2.2.2 parsec-3.1.13.0
                      process-1.6.3.0 syb-0.7 text-1.2.3.1 time-1.8.0.2
                      transformers-0.5.5.0 unix-2.7.2.2
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         text-1.2.3.1:Data.Text.Lazy text-1.2.3.1:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         transformers-0.5.5.0:Control.Monad.Trans.Error
         syb-0.7:Data.Generics.Instances base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
import  -/  base-4.11.1.0:Data.Data b150502d549600eff3202c16ff6cf22d
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Err 5e26aa744981f14e0f1e4d29c44ac52e
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Map f51b9cf04edd738eb6d014be576b3403
import  -/  containers-0.5.11.0:Data.Map.Internal e02d23495520de11b8e9f3c9c93a4d11
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  Language.Fortran e2add56600673959dbdfe1ac093795c9
  exports: 6ca1e7b188145fc0c602707ea4a1c428
  Assg c3a5a5c7c0380c697e6a5cda4cc060bd
  Block d58adfcbfbefac7829b419bc0d801569
  Block c8f6dc9d55c3b3cbc94e3fb30057f310
  Call ecfba85593faf88229821091dac9ee3b
  Expr 6304956f2901eead56a8fac1e90d4904
  FSeq 779df6dd417159b80814ee837ce7e2c0
  For 5816e0af6d8df16d1771d2006bcf3abf
  Fortran cab0cd6287333175c6b9d87427982518
  Main 629cfaddbdc7c7695ac0c3caf82e7b4f
  NullStmt ea47243779318c110f98776b706a62f7
  OpenCLBufferRead 9d6facba2ab5a4549c7d415b86d2a12f
  OpenCLBufferWrite fd57e16ab494e9f928a6973a79663ac9
  OpenCLMap e48fa1b14eab97eb69b2edc5f2c10ce8
  OpenCLReduce d14e8e442939b0e4bb37da5a0da04484
  ProgUnit 573fa2fe80c5713ab0c018712ac118d8
  Program 607f4435fb994a8c5b83bd9f7709b3c3
  SrcLoc af6592465c21031ac12547ec948ff586
  SrcLoc 46c6d78d8d8ad90615ee6b6136237ffd
  SrcSpan 667dadf32292a4602702274000a648d8
  Sub 5dc1ce79c5eeb19c143322b2405ae2c8
  SubName 9b06404c654299d20e94c12ba761aaab
  VarName a39ab087efdb6eba24247b07097f591c
  VarName 361ec85699986b0b7f4d68a05374d64d
  srcSpan c13b4efea655d094fcf2aa6fb6fdfaaf
import  -/  LanguageFortranTools 737e8abc5de089abcd0ce62660f9d159
  exports: a5a994dcb8ba92c93a8a354a063275b0
  Anno 1420203ed9c39fcf982d2ff37c01ae68
  checkSrcLocBefore e60527f39c486756f2c7f90a90e6c660
  checkSrcLocEqualLines 9372d129218dd9bc19618b6b97c610a9
  checkSrcSpanBefore 5147f615e784e745818778fbeb5abdf7
  errorLocationFormatting 9c9c0273432833def2860c2509392832
  extractAllVarNames ee05f387e04b6558115e3d72c09a12c7
  extractContainedVars 767cae289da3c9031018929f0cd15574
  extractExpr_list 6dab979ee8b8d4ff63fc85e5d8625380
  extractFirstFortran 46fb79c22780fed40c23fd1c2c3d4d82
  extractKernels ad07c0817a81bb6887a1071b5ccd2396
  extractOperands 8fb945abeb65fded10e8824b0c525de5
  extractVarNames 920113507cf2d36f1a1834c3a88c2c59
  getEarliestSrcLoc 520069fdc5dbddc2e3e8297e885d8f7a
  getEarliestSrcSpan 7f2f1226a255a2e3e291f9b34ce0c8e9
  getIterLoopVars d8cfb9da0f97af7781450e7f9c7dd953
  getLatestSrcSpan 7fb6d3f5dbb2f4b696576735aaf465bb
  getReadArgs 1dbb5f688d9abe3940c6a8dbc34776a9
  getWrittenArgs 725b27eecc2eb6b2ad02250bf2de5653
  isVar f8582da483272aa2ba7beff35cdca0d2
  listIntersection a852f434f0160ba789329974e5d10cb7
  listRemoveDuplications cc90c431c334b3429c5de18c32c0abd0
  listSubtract 40ed5a52f1d2f2210a51ecab157379fd
  listSubtractWithExemption c9f4877af5f81809f72d91c922065715
  listUnion 0741894ac59e24a25fdb6bf898d028dd
  nullAnno b5ec3f8914fec256ad2e53b761b9bd52
  nullSrcLoc 70048daf19804e152496d0171ca45658
  nullSrcSpan d9f6701836bf1a31425d57566b44db7b
  replaceFortran 97e3729215fcdf4e3ef68d08ede68a9d
  shiftSrcSpanLineGlobal f3d28e30b31f810fb766dd805a0cbf9b
  srcSpanInSrcSpanRange 917a5e7f7d210cd5760ff4f66fe41e44
  srcSpanLineCount 29a782e9565b2396d9ce12cfe4caa533
  varNameStr 4f55193896441ff99d96346c5aacd560
import  -/  MiniPP a097deb7cf80506ea342d468c387cbc7
  exports: 333d60b501b5f68150299a62b5d71c5d
  miniPPF 1c649fdd028ba9fb29d799fca18b015a
import  -/  SubroutineTable 489825aeafffaefb2cc10b4978448116
  exports: 2909798395eea1f9c7c6a08b6d2a2760
  ArgumentTranslation 8348e1a77786e26b1f7b22c18902f0b2
  MkSubRec 34e26216a9d2d4a97920de2d2cb5080c
  SubroutineArgumentTranslationMap df561bf3ea00515057d6f613cca42ac5
  SubroutineTable 5a91cdd7134da8dba28aec7592f36133
  extractCalls 4c8ede09737f33bad3f050a043da7cca
  replaceKernels_foldl d130ea0ffe03a4ef3a11f4fb0b3d1729
  subAst 8e8730275a44d60a77f7af5bd3645916
  subroutineTable_ast 8594d6e29a36b42c108a18e5539253ff
import  -/  VarAccessAnalysis 53752df4324502d602d68f0512d6b3c9
  exports: 7d36a7dfcc704fd9b4303a1ab3c7be89
  VarAccessAnalysis 6eba2d91974ef76d532f7c235d4d961a
  analyseAllVarAccess b6bab9144299c3ee32e195965821c2fb
  collectVarNames 5ac0a4f3c0ddf2c6cee7afd301dd28a3
  getAccessLocationsAfterSrcSpan 09e175097c99b3e6613bac36721ea966
  getAccessLocationsBeforeSrcSpan 48ee41792acebbf4ebcdce94c39b9501
  getAccessLocationsInsideSrcSpan 7b5873e0a53465d1ef2979902736a3a5
  getAccessesBetweenSrcSpans e4145c58de7901d192803d643306f238
  getAccessesBetweenSrcSpansIgnore 6bb61dc36b3fa623123f285869d73f3a
  getArguments a90d5f5f34429817dbc2a090c06611ff
  getDeclaredVarNames 3631ecdfa4430abc82d37e721099d494
import  -/  Warning b5ec059e95d91647264308e84d2ed3ea
  exports: d9b5419f40dd7650497f479a7fe0214a
  warning 5c420cdeeb6016db8a4c66534ccbe9c7
import  -/  syb-0.7:Data.Generics 2ddc257f9ac35414fc37ff4d19b4d388
import  -/  syb-0.7:Data.Generics.Aliases a5097c06261967df51d59247bf1d4958
import  -/  syb-0.7:Data.Generics.Schemes 58bc96c8ed0bed4ad53424f237efe8b8
9027a23e9553a5d6525c1bca6c965126
  $s$fDataArgList ::
    Data.Data.Data (Language.Fortran.ArgList LanguageFortranTools.Anno)
  {- Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.Fortran.ArgList LanguageFortranTools.Anno)
                  (Data.Typeable.Internal.mkTrApp
                     @ *
                     @ *
                     @ Language.Fortran.ArgList
                     @ LanguageFortranTools.Anno
                     Language.Fortran.$fDataArgList9
                     (Data.Typeable.Internal.mkTrApp
                        @ *
                        @ *
                        @ (Data.Map.Internal.Map [GHC.Types.Char])
                        @ [GHC.Base.String]
                        (Data.Typeable.Internal.mkTrApp
                           @ *
                           @ (* -> *)
                           @ Data.Map.Internal.Map
                           @ [GHC.Types.Char]
                           Data.Map.Internal.$fDataMap17
                           (Data.Typeable.Internal.mkTrApp
                              @ *
                              @ *
                              @ []
                              @ GHC.Types.Char
                              Data.Data.$fData[]3
                              Data.Data.$fDataChar7))
                        (Data.Typeable.Internal.mkTrApp
                           @ *
                           @ *
                           @ []
                           @ [GHC.Types.Char]
                           Data.Data.$fData[]3
                           (Data.Typeable.Internal.mkTrApp
                              @ *
                              @ *
                              @ []
                              @ GHC.Types.Char
                              Data.Data.$fData[]3
                              Data.Data.$fDataChar7))))
                    `cast`
                  (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <Language.Fortran.ArgList
                                                                       LanguageFortranTools.Anno>_N)
                  (Language.Fortran.$fDataArgList_$cgfoldl
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataArgList_$cgunfold
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (\ (ds :: Language.Fortran.ArgList LanguageFortranTools.Anno) ->
                   case ds of wild { Language.Fortran.ArgList ds1 ds2 ->
                   Language.Fortran.$cArgList })
                  (\ (ds :: Language.Fortran.ArgList LanguageFortranTools.Anno) ->
                   Language.Fortran.$tArgList)
                  (Language.Fortran.$fDataArgList_$cdataCast1
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (\ @ t :: * -> * -> *
                     @ c :: * -> *
                     ($dTypeable3 :: Data.Typeable.Internal.Typeable t)
                     (ds :: forall d e.
                            (Data.Data.Data d, Data.Data.Data e) =>
                            c (t d e)) ->
                   GHC.Base.Nothing
                     @ (c (Language.Fortran.ArgList LanguageFortranTools.Anno)))
                  (\ (ds :: forall b. Data.Data.Data b => b -> b)
                     (x0 :: Language.Fortran.ArgList LanguageFortranTools.Anno) ->
                   case x0 of wild { Language.Fortran.ArgList a1 a2 ->
                   (Language.Fortran.ArgList
                      @ LanguageFortranTools.Anno
                      (ds
                         @ LanguageFortranTools.Anno
                         BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap
                         a1)
                      (ds
                         @ (Language.Fortran.Expr LanguageFortranTools.Anno)
                         (Language.Fortran.$fDataExpr
                            @ LanguageFortranTools.Anno
                            BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                         a2))
                     `cast`
                   (Sym (Data.Functor.Identity.N:Identity[0]
                             <Language.Fortran.ArgList LanguageFortranTools.Anno>_R)) })
                    `cast`
                  (<forall b. Data.Data.Data b => b -> b>_R
                   ->_R <Language.Fortran.ArgList LanguageFortranTools.Anno>_R
                   ->_R Data.Functor.Identity.N:Identity[0]
                            <Language.Fortran.ArgList LanguageFortranTools.Anno>_R)
                  (Language.Fortran.$fDataArgList_$cgmapQl
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataArgList_$cgmapQr
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataArgList_$cgmapQ
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataArgList_$cgmapQi
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataArgList_$cgmapM
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataArgList_$cgmapMp
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataArgList_$cgmapMo
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap) -}
f0c7b48ffa18832281799ec6650cf85b
  $s$fDataArgList_$s$fDataMap ::
    Data.Data.Data
      (Data.Map.Internal.Map [GHC.Types.Char] [GHC.Base.String])
  {- Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Map.Internal.Map [GHC.Types.Char] [GHC.Base.String])
                  (Data.Typeable.Internal.mkTrApp
                     @ *
                     @ *
                     @ (Data.Map.Internal.Map [GHC.Types.Char])
                     @ [GHC.Base.String]
                     (Data.Typeable.Internal.mkTrApp
                        @ *
                        @ (* -> *)
                        @ Data.Map.Internal.Map
                        @ [GHC.Types.Char]
                        Data.Map.Internal.$fDataMap17
                        (Data.Typeable.Internal.mkTrApp
                           @ *
                           @ *
                           @ []
                           @ GHC.Types.Char
                           Data.Data.$fData[]3
                           Data.Data.$fDataChar7))
                     (Data.Typeable.Internal.mkTrApp
                        @ *
                        @ *
                        @ []
                        @ [GHC.Types.Char]
                        Data.Data.$fData[]3
                        (Data.Typeable.Internal.mkTrApp
                           @ *
                           @ *
                           @ []
                           @ GHC.Types.Char
                           Data.Data.$fData[]3
                           Data.Data.$fDataChar7)))
                    `cast`
                  (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <Data.Map.Internal.Map
                                                                       [GHC.Types.Char]
                                                                       [GHC.Base.String]>_N)
                  (Data.Map.Internal.$fDataMap_$cgfoldl
                     @ [GHC.Types.Char]
                     @ [GHC.Base.String]
                     Data.Data.$fData[]_$s$fData[]
                     BufferTransferAnalysis.$s$fDataArgList_$s$fData[]
                     GHC.Classes.$fOrd[]_$s$fOrd[]1)
                  (Data.Map.Internal.$fDataMap_$cgunfold
                     @ [GHC.Types.Char]
                     @ [GHC.Base.String]
                     Data.Data.$fData[]_$s$fData[]
                     BufferTransferAnalysis.$s$fDataArgList_$s$fData[]
                     GHC.Classes.$fOrd[]_$s$fOrd[]1)
                  (\ (ds :: Data.Map.Internal.Map
                              [GHC.Types.Char] [GHC.Base.String]) ->
                   Data.Map.Internal.fromListConstr)
                  (\ (ds :: Data.Map.Internal.Map
                              [GHC.Types.Char] [GHC.Base.String]) ->
                   Data.Map.Internal.mapDataType)
                  (\ @ t :: * -> *
                     @ c :: * -> *
                     ($dTypeable3 :: Data.Typeable.Internal.Typeable t)
                     (ds :: forall d. Data.Data.Data d => c (t d)) ->
                   GHC.Base.Nothing
                     @ (c (Data.Map.Internal.Map [GHC.Types.Char] [GHC.Base.String])))
                  (Data.Map.Internal.$fDataMap_$cdataCast2
                     @ [GHC.Types.Char]
                     @ [GHC.Base.String]
                     Data.Data.$fData[]_$s$fData[]
                     BufferTransferAnalysis.$s$fDataArgList_$s$fData[]
                     GHC.Classes.$fOrd[]_$s$fOrd[]1)
                  (Data.Map.Internal.$fDataMap6
                     @ [GHC.Types.Char]
                     @ [GHC.Base.String]
                     Data.Data.$fData[]_$s$fData[]
                     BufferTransferAnalysis.$s$fDataArgList_$s$fData[]
                     GHC.Classes.$fOrd[]_$s$fOrd[]1)
                    `cast`
                  (<forall b. Data.Data.Data b => b -> b>_R
                   ->_R <Data.Map.Internal.Map [GHC.Types.Char] [GHC.Base.String]>_R
                   ->_R Data.Functor.Identity.N:Identity[0]
                            <Data.Map.Internal.Map [GHC.Types.Char] [GHC.Base.String]>_R)
                  (Data.Map.Internal.$fDataMap_$cgmapQl
                     @ [GHC.Types.Char]
                     @ [GHC.Base.String]
                     Data.Data.$fData[]_$s$fData[]
                     BufferTransferAnalysis.$s$fDataArgList_$s$fData[]
                     GHC.Classes.$fOrd[]_$s$fOrd[]1)
                  (Data.Map.Internal.$fDataMap_$cgmapQr
                     @ [GHC.Types.Char]
                     @ [GHC.Base.String]
                     Data.Data.$fData[]_$s$fData[]
                     BufferTransferAnalysis.$s$fDataArgList_$s$fData[]
                     GHC.Classes.$fOrd[]_$s$fOrd[]1)
                  (Data.Map.Internal.$fDataMap_$cgmapQ
                     @ [GHC.Types.Char]
                     @ [GHC.Base.String]
                     Data.Data.$fData[]_$s$fData[]
                     BufferTransferAnalysis.$s$fDataArgList_$s$fData[]
                     GHC.Classes.$fOrd[]_$s$fOrd[]1)
                  (Data.Map.Internal.$fDataMap_$cgmapQi
                     @ [GHC.Types.Char]
                     @ [GHC.Base.String]
                     Data.Data.$fData[]_$s$fData[]
                     BufferTransferAnalysis.$s$fDataArgList_$s$fData[]
                     GHC.Classes.$fOrd[]_$s$fOrd[]1)
                  (Data.Map.Internal.$fDataMap_$cgmapM
                     @ [GHC.Types.Char]
                     @ [GHC.Base.String]
                     Data.Data.$fData[]_$s$fData[]
                     BufferTransferAnalysis.$s$fDataArgList_$s$fData[]
                     GHC.Classes.$fOrd[]_$s$fOrd[]1)
                  (Data.Map.Internal.$fDataMap_$cgmapMp
                     @ [GHC.Types.Char]
                     @ [GHC.Base.String]
                     Data.Data.$fData[]_$s$fData[]
                     BufferTransferAnalysis.$s$fDataArgList_$s$fData[]
                     GHC.Classes.$fOrd[]_$s$fOrd[]1)
                  (Data.Map.Internal.$fDataMap_$cgmapMo
                     @ [GHC.Types.Char]
                     @ [GHC.Base.String]
                     Data.Data.$fData[]_$s$fData[]
                     BufferTransferAnalysis.$s$fDataArgList_$s$fData[]
                     GHC.Classes.$fOrd[]_$s$fOrd[]1) -}
ebf81193b9e7dcba56e459aabeb7f4b7
  $s$fDataArgList_$s$fData[] :: Data.Data.Data [[GHC.Types.Char]]
  {- Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [[GHC.Types.Char]]
                  (Data.Typeable.Internal.mkTrApp
                     @ *
                     @ *
                     @ []
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]3
                     (Data.Typeable.Internal.mkTrApp
                        @ *
                        @ *
                        @ []
                        @ GHC.Types.Char
                        Data.Data.$fData[]3
                        Data.Data.$fDataChar7))
                    `cast`
                  (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <[[GHC.Types.Char]]>_N)
                  (Data.Data.$fData[]_$cgfoldl
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (Data.Data.$fData[]_$cgunfold
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (\ (ds :: [[GHC.Types.Char]]) ->
                   case ds of wild {
                     [] -> Data.Data.nilConstr : ds1 ds2 -> Data.Data.consConstr })
                  (\ (ds :: [[GHC.Types.Char]]) -> Data.Data.listDataType)
                  (Data.Data.$fData[]_$cdataCast1
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (\ @ t :: * -> * -> *
                     @ c :: * -> *
                     ($dTypeable3 :: Data.Typeable.Internal.Typeable t)
                     (ds :: forall d e.
                            (Data.Data.Data d, Data.Data.Data e) =>
                            c (t d e)) ->
                   GHC.Base.Nothing @ (c [[GHC.Types.Char]]))
                  (Data.Data.$fData[]_$cgmapT
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (Data.Data.$fData[]_$cgmapQl
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (Data.Data.$fData[]_$cgmapQr
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (Data.Data.$fData[]_$cgmapQ
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (Data.Data.$fData[]_$cgmapQi
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (Data.Data.$fData[]_$cgmapM
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (Data.Data.$fData[]_$cgmapMp
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (Data.Data.$fData[]_$cgmapMo
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[]) -}
a3b184858e1139c0477674e2ba213d5d
  $s$fDataFortran ::
    Data.Data.Data (Language.Fortran.Fortran LanguageFortranTools.Anno)
  {- Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.Fortran.Fortran LanguageFortranTools.Anno)
                  (Data.Typeable.Internal.mkTrApp
                     @ *
                     @ *
                     @ Language.Fortran.Fortran
                     @ LanguageFortranTools.Anno
                     Language.Fortran.$fDataFortran6
                     (Data.Typeable.Internal.mkTrApp
                        @ *
                        @ *
                        @ (Data.Map.Internal.Map [GHC.Types.Char])
                        @ [GHC.Base.String]
                        (Data.Typeable.Internal.mkTrApp
                           @ *
                           @ (* -> *)
                           @ Data.Map.Internal.Map
                           @ [GHC.Types.Char]
                           Data.Map.Internal.$fDataMap17
                           (Data.Typeable.Internal.mkTrApp
                              @ *
                              @ *
                              @ []
                              @ GHC.Types.Char
                              Data.Data.$fData[]3
                              Data.Data.$fDataChar7))
                        (Data.Typeable.Internal.mkTrApp
                           @ *
                           @ *
                           @ []
                           @ [GHC.Types.Char]
                           Data.Data.$fData[]3
                           (Data.Typeable.Internal.mkTrApp
                              @ *
                              @ *
                              @ []
                              @ GHC.Types.Char
                              Data.Data.$fData[]3
                              Data.Data.$fDataChar7))))
                    `cast`
                  (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <Language.Fortran.Fortran
                                                                       LanguageFortranTools.Anno>_N)
                  (Language.Fortran.$fDataFortran_$cgfoldl
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataFortran_$cgunfold
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataFortran_$ctoConstr
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (\ (ds :: Language.Fortran.Fortran LanguageFortranTools.Anno) ->
                   Language.Fortran.$tFortran)
                  (Language.Fortran.$fDataFortran_$cdataCast1
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (\ @ t :: * -> * -> *
                     @ c :: * -> *
                     ($dTypeable3 :: Data.Typeable.Internal.Typeable t)
                     (ds :: forall d e.
                            (Data.Data.Data d, Data.Data.Data e) =>
                            c (t d e)) ->
                   GHC.Base.Nothing
                     @ (c (Language.Fortran.Fortran LanguageFortranTools.Anno)))
                  (Language.Fortran.$fDataFortran1
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                    `cast`
                  (<forall b. Data.Data.Data b => b -> b>_R
                   ->_R <Language.Fortran.Fortran LanguageFortranTools.Anno>_R
                   ->_R Data.Functor.Identity.N:Identity[0]
                            <Language.Fortran.Fortran LanguageFortranTools.Anno>_R)
                  (Language.Fortran.$fDataFortran_$cgmapQl
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataFortran_$cgmapQr
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataFortran_$cgmapQ
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataFortran_$cgmapQi
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataFortran_$cgmapM
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataFortran_$cgmapMp
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataFortran_$cgmapMo
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap) -}
b2ffb6c254f7c868af92e5c233bdb91f
  $s$fDataMap_$cdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe
         (c (Data.Map.Internal.Map [GHC.Types.Char] [GHC.Base.String]))
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ t :: * -> * -> *
                   @ c :: * -> *
                   (w3 :: Data.Typeable.Internal.Typeable t) ->
                 Data.Map.Internal.$w$cdataCast2
                   @ [GHC.Types.Char]
                   @ [GHC.Base.String]
                   Data.Data.$fData[]_$s$fData[]
                   BufferTransferAnalysis.$s$fDataArgList_$s$fData[]
                   @ t
                   @ c
                   w3) -}
262fb7baed2194d582f9cabfe431a3a1
  $s$fDataProgUnit ::
    Data.Data.Data
      (Language.Fortran.ProgUnit LanguageFortranTools.Anno)
  {- Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.Fortran.ProgUnit LanguageFortranTools.Anno)
                  (Data.Typeable.Internal.mkTrApp
                     @ *
                     @ *
                     @ Language.Fortran.ProgUnit
                     @ LanguageFortranTools.Anno
                     Language.Fortran.$fDataProgUnit6
                     (Data.Typeable.Internal.mkTrApp
                        @ *
                        @ *
                        @ (Data.Map.Internal.Map [GHC.Types.Char])
                        @ [GHC.Base.String]
                        (Data.Typeable.Internal.mkTrApp
                           @ *
                           @ (* -> *)
                           @ Data.Map.Internal.Map
                           @ [GHC.Types.Char]
                           Data.Map.Internal.$fDataMap17
                           (Data.Typeable.Internal.mkTrApp
                              @ *
                              @ *
                              @ []
                              @ GHC.Types.Char
                              Data.Data.$fData[]3
                              Data.Data.$fDataChar7))
                        (Data.Typeable.Internal.mkTrApp
                           @ *
                           @ *
                           @ []
                           @ [GHC.Types.Char]
                           Data.Data.$fData[]3
                           (Data.Typeable.Internal.mkTrApp
                              @ *
                              @ *
                              @ []
                              @ GHC.Types.Char
                              Data.Data.$fData[]3
                              Data.Data.$fDataChar7))))
                    `cast`
                  (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <Language.Fortran.ProgUnit
                                                                       LanguageFortranTools.Anno>_N)
                  (Language.Fortran.$fDataProgUnit_$cgfoldl
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataProgUnit_$cgunfold
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (\ (ds :: Language.Fortran.ProgUnit LanguageFortranTools.Anno) ->
                   case ds of wild {
                     Language.Fortran.Main ds1 ds2 ds3 ds4 ds5 ds6
                     -> Language.Fortran.$cMain
                     Language.Fortran.Sub ds1 ds2 ds3 ds4 ds5 ds6
                     -> Language.Fortran.$cSub
                     Language.Fortran.Function ds1 ds2 ds3 ds4 ds5 ds6 ds7
                     -> Language.Fortran.$cFunction
                     Language.Fortran.Module ds1 ds2 ds3 ds4 ds5 ds6 ds7
                     -> Language.Fortran.$cModule
                     Language.Fortran.BlockData ds1 ds2 ds3 ds4 ds5 ds6
                     -> Language.Fortran.$cBlockData
                     Language.Fortran.PSeq ds1 ds2 ds3 ds4 -> Language.Fortran.$cPSeq
                     Language.Fortran.Prog ds1 ds2 ds3 -> Language.Fortran.$cProg
                     Language.Fortran.NullProg ds1 ds2 -> Language.Fortran.$cNullProg
                     Language.Fortran.IncludeProg ds1 ds2 ds3 ds4
                     -> Language.Fortran.$cIncludeProg })
                  (\ (ds :: Language.Fortran.ProgUnit LanguageFortranTools.Anno) ->
                   Language.Fortran.$tProgUnit)
                  (Language.Fortran.$fDataProgUnit_$cdataCast1
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (\ @ t :: * -> * -> *
                     @ c :: * -> *
                     ($dTypeable3 :: Data.Typeable.Internal.Typeable t)
                     (ds :: forall d e.
                            (Data.Data.Data d, Data.Data.Data e) =>
                            c (t d e)) ->
                   GHC.Base.Nothing
                     @ (c (Language.Fortran.ProgUnit LanguageFortranTools.Anno)))
                  (Language.Fortran.$fDataProgUnit1
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                    `cast`
                  (<forall b. Data.Data.Data b => b -> b>_R
                   ->_R <Language.Fortran.ProgUnit LanguageFortranTools.Anno>_R
                   ->_R Data.Functor.Identity.N:Identity[0]
                            <Language.Fortran.ProgUnit LanguageFortranTools.Anno>_R)
                  (Language.Fortran.$fDataProgUnit_$cgmapQl
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataProgUnit_$cgmapQr
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataProgUnit_$cgmapQ
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataProgUnit_$cgmapQi
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataProgUnit_$cgmapM
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataProgUnit_$cgmapMp
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap)
                  (Language.Fortran.$fDataProgUnit_$cgmapMo
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap) -}
05a756f2dd630897b4535143c57e0004
  $s$fData[] ::
    Data.Data.Data
      [Language.Fortran.ProgUnit LanguageFortranTools.Anno]
  {- Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [Language.Fortran.ProgUnit LanguageFortranTools.Anno]
                  (Data.Typeable.Internal.mkTrApp
                     @ *
                     @ *
                     @ []
                     @ (Language.Fortran.ProgUnit LanguageFortranTools.Anno)
                     Data.Data.$fData[]3
                     (Data.Typeable.Internal.mkTrApp
                        @ *
                        @ *
                        @ Language.Fortran.ProgUnit
                        @ LanguageFortranTools.Anno
                        Language.Fortran.$fDataProgUnit6
                        (Data.Typeable.Internal.mkTrApp
                           @ *
                           @ *
                           @ (Data.Map.Internal.Map [GHC.Types.Char])
                           @ [GHC.Base.String]
                           (Data.Typeable.Internal.mkTrApp
                              @ *
                              @ (* -> *)
                              @ Data.Map.Internal.Map
                              @ [GHC.Types.Char]
                              Data.Map.Internal.$fDataMap17
                              (Data.Typeable.Internal.mkTrApp
                                 @ *
                                 @ *
                                 @ []
                                 @ GHC.Types.Char
                                 Data.Data.$fData[]3
                                 Data.Data.$fDataChar7))
                           (Data.Typeable.Internal.mkTrApp
                              @ *
                              @ *
                              @ []
                              @ [GHC.Types.Char]
                              Data.Data.$fData[]3
                              (Data.Typeable.Internal.mkTrApp
                                 @ *
                                 @ *
                                 @ []
                                 @ GHC.Types.Char
                                 Data.Data.$fData[]3
                                 Data.Data.$fDataChar7)))))
                    `cast`
                  (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <[Language.Fortran.ProgUnit
                                                                        LanguageFortranTools.Anno]>_N)
                  (Data.Data.$fData[]_$cgfoldl
                     @ (Language.Fortran.ProgUnit LanguageFortranTools.Anno)
                     BufferTransferAnalysis.$s$fDataProgUnit)
                  (Data.Data.$fData[]_$cgunfold
                     @ (Language.Fortran.ProgUnit LanguageFortranTools.Anno)
                     BufferTransferAnalysis.$s$fDataProgUnit)
                  (\ (ds :: [Language.Fortran.ProgUnit LanguageFortranTools.Anno]) ->
                   case ds of wild {
                     [] -> Data.Data.nilConstr : ds1 ds2 -> Data.Data.consConstr })
                  (\ (ds :: [Language.Fortran.ProgUnit LanguageFortranTools.Anno]) ->
                   Data.Data.listDataType)
                  (Data.Data.$fData[]_$cdataCast1
                     @ (Language.Fortran.ProgUnit LanguageFortranTools.Anno)
                     BufferTransferAnalysis.$s$fDataProgUnit)
                  (\ @ t :: * -> * -> *
                     @ c :: * -> *
                     ($dTypeable3 :: Data.Typeable.Internal.Typeable t)
                     (ds :: forall d e.
                            (Data.Data.Data d, Data.Data.Data e) =>
                            c (t d e)) ->
                   GHC.Base.Nothing
                     @ (c [Language.Fortran.ProgUnit LanguageFortranTools.Anno]))
                  (Data.Data.$fData[]_$cgmapT
                     @ (Language.Fortran.ProgUnit LanguageFortranTools.Anno)
                     BufferTransferAnalysis.$s$fDataProgUnit)
                  (Data.Data.$fData[]_$cgmapQl
                     @ (Language.Fortran.ProgUnit LanguageFortranTools.Anno)
                     BufferTransferAnalysis.$s$fDataProgUnit)
                  (Data.Data.$fData[]_$cgmapQr
                     @ (Language.Fortran.ProgUnit LanguageFortranTools.Anno)
                     BufferTransferAnalysis.$s$fDataProgUnit)
                  (Data.Data.$fData[]_$cgmapQ
                     @ (Language.Fortran.ProgUnit LanguageFortranTools.Anno)
                     BufferTransferAnalysis.$s$fDataProgUnit)
                  (Data.Data.$fData[]_$cgmapQi
                     @ (Language.Fortran.ProgUnit LanguageFortranTools.Anno)
                     BufferTransferAnalysis.$s$fDataProgUnit)
                  (Data.Data.$fData[]_$cgmapM
                     @ (Language.Fortran.ProgUnit LanguageFortranTools.Anno)
                     BufferTransferAnalysis.$s$fDataProgUnit)
                  (Data.Data.$fData[]_$cgmapMp
                     @ (Language.Fortran.ProgUnit LanguageFortranTools.Anno)
                     BufferTransferAnalysis.$s$fDataProgUnit)
                  (Data.Data.$fData[]_$cgmapMo
                     @ (Language.Fortran.ProgUnit LanguageFortranTools.Anno)
                     BufferTransferAnalysis.$s$fDataProgUnit) -}
64ac3827ccac12ac363131b7c348f950
  $s$fData[]1 ::
    Data.Typeable.Internal.TypeRep
      [Language.Fortran.ProgUnit LanguageFortranTools.Anno]
  {- Unfolding: InlineRule (0, True, False)
                (Data.Typeable.Internal.mkTrApp
                   @ *
                   @ *
                   @ []
                   @ (Language.Fortran.ProgUnit LanguageFortranTools.Anno)
                   Data.Data.$fData[]3
                   (Data.Typeable.Internal.mkTrApp
                      @ *
                      @ *
                      @ Language.Fortran.ProgUnit
                      @ LanguageFortranTools.Anno
                      Language.Fortran.$fDataProgUnit6
                      (Data.Typeable.Internal.mkTrApp
                         @ *
                         @ *
                         @ (Data.Map.Internal.Map [GHC.Types.Char])
                         @ [GHC.Base.String]
                         (Data.Typeable.Internal.mkTrApp
                            @ *
                            @ (* -> *)
                            @ Data.Map.Internal.Map
                            @ [GHC.Types.Char]
                            Data.Map.Internal.$fDataMap17
                            (Data.Typeable.Internal.mkTrApp
                               @ *
                               @ *
                               @ []
                               @ GHC.Types.Char
                               Data.Data.$fData[]3
                               Data.Data.$fDataChar7))
                         (Data.Typeable.Internal.mkTrApp
                            @ *
                            @ *
                            @ []
                            @ [GHC.Types.Char]
                            Data.Data.$fData[]3
                            (Data.Typeable.Internal.mkTrApp
                               @ *
                               @ *
                               @ []
                               @ GHC.Types.Char
                               Data.Data.$fData[]3
                               Data.Data.$fDataChar7))))) -}
b3ef14e3ace5fa70cfbfa55ce8a67ab9
  $s$fData[]7 :: Data.Typeable.Internal.TypeRep [[GHC.Types.Char]]
  {- Unfolding: InlineRule (0, True, False)
                (Data.Typeable.Internal.mkTrApp
                   @ *
                   @ *
                   @ []
                   @ [GHC.Types.Char]
                   Data.Data.$fData[]3
                   (Data.Typeable.Internal.mkTrApp
                      @ *
                      @ *
                      @ []
                      @ GHC.Types.Char
                      Data.Data.$fData[]3
                      Data.Data.$fDataChar7)) -}
6d92a8c63caa3480f36e1e2cb146e16c
  $s$fEqFortran ::
    GHC.Classes.Eq (Language.Fortran.Fortran LanguageFortranTools.Anno)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.Fortran.Fortran LanguageFortranTools.Anno)
                  (Language.Fortran.$fEqBlock_$c==1
                     @ LanguageFortranTools.Anno
                     BufferTransferAnalysis.$s$fEqFortran_$s$fEqMap)
                  BufferTransferAnalysis.$s$fEqFortran_$s$fEqFortran_$c/= -}
440545fafc326982a9c12684218f70a2
  $s$fEqFortran_$s$fEqFortran_$c/= ::
    Language.Fortran.Fortran LanguageFortranTools.Anno
    -> Language.Fortran.Fortran LanguageFortranTools.Anno
    -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Language.Fortran.Fortran LanguageFortranTools.Anno)
                   (y :: Language.Fortran.Fortran LanguageFortranTools.Anno) ->
                 case Language.Fortran.$fEqBlock_$c==1
                        @ LanguageFortranTools.Anno
                        BufferTransferAnalysis.$s$fEqFortran_$s$fEqMap
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
d04c658404d815188a9deb49cb09dc3c
  $s$fEqFortran_$s$fEqMap ::
    GHC.Classes.Eq
      (Data.Map.Internal.Map [GHC.Types.Char] [GHC.Base.String])
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Map.Internal.Map [GHC.Types.Char] [GHC.Base.String])
                  (Data.Map.Internal.$fEqMap_$c==
                     @ [GHC.Types.Char]
                     @ [GHC.Base.String]
                     GHC.Classes.$fEq[]_$s$fEq[]1
                     GHC.Classes.$fEq[]_$s$fEq[]2)
                  BufferTransferAnalysis.$s$fEqFortran_$s$fEqMap_$c/= -}
24b70b0d3ceb0965b94746bb7343f776
  $s$fEqFortran_$s$fEqMap_$c/= ::
    Data.Map.Internal.Map [GHC.Types.Char] [GHC.Base.String]
    -> Data.Map.Internal.Map [GHC.Types.Char] [GHC.Base.String]
    -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Data.Map.Internal.Map [GHC.Types.Char] [GHC.Base.String])
                   (y :: Data.Map.Internal.Map [GHC.Types.Char] [GHC.Base.String]) ->
                 case Data.Map.Internal.$fEqMap_$c==
                        @ [GHC.Types.Char]
                        @ [GHC.Base.String]
                        GHC.Classes.$fEq[]_$s$fEq[]1
                        GHC.Classes.$fEq[]_$s$fEq[]2
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
f8472017efef3cd00b4985713629bdef
  $s$fEqVarName ::
    GHC.Classes.Eq
      (Language.Fortran.VarName
         (Data.Map.Internal.Map GHC.Base.String [GHC.Base.String]))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Language.Fortran.VarName
                       (Data.Map.Internal.Map GHC.Base.String [GHC.Base.String]))
                  (Language.Fortran.$fEqVarName_$c==
                     @ (Data.Map.Internal.Map GHC.Base.String [GHC.Base.String])
                     BufferTransferAnalysis.$s$fEqFortran_$s$fEqMap)
                  (Language.Fortran.$fEqVarName_$c/=
                     @ (Data.Map.Internal.Map GHC.Base.String [GHC.Base.String])
                     BufferTransferAnalysis.$s$fEqFortran_$s$fEqMap) -}
55a809984b6910f34048c169be2ee112
  $sfindWithDefault1 ::
    a
    -> [GHC.Types.Char]
    -> Data.Map.Internal.Map [GHC.Types.Char] a
    -> a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U><S,1*U><S,1*U> -}
d2c94e3bba6bfc3f82ef3739e2586d8a
  $sfindWithDefault3 ::
    a
    -> Language.Fortran.VarName LanguageFortranTools.Anno
    -> Data.Map.Internal.Map
         (Language.Fortran.VarName LanguageFortranTools.Anno) a
    -> a
  {- Arity: 3, Strictness: <L,1*U><S,1*U(U,U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: a)
                   (w1 :: Language.Fortran.VarName LanguageFortranTools.Anno)
                   (w2 :: Data.Map.Internal.Map
                            (Language.Fortran.VarName LanguageFortranTools.Anno) a) ->
                 case w1 of ww { Language.Fortran.VarName ww1 ww2 ->
                 BufferTransferAnalysis.$wpoly_go13 @ a w ww1 ww2 w2 }) -}
7d71c08919bf94afd7e4066c425dd5f8
  $slookup1 ::
    [GHC.Types.Char]
    -> Data.Map.Internal.Map [GHC.Types.Char] a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
22d4f59d1f5cc2bdbd798ea692cd2fb5
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   BufferTransferAnalysis.$trModule3
                   BufferTransferAnalysis.$trModule1) -}
4a884972c133ea08333c41f065e58489
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS BufferTransferAnalysis.$trModule2) -}
7ccb546326cb8c8dbaaed046a1544a4c
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BufferTransferAnalysis"#) -}
f6c520f8ff8fdc3026fd36b17fc9fc94
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS BufferTransferAnalysis.$trModule4) -}
7c49bab074292ba2d35295cb02764de1
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
09d3a0586f04499ae81bace3ff7d2edc
  $woptimiseBufferTransfers ::
    [GHC.Base.String]
    -> [GHC.Base.String]
    -> SubroutineTable.SubroutineTable
    -> SubroutineTable.SubroutineArgumentTranslationMap
    -> Language.Fortran.Program LanguageFortranTools.Anno
    -> (# SubroutineTable.SubroutineTable,
          Language.Fortran.Program LanguageFortranTools.Anno #)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,U>, Inline: [0] -}
16b49df6107a048c43f26e08ce6b8b2e
  $wpoly_go13 ::
    a
    -> LanguageFortranTools.Anno
    -> Language.Fortran.Variable
    -> Data.Map.Internal.Map
         (Language.Fortran.VarName LanguageFortranTools.Anno) a
    -> a
  {- Arity: 4, Strictness: <L,1*U><L,U><L,U><S,1*U>, Inline: [0] -}
c9133ed8259d91777ac1da6955a5d494
  optimiseBufferTransfers ::
    ([GHC.Base.String], [GHC.Base.String])
    -> SubroutineTable.SubroutineTable
    -> SubroutineTable.SubroutineArgumentTranslationMap
    -> (Language.Fortran.Program LanguageFortranTools.Anno,
        [GHC.Base.String])
    -> (SubroutineTable.SubroutineTable,
        Language.Fortran.Program LanguageFortranTools.Anno)
  {- Arity: 4, Strictness: <S,1*U(U,U)><L,U><L,U><S,1*U(U,A)>m,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: ([GHC.Base.String], [GHC.Base.String]))
                   (w1 :: SubroutineTable.SubroutineTable)
                   (w2 :: SubroutineTable.SubroutineArgumentTranslationMap)
                   (w3 :: (Language.Fortran.Program LanguageFortranTools.Anno,
                           [GHC.Base.String])) ->
                 case w of ww { (,) ww1 ww2 ->
                 case w3 of ww3 { (,) ww4 ww5 ->
                 case BufferTransferAnalysis.$woptimiseBufferTransfers
                        ww1
                        ww2
                        w1
                        w2
                        ww4 of ww6 { (#,#) ww7 ww8 ->
                 (ww7, ww8) } } }) -}
989358fdac4a0eb5615151efd62a3ada
  replaceSubroutineAppearances ::
    SubroutineTable.SubroutineTable
    -> [(Language.Fortran.Program LanguageFortranTools.Anno,
         [GHC.Base.String])]
    -> [(Language.Fortran.Program LanguageFortranTools.Anno,
         [GHC.Base.String])]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
"SPEC/BufferTransferAnalysis $fDataArgList @ Anno" [orphan] forall (v :: Data.Data.Data
                                                                           LanguageFortranTools.Anno)
  Language.Fortran.$fDataArgList @ (Data.Map.Internal.Map
                                      GHC.Base.String [GHC.Base.String])
                                 v
  = BufferTransferAnalysis.$s$fDataArgList
"SPEC/BufferTransferAnalysis $fDataFortran @ Anno" [orphan] forall (v :: Data.Data.Data
                                                                           LanguageFortranTools.Anno)
  Language.Fortran.$fDataFortran @ (Data.Map.Internal.Map
                                      GHC.Base.String [GHC.Base.String])
                                 v
  = BufferTransferAnalysis.$s$fDataFortran
"SPEC/BufferTransferAnalysis $fDataMap @ [Char] @ [String]" [orphan] forall (v2 :: GHC.Classes.Ord
                                                                                     [GHC.Types.Char])
                                                                            (v1 :: Data.Data.Data
                                                                                     [GHC.Base.String])
                                                                            (v :: Data.Data.Data
                                                                                    [GHC.Types.Char])
  Data.Map.Internal.$fDataMap @ [GHC.Types.Char]
                              @ [GHC.Base.String]
                              v
                              v1
                              v2
  = BufferTransferAnalysis.$s$fDataArgList_$s$fDataMap
"SPEC/BufferTransferAnalysis $fDataMap_$cdataCast2 @ [Char] @ [String]" [orphan] [0] forall (w2 :: GHC.Classes.Ord
                                                                                                     [GHC.Types.Char])
                                                                                            (w1 :: Data.Data.Data
                                                                                                     [GHC.Base.String])
                                                                                            (w :: Data.Data.Data
                                                                                                    [GHC.Types.Char])
  Data.Map.Internal.$fDataMap_$cdataCast2 @ [GHC.Types.Char]
                                          @ [GHC.Base.String]
                                          w
                                          w1
                                          w2
  = BufferTransferAnalysis.$s$fDataMap_$cdataCast2
"SPEC/BufferTransferAnalysis $fDataProgUnit @ Anno" [orphan] forall (v :: Data.Data.Data
                                                                            LanguageFortranTools.Anno)
  Language.Fortran.$fDataProgUnit @ (Data.Map.Internal.Map
                                       GHC.Base.String [GHC.Base.String])
                                  v
  = BufferTransferAnalysis.$s$fDataProgUnit
"SPEC/BufferTransferAnalysis $fData[] @ (ProgUnit Anno)" [orphan] forall (v :: Data.Data.Data
                                                                                 (Language.Fortran.ProgUnit
                                                                                    LanguageFortranTools.Anno))
  Data.Data.$fData[] @ (Language.Fortran.ProgUnit
                          LanguageFortranTools.Anno)
                     v
  = BufferTransferAnalysis.$s$fData[]
"SPEC/BufferTransferAnalysis $fData[] @ [Char]" [orphan] forall (v :: Data.Data.Data
                                                                        [GHC.Types.Char])
  Data.Data.$fData[] @ [GHC.Types.Char] v
  = BufferTransferAnalysis.$s$fDataArgList_$s$fData[]
"SPEC/BufferTransferAnalysis $fData[]7 @ (ProgUnit Anno)" [orphan] forall ($dData :: Data.Data.Data
                                                                                       (Language.Fortran.ProgUnit
                                                                                          LanguageFortranTools.Anno))
  Data.Data.$fData[]7 @ (Language.Fortran.ProgUnit
                           LanguageFortranTools.Anno)
                      $dData
  = BufferTransferAnalysis.$s$fData[]1
"SPEC/BufferTransferAnalysis $fData[]7 @ [Char]" [orphan] forall ($dData :: Data.Data.Data
                                                                              [GHC.Types.Char])
  Data.Data.$fData[]7 @ [GHC.Types.Char] $dData
  = BufferTransferAnalysis.$s$fData[]7
"SPEC/BufferTransferAnalysis $fEqFortran @ Anno" [orphan] forall (v :: GHC.Classes.Eq
                                                                         LanguageFortranTools.Anno)
  Language.Fortran.$fEqFortran @ (Data.Map.Internal.Map
                                    GHC.Base.String [GHC.Base.String])
                               v
  = BufferTransferAnalysis.$s$fEqFortran
"SPEC/BufferTransferAnalysis $fEqFortran_$c/= @ Anno" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                                                 LanguageFortranTools.Anno)
  Language.Fortran.$fEqFortran_$c/= @ (Data.Map.Internal.Map
                                         GHC.Base.String [GHC.Base.String])
                                    $dEq
  = BufferTransferAnalysis.$s$fEqFortran_$s$fEqFortran_$c/=
"SPEC/BufferTransferAnalysis $fEqMap @ [Char] @ [String]" [orphan] forall (v1 :: GHC.Classes.Eq
                                                                                   [GHC.Base.String])
                                                                          (v :: GHC.Classes.Eq
                                                                                  [GHC.Types.Char])
  Data.Map.Internal.$fEqMap @ [GHC.Types.Char]
                            @ [GHC.Base.String]
                            v
                            v1
  = BufferTransferAnalysis.$s$fEqFortran_$s$fEqMap
"SPEC/BufferTransferAnalysis $fEqMap_$c/= @ [Char] @ [String]" [orphan] forall ($dEq1 :: GHC.Classes.Eq
                                                                                           [GHC.Base.String])
                                                                               ($dEq :: GHC.Classes.Eq
                                                                                          [GHC.Types.Char])
  Data.Map.Internal.$fEqMap_$c/= @ [GHC.Types.Char]
                                 @ [GHC.Base.String]
                                 $dEq
                                 $dEq1
  = BufferTransferAnalysis.$s$fEqFortran_$s$fEqMap_$c/=
"SPEC/BufferTransferAnalysis $fEqVarName @ (Map String [String])" [orphan] forall (v :: GHC.Classes.Eq
                                                                                          (Data.Map.Internal.Map
                                                                                             GHC.Base.String
                                                                                             [GHC.Base.String]))
  Language.Fortran.$fEqVarName @ (Data.Map.Internal.Map
                                    GHC.Base.String [GHC.Base.String])
                               v
  = BufferTransferAnalysis.$s$fEqVarName
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

