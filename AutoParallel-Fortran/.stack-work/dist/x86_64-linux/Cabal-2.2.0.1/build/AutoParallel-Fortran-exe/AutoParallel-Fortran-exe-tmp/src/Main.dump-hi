
==================== FINAL INTERFACE ====================
2018-11-16 12:45:27.24515538 UTC

interface main:Main 8043
  interface hash: 2f6f6dda366ac7d1191655a29de5dd85
  ABI hash: 0d8ae6ffd57d890d1dbb9438dd704985
  export-list hash: b8b3715c4063093fa514513a9a1d17a3
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1c7edf2ed934ebe766a24a69cabfb66c
  opt_hash: 2c98c95d41c045ae9c2fb565ec8aabc6
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.addArg
  Main.combineAnnotationListings_map
  Main.cppDefineFlag
  Main.cppExcludeFlag
  Main.filenameFlag
  Main.fixedFormFlag
  Main.flags
  Main.gatherFlag
  Main.ioRWRoutineFlag
  Main.ioReadRoutineFlag
  Main.ioWriteRoutineFlag
  Main.loopFusionBoundFlag
  Main.main
  Main.mainFileFlag
  Main.noLoopFusionFlag
  Main.outDirectoryFlag
  Main.platFlag
  Main.processArgs
  Main.processArgs'
  Main.usageError
  Main.verboseFlag
module dependencies: BufferTransferAnalysis CodeEmitter
                     CodeEmitterUtils CombineKernels ConstantFolding
                     F95IntrinsicFunctions FortranGenerator FortranSynthesiser
                     Language.Fortran Language.Fortran.Lexer Language.Fortran.Parser
                     Language.Fortran.PreProcess LanguageFortranTools LoopAnalysis
                     MiniPP Platform PreProcessor SubroutineTable Transformer TupleTable
                     VarAccessAnalysis VarDependencyAnalysis Warning
package dependencies: array-0.5.2.0 base-4.11.1.0 binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.11.0 deepseq-1.4.3.0
                      directory-1.3.1.5 filepath-1.4.2 ghc-prim-0.5.2.0
                      haskell-src-1.0.3.0 integer-gmp-1.0.2.0 mtl-2.2.2 parsec-3.1.13.0
                      process-1.6.3.0 syb-0.7 text-1.2.3.1 time-1.8.0.2
                      transformers-0.5.5.0 unix-2.7.2.2
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         text-1.2.3.1:Data.Text.Lazy text-1.2.3.1:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         transformers-0.5.5.0:Control.Monad.Trans.Error
         syb-0.7:Data.Generics.Instances base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Traversable 7ad4edb9184ea1ae8e73f6b94f115c8c
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Err 5e26aa744981f14e0f1e4d29c44ac52e
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.Environment 7fdede11f96719870569cb0da1adac2f
import  -/  base-4.11.1.0:System.IO 1c239be44126f7b1ba512ea61300f4dc
import  -/  base-4.11.1.0:Text.Read 6c02630607b565ffcb34e8127673989b
import  -/  containers-0.5.11.0:Data.Map f51b9cf04edd738eb6d014be576b3403
import  -/  containers-0.5.11.0:Data.Map.Internal e02d23495520de11b8e9f3c9c93a4d11
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  BufferTransferAnalysis 1b9cb91eedda195e4119bea6461903a6
  exports: 1f1314a31692867571649814dbd72a51
  optimiseBufferTransfers c9133ed8259d91777ac1da6955a5d494
  replaceSubroutineAppearances 989358fdac4a0eb5615151efd62a3ada
import  -/  CodeEmitter 7e6454d238c525bccb07928dc5356150
  exports: e814ae8d9503c5a91dc3e8a4f44d4f38
  emit ae12542e71cbf109f2066e82ea1aadd7
import  -/  Language.Fortran e2add56600673959dbdfe1ac093795c9
  exports: 6ca1e7b188145fc0c602707ea4a1c428
import  -/  LanguageFortranTools 737e8abc5de089abcd0ce62660f9d159
  exports: a5a994dcb8ba92c93a8a354a063275b0
  appendToMap 77a73b9bc695373ab2fcd5b66619a1a4
  compilerName 716783fc2180cf5d40b0847b268cbee2
  parseFile 7f0e0ed770467ef59fd723f4841e3190
import  -/  Platform f89bd200c7cba5fa5e54a4e955c967a6
  exports: 612c87f0d4dc6be168827153c73a5d6a
  GPU ce7eeea50c582c5c921f4fd476914b6b
  Platform bf96e413e1e314750414fc6f536fbeb9
import  -/  SubroutineTable 489825aeafffaefb2cc10b4978448116
  exports: 2909798395eea1f9c7c6a08b6d2a2760
  MkSubRec 34e26216a9d2d4a97920de2d2cb5080c
  constructSubroutineTable 81053ae3fb885bba20a960d522b4fd81
  extractSubroutineArgumentTranslationMaps c2c71f5229514436db21d71ad022b581
import  -/  Transformer 26b2dfe20b00517af8ec6e66f41c4695
  exports: 8ef9a03e6b93904e45399289735afbb9
  combineKernelProgUnit_foldl 6a9af9340609cfcf089a517f76daa20e
  paralleliseProgUnit_foldl 1d1611291ad3f7fb87f3328b5dad3762
import  -/  syb-0.7:Data.Generics 2ddc257f9ac35414fc37ff4d19b4d388
06aab3386f0c7ca1680138881dbdb02f
  $sfindWithDefault1 ::
    a
    -> GHC.Base.String -> Data.Map.Internal.Map GHC.Base.String a -> a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U><S,1*U><S,1*U> -}
035730140519500d19c3fce395bd343a
  $sinsert_$sgo13 ::
    GHC.Base.String
    -> GHC.Base.String
    -> a1
    -> Data.Map.Internal.Map GHC.Base.String a1
    -> Data.Map.Internal.Map GHC.Base.String a1
  {- Arity: 4, Strictness: <L,U><S,1*U><L,U><S,1*U> -}
13132126866e94b66e26dccdc3337bd8
  $slookup1 ::
    [GHC.Types.Char]
    -> Data.Map.Internal.Map [GHC.Types.Char] a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
89d2811d7807a1e2f9ea53f3bad6384c
  $wcombineAnnotationListings_map ::
    [(GHC.Base.String, GHC.Base.String)]
    -> GHC.Base.String
    -> GHC.Base.String
    -> (GHC.Base.String, GHC.Base.String, GHC.Base.String)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ (w :: [(GHC.Base.String, GHC.Base.String)])
                   (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String) ->
                 letrec {
                   go3 :: [(GHC.Base.String, [GHC.Types.Char])]
                          -> (GHC.Base.String, GHC.Base.String, [GHC.Types.Char])
                          -> (GHC.Base.String, GHC.Base.String, GHC.Base.String)
                     <join 2> {- Arity: 2, Strictness: <S,1*U><L,1*U(U,U,U)> -}
                   = \ (ds :: [(GHC.Base.String, [GHC.Types.Char])])
                       (eta :: (GHC.Base.String, GHC.Base.String, [GHC.Types.Char])) ->
                     case ds of wild {
                       [] -> eta
                       : y ys
                       -> go3
                            ys
                            (case y of wild1 { (,) filename anno ->
                             case GHC.Base.eqString filename ww of wild2 {
                               GHC.Types.False -> eta
                               GHC.Types.True -> (filename, ww1, anno) } }) }
                 } in
                 go3 w (ww, ww1, GHC.Types.[] @ GHC.Types.Char)) -}
20ea582681f227a05d7068ba2e53137d
  addArg ::
    Data.Map.Internal.Map GHC.Base.String [GHC.Base.String]
    -> GHC.Base.String
    -> GHC.Base.String
    -> Data.Map.Internal.Map GHC.Base.String [GHC.Base.String]
  {- Arity: 3, Strictness: <S,U><S,U><L,U>,
     Unfolding: (\ (argMap :: Data.Map.Internal.Map
                                GHC.Base.String [GHC.Base.String])
                   (flag :: GHC.Base.String)
                   (value :: GHC.Base.String) ->
                 Main.$sinsert_$sgo13
                   @ [GHC.Base.String]
                   flag
                   flag
                   (GHC.Base.++
                      @ [GHC.Types.Char]
                      (Main.$sfindWithDefault1
                         @ [GHC.Base.String]
                         (GHC.Types.[] @ GHC.Base.String)
                         flag
                         argMap)
                      (GHC.Types.:
                         @ [GHC.Types.Char]
                         value
                         (GHC.Types.[] @ [GHC.Types.Char])))
                   argMap) -}
071bf07c7a1bff8a704431ad629b1109
  combineAnnotationListings_map ::
    [(GHC.Base.String, GHC.Base.String)]
    -> (GHC.Base.String, GHC.Base.String)
    -> (GHC.Base.String, GHC.Base.String, GHC.Base.String)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: [(GHC.Base.String, GHC.Base.String)])
                   (w1 :: (GHC.Base.String, GHC.Base.String)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 Main.$wcombineAnnotationListings_map w ww1 ww2 }) -}
f3d95b52b431e89c4d0efff61ba7885d
  cppDefineFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.cppDefineFlag1) -}
34c0cefbdd9bfbea2069568eb32078f0
  cppDefineFlag1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-D"#) -}
0155edaf3323c10819a981807e03584b
  cppExcludeFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.cppExcludeFlag1) -}
1c4b83a60fa4cb9d8eec90ce7fb39cb9
  cppExcludeFlag1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-X"#) -}
36d322ae769d953d73ba2980cf960d0c
  filenameFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.filenameFlag1) -}
2deb2cc87014bb704036653efdaa0fa0
  filenameFlag1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-modules"#) -}
40c607fec4244c9bb24ca25e80e57b24
  fixedFormFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.fixedFormFlag1) -}
856837991824c006203ac92e397319bc
  fixedFormFlag1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-ffixed-form"#) -}
969fe7d603b7c4c72ad7deacd2e591fa
  flags :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.filenameFlag
                   Main.flags1) -}
b69f1b5d99af7935b441f2683683002e
  flags1 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.outDirectoryFlag
                   Main.flags2) -}
ca8f220372b35bb02dddf317588e2792
  flags10 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.fixedFormFlag
                   Main.flags11) -}
8c8708fde9ff44ee9a17d305c3dfbb6a
  flags11 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.noLoopFusionFlag
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
528f11291a9f3b2b12accf15d9528793
  flags2 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.loopFusionBoundFlag
                   Main.flags3) -}
59473ec0a0ffd0e8d0611fb6e0648acd
  flags3 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.platFlag
                   Main.flags4) -}
308c5539729542c95fdf8188763826fd
  flags4 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.cppDefineFlag
                   Main.flags5) -}
962b767fd1275f0a2d73476d2c246e4f
  flags5 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.cppExcludeFlag
                   Main.flags6) -}
741839a8041346204fd8d05b4ed4d9a1
  flags6 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.verboseFlag
                   Main.flags7) -}
90a6254c671ca2106aaa16a738422c26
  flags7 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.mainFileFlag
                   Main.flags8) -}
c9e7ace08922cc652eeb8ff42f3267c7
  flags8 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.ioWriteRoutineFlag
                   Main.flags9) -}
d64573eff3305f2d884c57a1fd24c9b6
  flags9 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.ioReadRoutineFlag
                   Main.flags10) -}
50d34997a263af6c24e6975a80958fd8
  gatherFlag ::
    GHC.Base.String
    -> [GHC.Base.String]
    -> [GHC.Base.String]
    -> Data.Map.Internal.Map GHC.Base.String [GHC.Base.String]
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U> -}
7d942ac42bed3b334022aeba3088f499
  gatherFlag_$sgatherFlag ::
    [[GHC.Types.Char]]
    -> [GHC.Types.Char]
    -> [[GHC.Types.Char]]
    -> [GHC.Types.Char]
    -> Data.Map.Internal.Map GHC.Base.String [GHC.Base.String]
  {- Arity: 4, Strictness: <L,U><L,U><S,1*U><S,U> -}
c217a0cfad26371f200fafbb21b1c36f
  ioRWRoutineFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.ioRWRoutineFlag1) -}
02e479ed76b86c3224afb34cc335f6df
  ioRWRoutineFlag1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-iorw"#) -}
816c9b4c1344304822f01848bebe0670
  ioReadRoutineFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.ioReadRoutineFlag1) -}
279b17377c419a0573e6881d69639046
  ioReadRoutineFlag1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-ioread"#) -}
4c45c42a6cfc1711f0b3d9498bdc231a
  ioWriteRoutineFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.ioWriteRoutineFlag1) -}
348f838e52abd3a1be3df1000cde0e8a
  ioWriteRoutineFlag1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-iowrite"#) -}
bb929513fff583045ceda6a94e8e9b73
  loopFusionBoundFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.loopFusionBoundFlag1) -}
ce32df855485651282d3737e08eaef95
  loopFusionBoundFlag1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-lfb"#) -}
4f7665e095be8343d045cea71b20b08e
  main :: GHC.Types.IO [()]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <[()]>_R)) -}
0ad2ee5594b375ffc54114643c3a1140
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [()] #)
  {- Arity: 1, Strictness: <S,U> -}
5b782520bb1ec66a1e94d1601b71e39e
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [()] #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ [()]
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <[()]>_R))) -}
ca5ec95d082ea8847875fda0f8f12e9d
  mainFileFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.mainFileFlag1) -}
fa7a5e709a672409db9b588e5b681446
  mainFileFlag1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-main"#) -}
41a062e065400f995b72d1ade3896bcb
  noLoopFusionFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.noLoopFusionFlag1) -}
5e11001c7117b892963e3eeb2edbdfbc
  noLoopFusionFlag1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-N"#) -}
b1b341bb0f817c45c6a4308fc6f4d02e
  outDirectoryFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.outDirectoryFlag1) -}
727953f9e474ad4119b7c22b1812ce9f
  outDirectoryFlag1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-out"#) -}
9660159bc4b4016bbf5eb550bbcd762a
  platFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.platFlag1) -}
d31f77d17dacf50c52dbcfe406eda2a5
  platFlag1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-plat"#) -}
260db44dcd5fad91559415b5f0e87ad0
  processArgs ::
    [GHC.Base.String]
    -> Data.Map.Internal.Map GHC.Base.String [GHC.Base.String]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [GHC.Base.String]) ->
                 case ds of wild {
                   []
                   -> Main.usageError
                        @ (Data.Map.Internal.Map GHC.Base.String [GHC.Base.String])
                   : flag ds1
                   -> case ds1 of wild1 {
                        [] -> Main.processArgs1
                        : arg args
                        -> case GHC.List.elem
                                  @ GHC.Base.String
                                  GHC.Classes.$fEq[]_$s$fEq[]1
                                  flag
                                  Main.flags of wild2 {
                             GHC.Types.False
                             -> Main.gatherFlag_$sgatherFlag
                                  (GHC.Types.[] @ GHC.Base.String)
                                  flag
                                  wild1
                                  Main.filenameFlag
                             GHC.Types.True
                             -> Main.gatherFlag_$sgatherFlag
                                  (GHC.Types.[] @ GHC.Base.String)
                                  arg
                                  args
                                  flag } } }) -}
8bc9b51b765ed12f7c54557580a2334d
  processArgs' ::
    [GHC.Base.String]
    -> Data.Map.Internal.Map GHC.Base.String [GHC.Base.String]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [GHC.Base.String]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ GHC.Base.String @ [GHC.Base.String]
                   : flag ds1
                   -> case ds1 of wild1 {
                        []
                        -> Main.$sinsert_$sgo13
                             @ [GHC.Base.String]
                             flag
                             flag
                             (GHC.Types.[] @ GHC.Base.String)
                             (Data.Map.Internal.Tip @ GHC.Base.String @ [GHC.Base.String])
                        : arg args
                        -> case GHC.List.elem
                                  @ GHC.Base.String
                                  GHC.Classes.$fEq[]_$s$fEq[]1
                                  flag
                                  Main.flags of wild2 {
                             GHC.Types.False -> Main.processArgs'1 flag
                             GHC.Types.True
                             -> Main.gatherFlag_$sgatherFlag
                                  (GHC.Types.[] @ GHC.Base.String)
                                  arg
                                  args
                                  flag } } }) -}
e90899664337529274c7b540de3da03b
  processArgs'1 ::
    GHC.Base.String
    -> Data.Map.Internal.Map GHC.Base.String [GHC.Base.String]
  {- Arity: 1, Strictness: <B,1*U>x -}
8aec60dc065a097cdf0be28796866bee
  processArgs'_$sprocessArgs' ::
    [GHC.Types.Char]
    -> [[GHC.Types.Char]]
    -> Data.Map.Internal.Map GHC.Base.String [GHC.Base.String]
  {- Arity: 2, Strictness: <S,U><S,1*U>,
     Unfolding: (\ (sc :: [GHC.Types.Char])
                   (sc1 :: [[GHC.Types.Char]]) ->
                 case sc1 of wild {
                   []
                   -> Main.$sinsert_$sgo13
                        @ [GHC.Base.String]
                        sc
                        sc
                        (GHC.Types.[] @ GHC.Base.String)
                        (Data.Map.Internal.Tip @ GHC.Base.String @ [GHC.Base.String])
                   : arg args
                   -> case GHC.List.elem
                             @ GHC.Base.String
                             GHC.Classes.$fEq[]_$s$fEq[]1
                             sc
                             Main.flags of wild1 {
                        GHC.Types.False -> Main.processArgs'1 sc
                        GHC.Types.True
                        -> Main.gatherFlag_$sgatherFlag
                             (GHC.Types.[] @ GHC.Base.String)
                             arg
                             args
                             sc } }) -}
5a2d52c74e518082ac6839873de2f25a
  processArgs1 ::
    Data.Map.Internal.Map GHC.Base.String [GHC.Base.String]
  {- Strictness: x -}
14c9aa52c7e1684302373521ae96930e
  usageError :: a
  {- Strictness: x -}
0fe1cad098a39b55fa1760aa4fe22c67
  verboseFlag :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.verboseFlag1) -}
e7244b4f7419b75faef85f0124ae0c04
  verboseFlag1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-v"#) -}
"SC:gatherFlag1" forall (sc :: [[GHC.Types.Char]])
                        (sc1 :: [GHC.Types.Char])
                        (sc2 :: [[GHC.Types.Char]])
                        (sc3 :: [GHC.Types.Char])
  Main.gatherFlag sc3 (GHC.Types.: @ GHC.Base.String sc1 sc2) sc
  = Main.gatherFlag_$sgatherFlag sc sc1 sc2 sc3
"SC:processArgs'1" forall (sc :: [GHC.Types.Char])
                          (sc1 :: [[GHC.Types.Char]])
  Main.processArgs' (GHC.Types.: @ GHC.Base.String sc sc1)
  = Main.processArgs'_$sprocessArgs' sc sc1
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

